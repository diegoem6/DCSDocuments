{"version":3,"sources":["context/auth/authContext.js","context/alerts/alertContext.js","components/auth/login.js","components/auth/newUser.js","layout/header.js","context/tagdescriptor/tagDescriptorContext.js","context/system/systemContext.js","components/tagsdescriptors/newTagDescriptor.js","components/tagsdescriptors/tagDescriptor.js","components/tagsdescriptors/tagDescriptorList.js","components/tagsdescriptors/searchTagDescriptor.js","context/asset/assetContext.js","layout/sidebarDescriptors.js","components/tagsdescriptors/tagsDescriptors.js","context/alerts/alertReducer.js","types/index.js","context/alerts/alertState.js","context/auth/authReducer.js","config/axios.js","config/token.js","context/auth/authState.js","context/asset/assetReducer.js","context/asset/assetState.js","context/system/systemReducer.js","context/system/systemState.js","layout/menu.js","context/tagdescriptor/tagDescriptorReducer.js","context/tagdescriptor/tagDescriptorState.js","components/assets/asset.js","components/assets/assetList.js","components/assets/assetFrom.js","layout/sidebar.js","components/system/systemForm.js","components/system/system.js","components/system/systemList.js","components/assets/assets.js","components/routes/privateRoute.js","App.js","serviceWorker.js","index.js"],"names":["authContext","createContext","alertContext","Login","props","useState","email","password","user","setUser","onChange","e","target","name","value","aContext","useContext","alert","showAlert","auContext","loginUser","authenticated","message","resetMessage","useEffect","msg","category","history","push","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","Newuser","rpassword","setuser","createUser","length","Header","getUser","logOff","onClick","tagDescriptorContext","systemContext","NewTagDescriptor","tdContext","tagname_ok","createTagDescriptor","tagdescriptor","updateTagDescriptor","validateTagname","systemSelected","tagname","setTagname","description","setDescription","icon","seticon","currentTagDescriptor","console","log","newTagDescriptor","system","_id","readOnly","onBlur","initialValue","init","height","menubar","plugins","toolbar","toolbar_sticky","paste_retain_style_properties","onEditorChange","TagDescriptor","tContext","deleteTagDescriptor","selectTagDescriptor","showForm","href","process","editTagDescriptor","confirmAlert","title","buttons","label","TagDescriptorList","searchtagdescriptors","getTagsDescriptors","offset","perPage","currentPage","pageCount","data","pag","setPag","Math","ceil","slice","map","tgd","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","SearchTagDescriptor","searchTagsDescriptors","search","setSearch","assetContext","SidebarDescriptors","assetsTree","getAssetTree","deselectTagDescriptor","sContext","selectSystem","deselectSystem","debounceTime","disableKeyboard","hasSearch","onClickItem","level","active","selectSystemOnClick","resetOpenNodesOnDataUpdate","Tagsdescriptors","form","state","action","payload","AlertState","useReducer","alertReducer","dispatch","Provider","setTimeout","children","localStorage","setItem","token","loading","removeItem","axiosClient","axios","create","baseURL","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","authReducer","a","post","res","response","get","error","assets","asset","filter","AssetState","assetReducer","getAssets","addAsset","deleteAsset","idAsset","delete","assetsTree_temp","j","i","forEach","i_asset","key","nodes","i_system","showError","selectAsset","systems","SystemState","systemReducer","addSystem","getSystems","params","updateSystem","put","deleteSystem","Menu","tagdescriptors","indexOf","TagDescriptorState","tagDescriptorReducer","tagsdescriptors","getTagDescriptor","ptagdescriptor","idTagDescriptor","tag_descriptor_modified","id_tagdescriptor","Asset","AssetList","asContext","TransitionGroup","CSSTransition","timeout","classNames","AssetForm","setAsset","Sidebar","SystemForm","setError","setSystem","assetActual","System","updateSystemOnClick","SystemList","assetSelected","Assets","PrivateRoute","Component","component","render","authToken","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.651ac6de.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nconst authContext = createContext();\n\nexport default authContext;","import { createContext }  from 'react'\n\nconst alertContext = createContext();\n\nexport default alertContext;","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport authContext from \"../../context/auth/authContext\";\nimport alertContext from \"../../context/alerts/alertContext\";\n\nconst Login = (props) => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const {email, password} = user;\n\n  const onChange = (e) => {\n    setUser({\n          ...user, \n          [e.target.name] : e.target.value\n        })\n  };\n   const aContext = useContext(alertContext)\n   const {alert, showAlert} = aContext\n   const auContext = useContext(authContext);\n   const {loginUser, authenticated, message, resetMessage} = auContext\n\n\n   useEffect(()=>{\n      if (message){\n        showAlert(message.msg,message.category)\n        resetMessage()\n      }\n      // eslint-disable-next-line\n   },[message])\n\n   useEffect(()=>{\n       if(authenticated){\n         props.history.push('/menu')\n       }\n       // eslint-disable-next-line\n   },[authenticated, props.history])\n\n   const onSubmit = (e) => {\n     e.preventDefault()\n       if (email.trim()===\"\" || password.trim()===\"\"){\n         showAlert(\"Todos los campos son obligatorios\",\"alerta-error\")\n         return;\n       }\n       loginUser({\n         email,\n         password\n       })\n     };\n\n  return (\n    <div className=\"form-usuario\">\n     \n     {alert? (<div className={`alerta ${alert.category}`}>{alert.msg} </div>)\n                    :null}\n           \n      <div className=\"contenedor-form sombra-dark\">\n        <h1>Iniciar Sesión</h1>\n\n        <form \n            onSubmit = {onSubmit}\n        >\n          <div className=\"campo-form\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={onChange}\n              value={email}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={onChange}\n              value={password}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <input\n              type=\"submit\"\n              className=\"btn btn-primario btn-block\"\n              value=\"Iniciar Sesión\"\n            />\n          </div>\n        </form>\n        <Link \n            to={'/newuser'}\n            className=\"enlace-cuenta\">\n        >\n            Obtener cuenta\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React,{useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport alertContext from '../../context/alerts/alertContext'\nimport authContext from '../../context/auth/authContext'\n\nconst Newuser = (props) => {\n    const [user, setuser] = useState({\n        name:\"\", \n        email: \"\" ,\n        password: \"\",\n        rpassword:\"\"\n      });\n    \n\n      const aContext = useContext(alertContext)\n      const {alert, showAlert} = aContext\n\n      const auContext = useContext(authContext)\n      const {authenticated, message, createUser, resetMessage} = auContext\n\n      const {name, email, password, rpassword} = user;\n    \n\n      useEffect(()=>{\n          if(authenticated){\n            props.history.push('/')\n          }\n          if (message){\n            showAlert(message.msg,message.category)\n            resetMessage()\n          }\n          // eslint-disable-next-line\n      },[authenticated, message, props.history])\n\n      const onChange = (e) => {\n            setuser({\n              ...user, \n              [e.target.name] : e.target.value\n            })\n      };\n    \n      const onSubmit = (e) => {\n        \n        e.preventDefault();\n        if (name.trim()===\"\"||\n            email.trim()===\"\"||\n            password.trim()===\"\"||\n            rpassword.trim()===\"\"){\n                \n                showAlert(\"Todos los campos son obligatorios\",\"alerta-error\")\n                return;\n        }\n          \n        if (password.length < 6){\n            showAlert(\"El password debe tener al menos 6 caracteres\",\"alerta-error\")\n            return;\n        }\n\n        if (password !== rpassword){\n            showAlert(\"Los passwords deben ser iguales\",\"alerta-error\")\n          return;\n        }\n        createUser({\n          name,\n          email,\n          password\n        })\n      };\n    \n      return (\n        <div className=\"form-usuario\">\n          {alert? (<div className={`alerta ${alert.category}`}>{alert.msg} </div>)\n                    :null}\n          <div className=\"contenedor-form sombra-dark\">\n            <h1>Nueva cuenta</h1>\n    \n            <form \n                onSubmit = {onSubmit}\n            >\n                <div className=\"campo-form\">\n                <label htmlFor=\"nombre\">Nombre</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder=\"Nombre\"\n                  onChange={onChange}\n                  value={name}\n                />\n              </div>\n\n              <div className=\"campo-form\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={onChange}\n                  value={email}\n                />\n              </div>\n    \n              <div className=\"campo-form\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={onChange}\n                  value={password}\n                />\n              </div>\n\n              <div className=\"campo-form\">\n                <label htmlFor=\"confirmar\">Confirmar password</label>\n                <input\n                  type=\"password\"\n                  id=\"rpassword\"\n                  name=\"rpassword\"\n                  placeholder=\"Repeti tu password\"\n                  onChange={onChange}\n                  value={rpassword}\n                />\n              </div>\n    \n              <div className=\"campo-form\">\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primario btn-block\"\n                  value=\"Registrar cuenta\"\n                />\n              </div>\n            </form>\n            <Link \n                to={'/'}\n                className=\"enlace-cuenta\">\n            >\n                Volver a Login\n            </Link>\n          </div>\n        </div>\n      );\n}\n \n \nexport default Newuser;","import React, {useContext, useEffect} from 'react';\nimport authContext from '../context/auth/authContext'\n\n\nconst Header = () => {\n    const auContext = useContext(authContext)\n    const {user,getUser,logOff} = auContext;\n\n    useEffect(() => {\n        getUser()\n        // eslint-disable-next-line\n    }, [])\n    \n    return (  \n        <header className=\"app-header\">\n            {user ? <p className=\"nombre-usuario\">Hola <span>{user.name}</span></p> : null}\n            \n            <nav className=\"nav-principal\">\n                <button \n                    className = \"btn btn-blank cerrar-sesion\"\n                    onClick={logOff}\n                >Cerrar Sesión</button>\n            </nav>\n        </header>\n    );\n}\n \nexport default Header;","import {createContext} from 'react'\n\nconst tagDescriptorContext = createContext();\n\nexport default tagDescriptorContext;","import {createContext} from 'react'\n\nconst systemContext = createContext();\n\nexport default systemContext;","import React,{Fragment, useState, useContext, useEffect} from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext' \nimport systemContext from '../../context/system/systemContext' \nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\nimport alertContext from '../../context/alerts/alertContext';\nimport { Editor } from '@tinymce/tinymce-react';\n//import Files from 'react-files'\n\nconst NewTagDescriptor = () => {\n    \n    const tdContext = useContext(tagDescriptorContext)\n    const {tagname_ok, message, createTagDescriptor, tagdescriptor, resetMessage, updateTagDescriptor, validateTagname} = tdContext\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n\n    const aContext = useContext(alertContext)\n    const {showAlert} = aContext\n\n\n    const [tagname, setTagname] = useState('')\n    const [description, setDescription] = useState('')\n    // TODO: attachments\n    // const [attachments, setattachments] = useState({\n    //     files:[]\n    // })\n    \n    const [icon, seticon] = useState('')\n      \n \n    useEffect(() => {\n        if (tagdescriptor !== null && tagdescriptor.length>0){\n            const [currentTagDescriptor] = tagdescriptor\n            setTagname(currentTagDescriptor.tagname)\n            setDescription(currentTagDescriptor.description)\n            \n        }else{\n            setTagname('')\n            setDescription('')\n        }\n        // eslint-disable-next-line\n    }, [])\n\n      \n    useEffect(() => {\n        if (message){\n            showAlert(message.msg,message.category)\n            console.log(message.category)\n            if(message.category===\"alerta-error\"){\n                seticon('-red')\n            }\n            else{\n                seticon('')\n            }\n            resetMessage();\n        }\n        // eslint-disable-next-line\n    }, [message])\n\n\n\n    if (!systemSelected) return null\n\n    const onChangeTagDescriptor = (e)=>{\n        setTagname(e.target.value)\n    }\n\n    const onBlurTagDescriptor = (e)=>{\n        if (!(tagdescriptor !== null && tagdescriptor.length>0)){\n            validateTagname (e.target.value);\n        }\n        seticon('')\n    }\n\n    const onChangeRichText = (value)=>{\n        setDescription(value)\n    }\n\n    const onSubmitTagDescriptor = (e)=>{\n        e.preventDefault();\n\n        //hacer validaciones y reseteo de form\n        if (tagname.trim() === '' || description.trim()===''){\n            //alert(description.trim())\n            //alert(tagname.trim())\n            showAlert('Debe completar tagname y descripción','alerta-error')\n            return;\n        }\n\n        \n\n        // llamo a agregar proyecto\n        let newTagDescriptor = {}\n        newTagDescriptor.tagname = tagname\n        newTagDescriptor.description = description\n        newTagDescriptor.system = systemSelected._id\n        \n        \n        //TODO: attachmentss\n        //newTagDescriptor.attachments = attachments\n\n        if (tagdescriptor !== null && tagdescriptor.length>0){\n            const [currentTagDescriptor] = tagdescriptor\n            newTagDescriptor._id = currentTagDescriptor._id\n            updateTagDescriptor(newTagDescriptor)  \n        }else{\n            \n            if(tagname_ok === false){\n                \n                if (message){\n                    showAlert(message.msg,message.category)\n                    resetMessage()\n                }else{\n                    showAlert(\"El tag descriptor para ese tagname ya existe\",\"alerta-error\")\n                }\n                return;\n            }\n            createTagDescriptor(newTagDescriptor)\n\n        }\n    }\n\n    // TODO: attachments\n    // const onFilesChange = (files) => {\n    //     console.log(files)\n    //     console.log(files.type)\n    //     setattachments({...attachments,\n    //             files:files})\n    // }\n    \n    // const onFilesError = (error, file) => {\n    //     console.log('error code ' + error.code + ': ' + error.message)\n    // }\n    \n    return ( \n        <Fragment>\n                \n                <h2>Nuevo tags descriptor en el sistema: {systemSelected.name}</h2>\n                    \n                    <form   \n                        className=\"formulario-nuevo-proyecto\"\n                        onSubmit = {onSubmitTagDescriptor}\n                        >\n                        <input  \n                            type=\"text\"\n                            className={`input-text${icon}`}\n                            placeholder=\"Tag name\"\n                            name=\"tagname\"\n                            value ={tagname}\n                            onChange = {onChangeTagDescriptor}\n                            readOnly = {(tagdescriptor !== null && tagdescriptor.length>0)}\n                            onBlur = {onBlurTagDescriptor}\n                        />\n                        \n                        {/* TODO: cambio de editor */}\n                        {/* <SunEditor \n                            placeholder=\"descripción del tag\"\n                            name=\"description\"\n                            setOptions={{\n                                height: 300}}\n                            setContents ={description}\n                            onChange = {onChangeRichText}\n                        />  */}\n                        \n                        <Editor\n                            initialValue={description}\n                            init={{\n                            height: 500,\n                            menubar: 'file edit view insert format tools table help',\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',\n                            toolbar_sticky: true,\n                            paste_retain_style_properties: \"all\"\n                            }\n                            }\n                            onEditorChange={onChangeRichText}\n                        />\n\n\n\n                        {/* TODO: attachments \n                        <Files\n                            className='files-dropzone'\n                            onChange={onFilesChange}\n                            onError={onFilesError}\n                            accepts={['image/png', '.jpg', '.pdf', 'audio/*']}\n                            multiple\n                            maxFiles={3}\n                            maxFileSize={10000000}\n                            minFileSize={0}\n                            clickable\n                            >\n                            Drop files here or click to upload\n                        </Files>\n                        */}\n                        {(tagdescriptor !== null && tagdescriptor.length>0) ?\n                    \n                            (<input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value = \"Guardar Tag\"\n                            /> )\n                            :\n                            (<input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value = \"Agregar Tag\"\n                            /> )\n                        }\n                          \n                    </form>\n                \n        </Fragment>\n     );\n}\n \nexport default NewTagDescriptor;","import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom'\nimport tagDescriptorContext from \"../../context/tagdescriptor/tagDescriptorContext\";\nimport { confirmAlert } from 'react-confirm-alert';\n//import 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst TagDescriptor = ({tagdescriptor}) => {\n\n    const tContext = useContext(tagDescriptorContext)\n    const {deleteTagDescriptor, selectTagDescriptor, showForm} = tContext\n    const editTagDescriptor = (tagdescriptor)=>{\n        selectTagDescriptor(tagdescriptor._id);\n        showForm();\n    }\n    \n\n    const deleteTagDescriptorOnCick = () =>{\n        deleteTagDescriptor(tagdescriptor._id)\n    }\n    \n    const showDialogConfirm = ()=>{\n        confirmAlert({\n            title: 'Confirmar',\n            message: '¿Estás seguro de eliminar el descriptor?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => deleteTagDescriptorOnCick()\n              },\n              {\n                label: 'No',\n                onClick: () => console.log(\"no\")\n              }\n            ]\n          });\n    }\n    return ( \n        <li className=\"tarea sombra\">\n            <p>{tagdescriptor.tagname} </p>\n\n            <div className=\"acciones\">\n                \n               \n                <a \n                    target='_blank'\n                    href={`${process.env.REACT_APP_SHOWTAG_URL}/showTagDescriptor/${tagdescriptor.tagname}`}\n                    className=\"btn btn-primario\">\n                    Ver\n                </a>\n                <button \n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick = {()=>{editTagDescriptor(tagdescriptor)}}\n                >Editar </button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={showDialogConfirm}\n                >Eliminar</button>\n                {/* <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={showDialogConfirm}\n                >Confirm</button> */}\n                \n            </div>\n        </li> \n    \n\n     );\n}\n \nexport default TagDescriptor;","import React, {useEffect, useContext, Fragment, useState} from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport TagDescriptor from './tagDescriptor'\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport ReactPaginate from 'react-paginate';\n\n\n\nconst TagDescriptorList = () => {\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n    \n    const tContext = useContext(tagDescriptorContext)\n    const {searchtagdescriptors, getTagsDescriptors} = tContext\n\n    const [pag, setPag] = useState(\n            {\n                offset:0,\n                perPage:10,\n                currentPage:0,\n                pageCount:0,\n                data:[]\n            })\n    \n\n    useEffect(() => {\n        const listTagsDescriptors = ()=>{\n            if (systemSelected){\n                getTagsDescriptors(systemSelected._id)\n            }\n        }\n        listTagsDescriptors()\n        // eslint-disable-next-line\n    }, [systemSelected])\n\n    useEffect(() => {\n        if (systemSelected){\n            setPag(\n                {...pag,\n                    pageCount: Math.ceil(searchtagdescriptors.length/pag.perPage),\n                    data:searchtagdescriptors,\n                    offset:0,\n                    currentPage:0\n                })\n            \n        }\n        // eslint-disable-next-line\n    }, [searchtagdescriptors])\n\n    if(!systemSelected) {\n        return <h2>Seleccione un sistema</h2>\n    }\n    \n    if (!searchtagdescriptors){\n        return <p>No hay documentos para el sistema seleccionado</p>\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * pag.perPage;\n        setPag(\n            {...pag,\n                currentPage: selectedPage,\n                offset:offset\n            })\n\n    };\n\n    return ( \n        <Fragment>\n            <h2>Tags descriptors del sistema: {systemSelected.name}</h2>\n            <ul>\n                {(searchtagdescriptors.length===0)?\n                    (<li className=\"tarea\"><p>No hay documentos para el sistema seleccionado</p></li>)\n                :\n                    pag.data.slice(pag.offset,pag.offset+pag.perPage).map(tgd =>(\n                        <TagDescriptor\n                            tagdescriptor={tgd}\n                        />\n                    ))\n                }\n            </ul>\n            <div>\n                <ReactPaginate\n                    previousLabel={\"<\"}\n                    nextLabel={\">\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pag.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n            </div>\n        </Fragment>\n     );\n}\n \nexport default TagDescriptorList;","import React, {useContext, useState, useEffect} from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext' \nimport systemContext from '../../context/system/systemContext';\n\n\nconst SearchTagDescriptor = () => {\n    \n    const tdContext = useContext(tagDescriptorContext)\n    const {showForm, searchTagsDescriptors} = tdContext\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n\n    \n    const [search, setSearch ] = useState('')\n\n    useEffect(() => {\n        setSearch('')\n        // eslint-disable-next-line\n    }, [systemSelected])\n\n    if (!systemSelected) return null\n\n   \n\n    const onClickNewTagDescription = ()=>{\n        showForm()\n    }\n    \n    const onChange = (e)=>{\n        setSearch(e.target.value)\n        searchTagsDescriptors(e.target.value)\n    }\n    return (  \n        <div className=\"formulario\">\n            <div \n                className=\"contenedor-input\">\n                <input \n                    type=\"text\"\n                    className=\"input-text\"\n                    placeholder=\"buscar tag descriptor\"\n                    name=\"search\"\n                    value={search}\n                    onChange = {onChange}\n                />\n            </div>\n            <div \n                className=\"contenedor-input\">\n                <button\n                        type=\"button\"\n                        className=\"btn btn-secundario btn-submit btn-block\"\n                        onClick = {onClickNewTagDescription}\n                    >Nuevo tag descriptor</button>\n            </div>\n       </div>\n    );\n}\n \nexport default SearchTagDescriptor;","import {createContext} from 'react'\n\nconst assetContext = createContext();\n\nexport default assetContext;","import React, {useContext, useEffect} from 'react';\nimport { Link } from 'react-router-dom'\nimport assetContext from '../context/asset/assetContext'\nimport TreeMenu from 'react-simple-tree-menu'\nimport tagDescriptorContext from '../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../context/system/systemContext';\n\n\n\nconst SidebarDescriptors = () => {\n    \n\n    const aContext = useContext(assetContext)\n    const {assetsTree, getAssetTree} = aContext\n\n    const tContext = useContext(tagDescriptorContext)\n    const {deselectTagDescriptor} = tContext\n\n    const sContext = useContext(systemContext)\n    const {selectSystem, deselectSystem} = sContext\n\n    \n    useEffect(() => {\n        const initAssetTree = () =>{\n            getAssetTree();\n        }\n        initAssetTree()\n        // eslint-disable-next-line\n    }, [])\n\n    const selectSystemOnClick = (system)=>{\n        selectSystem(system);\n        deselectTagDescriptor();\n\n    }\n\n    return ( \n        <aside>\n            <h1>Descriptores<span>DCS</span></h1>\n           \n            <div className=\"proyectos\">\n                \n                <h2>Assets</h2>  \n                <TreeMenu \n                    data={assetsTree} \n                    selected={false}\n                    debounceTime={125}\n                    disableKeyboard={true}\n                    hasSearch={false}\n                    onClickItem={({_id,level, label})=>{\n                        if (level===1){\n                            let system = {}\n                            system._id = _id\n                            system.name = label\n                            system.active = true\n                            selectSystemOnClick(system)\n                        }else{\n                            deselectSystem()\n                        }\n                    }}\n                    resetOpenNodesOnDataUpdate={false}    \n                /> \n            </div>  \n            <div className=\"link-menu-div\">\n                <Link \n                    to={'/menu'}\n                    className=\"link-menu\">\n                &#60;\n                    Menu\n                </Link>\n            </div>\n        </aside>\n\n     );\n}\n \nexport default SidebarDescriptors;","import React, {useContext, useEffect} from 'react';\nimport authContext from '../../context/auth/authContext'\nimport Header from '../../layout/header'\nimport NewTagDescriptor from './newTagDescriptor';\nimport TagDescriptorList from'./tagDescriptorList'\nimport SearchTagDescriptor from './searchTagDescriptor';\nimport SidebarDescriptors from '../../layout/sidebarDescriptors';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../../context/system/systemContext';\nimport alertContext from '../../context/alerts/alertContext';\n\n\nconst Tagsdescriptors = () => {\n\n    const auContext = useContext(authContext)\n    const {getUser} = auContext;\n\n    const tContext = useContext(tagDescriptorContext)\n    const {form} = tContext\n\n    const sContext = useContext(systemContext)\n    const {deselectSystem} = sContext\n\n    const aContext = useContext(alertContext)\n    const {alert} = aContext\n\n\n    useEffect(() => {\n        getUser();\n        deselectSystem();\n        // eslint-disable-next-line\n    }, [])\n    \n    \n\n    return ( \n          <div className=\"contenedor-app\">\n              {alert? (<div className={`alerta ${alert.category}`}>{alert.msg} </div>)\n                    :null}\n              <SidebarDescriptors/>\n              \n              <div className=\"seccion-principal\">\n                  <Header/>\n                  \n                  <main>\n                      <SearchTagDescriptor/>\n                      \n                      <div className=\"contenedor-tareas\">\n                          \n                            {form ?\n                                (<NewTagDescriptor/>)\n                                :\n                                (<TagDescriptorList/>)\n                            }\n\n                      </div>\n                  </main>\n              </div>\n          </div>\n    );\n}\n \nexport default Tagsdescriptors;","import {SHOW_ALERT,\n    HIDE_ALERT\n} from '../../types/index'\n\nexport default (state,action)=>{\n    switch(action.type){\n         case(SHOW_ALERT):\n             return ({\n                 alert: action.payload\n             })\n         case(HIDE_ALERT):\n             return ({\n                 alert: null\n             })\n        default:\n            return state;\n        \n    }\n}\n\n","//types of alerts\nexport const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n\n\nexport const    CREATE_USER_SUCCESS     = \"CREATE_USER_SUCCESS\"\nexport const    CREATE_USER_ERROR       = \"CREATE_USER_ERROR\"\nexport const    GET_USER                = \"GET_USER\"\nexport const    LOGIN_SUCCESS           = \"LOGIN_SUCCESS\"\nexport const    LOGIN_ERROR             = \"LOGIN_ERROR\"\nexport const    LOG_OFF                 = \"LOG_OFF\"\n\nexport const    FORM_TAGDESCRIPTOR          = \"FORM_TAGDESCRIPTOR\"\nexport const    GET_TAGDESCRIPTOR           = \"GET_TAGDESCRIPTOR\"\nexport const    GET_TAGSDESCRIPTORS         = \"GET_TAGSDESCRIPTORS\"\nexport const    CREATE_TAGDESCRIPTOR        = \"CREATE_TAGDESCRIPTOR\"\nexport const    SHOW_ERROR_TAGDESCRIPTOR    = \"SHOW_ERROR_TAGDESCRIPTOR\"\nexport const    VALIDATE_TAGDESCRIPTOR      = \"VALIDATE_TAGDESCRIPTOR\"\nexport const    INVALIDATE_TAGDESCRIPTOR    = \"INVALIDATE_TAGDESCRIPTOR\"\nexport const    SELECT_TAGDESCRIPTOR        = \"SELECT_TAGDESCRIPTOR\"\nexport const    DESELECT_TAGDESCRIPTOR      = \"DESELECT_TAGDESCRIPTOR\"\nexport const    DELETE_TAGDESCRIPTOR        = \"DELETE_TAGDESCRIPTOR\"\nexport const    UPDATE_TAGDESCRIPTOR        = \"UPDATE_TAGDESCRIPTOR\"\nexport const    SEARCH_TAGSDESCRIPTORS      = \"SEARCH_TAGSDESCRIPTORS\"\nexport const    SELECT_TEMP_TAGDESCRIPTOR   = \"SELECT_TEMP_TAGDESCRIPTOR\"\n\n\nexport const    FORM_SYSTEM           =   \"FORM_SYSTEM\"    \nexport const    GET_SYSTEMS           =   \"GET_SYSTEMS\"    \nexport const    ADD_SYSTEM            =   \"ADD_SYSTEM\"\nexport const    SHOW_ERROR_SYSTEM     =   \"SHOW_ERROR_SYSTEM\"\nexport const    UPDATE_SYSTEM         =   \"UPDATE_SYSTEM\"\nexport const    SELECT_SYSTEM         =   \"SELECT_SYSTEM\"    \nexport const    DELETE_SYSTEM         =   \"DELETE_SYSTEM\"\nexport const    DESELECT_SYSTEM       =   \"DESELECT_SYSTEM\"\n\n\nexport const    FORM_ASSETS         =   \"FORM_ASSETS\"      \nexport const    GET_ASSETS          =   \"GET_ASSETS\"   \nexport const    ADD_ASSET           =   \"ADD_ASSET\"\nexport const    SHOW_ERROR_ASSET    =   \"SHOW_ERROR_ASSET\"     \nexport const    VALIDATE_ASSET      =   \"VALIDATE_ASSET\"\nexport const    SELECT_ASSET        =   \"SELECT_ASSET\"\nexport const    DELETE_ASSET        =   \"DELETE_ASSET\"\nexport const    GET_ASSETS_TREE     =   \"GET_ASSETS_TREE\"\n\n\nexport const    RESET_MESSAGE           =   \"RESET_MESSAGE\"\nexport const    SHOW_ERROR              =   \"SHOW_ERROR\"","import React, { useReducer } from 'react';\nimport alertReducer from './alertReducer'\nimport alertContext from './alertContext'\nimport { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\nconst AlertState = (props)=>{\n    const initialState = {\n        alert:null\n    }\n    \n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(alertReducer, initialState);\n\n     const showAlert = (msg,category) =>{\n         dispatch({\n             type:SHOW_ALERT,\n             payload:{\n                 msg:msg,\n                 category:category\n             }\n         })\n\n         setTimeout(() => {\n             dispatch({\n                 type:HIDE_ALERT\n             })\n         }, 5000);\n     }\n\n    return (\n        <alertContext.Provider\n            value={{\n                  alert:state.alert,\n                  showAlert\n            }}>\n                \n            {props.children}\n        </alertContext.Provider>\n    )\n\n}\n\nexport default AlertState;","import {\n    CREATE_USER_SUCCESS,\n    CREATE_USER_ERROR,\n    GET_USER, \n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    LOG_OFF, \n    RESET_MESSAGE} from '../../types/index'\n\nexport default (state,action)=>{\n    switch(action.type){\n        case LOGIN_SUCCESS:\n        case CREATE_USER_SUCCESS:\n            localStorage.setItem('token',action.payload.token)\n            return({\n                ...state,\n                authenticated:true,\n                message:null,\n                loading:false\n            })\n        case GET_USER:\n            return ({\n                ...state,\n                authenticated: true,\n                user: action.payload,\n                loading:false\n            })\n        case LOG_OFF:\n        case LOGIN_ERROR:\n        case CREATE_USER_ERROR:\n            localStorage.removeItem('token')\n            return({\n                ...state,\n                token:null,\n                user: null,\n                authenticated: false,\n                message:action.payload,\n                loading:false\n            })\n        case RESET_MESSAGE:\n            return ({\n                ...state, \n                message:null\n            })\n        default: \n            return state;\n    }\n}\n","import axios from 'axios';\n\n\nconst axiosClient = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default axiosClient;","import axiosClient from './axios'\n\nconst tokenAuth = (token) =>{\n    if (token){\n        axiosClient.defaults.headers.common['x-auth-token'] = token;\n    }else{\n        delete axiosClient.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, {useReducer} from 'react';\nimport authContext from './authContext'\nimport authReducer from './authReducer'\nimport axiosClient from '../../config/axios'\nimport tokenAuth from '../../config/token'\n\nimport {\n    CREATE_USER_SUCCESS,\n    CREATE_USER_ERROR,\n    GET_USER, \n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    LOG_OFF,\n    RESET_MESSAGE} from '../../types/index'\n\nconst AuthState = (props) => {\n    const initialState ={\n        token: localStorage.getItem('token'),\n        authenticated: null,\n        user: null,\n        message:null,\n        loading:true\n    }\n    const [state,dispatch] = useReducer(authReducer,initialState)\n\n    const createUser = async (user) =>{\n        try {\n            const res = await axiosClient.post('api/users', user)\n            dispatch({\n                type:CREATE_USER_SUCCESS,\n                payload:res.data\n            })\n\n            getUser()\n        } catch (error) {\n            console.log(error);\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:CREATE_USER_ERROR,\n                payload:alert\n            })\n            \n        }\n        \n        \n    }\n\n    const getUser = async ()=>{\n        const token = localStorage.getItem('token');\n        if (token){\n            tokenAuth(token);\n        }\n        try {\n            const res = await axiosClient.get('/api/auth')\n            dispatch({\n                type:GET_USER,\n                payload:res.data.user\n            })\n        } catch (error) {\n            dispatch({\n                type: LOGIN_ERROR\n            })\n            \n        }\n    }\n\n    const logOff = () =>{\n        dispatch({\n            type:LOG_OFF\n        })\n    }\n\n    const loginUser = async (user)=>{\n        try {\n            \n            const res = await axiosClient.post('/api/auth', user)\n            dispatch({\n                type:LOGIN_SUCCESS,\n                payload:res.data\n            })\n\n            getUser()\n            \n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:LOGIN_ERROR,\n                payload:alert\n            })\n            \n        }\n    }\n    const resetMessage = () =>{\n        dispatch({\n            type:RESET_MESSAGE\n        })\n        \n    }\n\n    return (\n        <authContext.Provider \n        value={{\n            token:state.token,\n            authenticated:state.authenticated,\n            user:state.user,\n            message:state.message,\n            loading:state.loading,\n            createUser,\n            loginUser,\n            getUser,\n            logOff,\n            resetMessage\n        }}>\n            {props.children}\n        </authContext.Provider>\n    )\n\n}\nexport default AuthState;\n\n","import {\n    FORM_ASSETS,      \n    GET_ASSETS,       \n    ADD_ASSET,       \n    SHOW_ERROR_ASSET,\n    VALIDATE_ASSET,  \n    SELECT_ASSET,    \n    DELETE_ASSET, \n    GET_ASSETS_TREE,\n    RESET_MESSAGE } from '../../types/index'\n\nexport default (state,action)=>{\n    switch(action.type){\n        case FORM_ASSETS:\n            return ({\n                ...state,\n                form:true,\n                error:false,\n                message:null\n            })\n        case GET_ASSETS:\n            return ({\n                ...state,\n                assets:action.payload,\n                message:null\n            })\n        case GET_ASSETS_TREE:\n            return ({\n                ...state,\n                assetsTree:action.payload,\n                message:null\n            })\n        case ADD_ASSET:\n            return ({\n                ...state,\n                assets:[...state.assets, action.payload],\n                form:false,\n                error:false,\n                message:null\n            })\n        case RESET_MESSAGE:\n            return ({\n                ...state,\n                message:null\n            })\n        case VALIDATE_ASSET:\n            return ({\n                ...state,\n                error:true,\n                message:null\n            })\n        case SELECT_ASSET:\n            return ({\n                ...state,\n                asset: state.assets.filter(\n                    asset => asset._id === action.payload._id),\n                message:null\n            })\n        case DELETE_ASSET:\n            return ({\n                ...state,\n                assets: state.assets.filter(\n                    asset=>asset._id !== action.payload\n                ),\n                asset: null,\n                message:null\n            })\n        case SHOW_ERROR_ASSET:\n            return ({\n                ...state,\n                message:action.payload\n            })\n        default:\n                return state;\n    }\n}","import React, {useReducer} from 'react';\nimport assetContext from './assetContext'\nimport assetReducer from './assetReducer'\nimport {\n    FORM_ASSETS,      \n    GET_ASSETS,       \n    ADD_ASSET,       \n    SHOW_ERROR_ASSET,\n    VALIDATE_ASSET,  \n    SELECT_ASSET,    \n    DELETE_ASSET,\n    GET_ASSETS_TREE,\n    RESET_MESSAGE   } from '../../types/index'\nimport axiosClient from '../../config/axios'\n\n\nconst AssetState = props=>{\n    \n    \n    const initialState={\n        assets : [],\n        form:false,\n        error: false, \n        asset: null,\n        message:null, \n        assetsTree: [{}]\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(assetReducer, initialState)\n\n\n    //defino las funciones para el CRUD de formularios\n    const showForm =()=>{\n        dispatch({\n            type: FORM_ASSETS\n        })\n    }\n\n    const getAssets = async ()=>{\n        try {\n            const res = await axiosClient.get('/api/assets');\n            dispatch({\n                type: GET_ASSETS,\n                payload: res.data.assets\n            })\n        } catch (error) {\n            const alert = {\n                msg:error.response.data.msg,\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_ASSET,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const addAsset = async asset =>{\n\n        try {\n            const res = await axiosClient.post('/api/assets',asset);\n            console.log(res.data)\n            dispatch({\n                type: ADD_ASSET,\n                payload: res.data\n            })\n        } catch (error) {\n            const alert = {\n                msg:error.response.data.msg,\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_ASSET,\n                payload: alert\n            })\n        }\n        \n        \n    }\n\n    const showError = () =>{\n        dispatch({\n            type: VALIDATE_ASSET\n        })\n    }\n\n    const selectAsset= (asset) =>{\n        dispatch({\n            type: SELECT_ASSET,\n            payload:asset\n        })\n    }\n    const resetMessage = () =>{\n        dispatch({\n            type: RESET_MESSAGE\n        })\n    }\n\n    const deleteAsset = async (asset) =>{\n        try {\n            const idAsset = asset._id\n            \n            await axiosClient.delete(`/api/assets/${idAsset}`);\n            dispatch({\n                type:DELETE_ASSET,\n                payload:idAsset\n            })\n        } catch (error) {\n            const alert = {\n                msg:error.response.data.msg,\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_ASSET,\n                payload: alert\n            })\n        }\n        \n       \n    }\n\n    const getAssetTree = async ()=>{\n        try {\n            const res = await axiosClient.get('api/tree')\n            \n            let assetsTree_temp = res.data.assets\n            let j = 0\n            let i = 0\n            assetsTree_temp.forEach(i_asset => {\n                assetsTree_temp[j].key = i_asset._id\n                assetsTree_temp[j].label = i_asset.name\n                assetsTree_temp[j].nodes = i_asset.nodes\n                i=0;\n                assetsTree_temp[j].nodes.forEach(i_system => {\n                    assetsTree_temp[j].nodes[i].key = i_system._id\n                    assetsTree_temp[j].nodes[i].label = i_system.name\n                    i = i+1;\n                })\n                j= j+1;\n            });\n            dispatch({\n                type: GET_ASSETS_TREE,\n                payload: assetsTree_temp\n            })\n\n\n        } catch (error) {\n            const alert = {\n                msg:error.response.data.msg,\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_ASSET,\n                payload: alert\n            })\n        }\n    }\n\n    return (\n        <assetContext.Provider\n            value={{\n                assets: state.assets,\n                form: state.form,\n                error: state.error,\n                asset: state.asset,\n                message: state.message,\n                assetsTree: state.assetsTree,\n                showForm, \n                getAssets,\n                addAsset,\n                showError, \n                selectAsset,\n                deleteAsset,\n                getAssetTree,\n                resetMessage\n            }}\n        >\n            {props.children}\n        </assetContext.Provider>\n    )\n\n}\n\nexport default AssetState;","import {\n    ADD_SYSTEM, \n    GET_SYSTEMS,\n    UPDATE_SYSTEM,\n    SELECT_SYSTEM,\n    DELETE_SYSTEM,\n    DESELECT_SYSTEM,\n    SHOW_ERROR,\n    RESET_MESSAGE\n} from '../../types/index'\n\nexport default (state, action) =>{\n    switch (action.type){\n        case ADD_SYSTEM:\n            return ({\n                ...state, \n                systems: [...state.systems, action.payload],\n                message:null\n            })\n        case GET_SYSTEMS:\n            return ({\n                ...state, \n                systems: action.payload,\n                systemSelected:null,\n                message:null\n            })\n        case UPDATE_SYSTEM:\n            return ({\n                ...state, \n                systemSelected:null,\n                message:null\n            })\n        case SELECT_SYSTEM:\n            return ({\n                ...state, \n                systemSelected:action.payload,\n                message:null\n            })\n        case DESELECT_SYSTEM:\n            return ({\n                ...state, \n                systemSelected:null,\n                message:null\n            })\n        case DELETE_SYSTEM:\n            return ({\n                ...state,\n                systems: state.systems.filter((\n                    system => system._id !== action.payload._id)),\n                message:null,\n                systemSelected:null\n            })\n        case SHOW_ERROR:\n            return ({\n                ...state,\n                message:action.payload\n            })\n        case RESET_MESSAGE:\n            return ({\n                ...state,\n                message:null\n            })\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport systemContext from './systemContext'\nimport systemReducer from './systemReducer'\n\nimport {\n    ADD_SYSTEM, \n    GET_SYSTEMS,\n    UPDATE_SYSTEM,\n    SELECT_SYSTEM,\n    DELETE_SYSTEM,\n    DESELECT_SYSTEM,\n    SHOW_ERROR,\n    RESET_MESSAGE\n} from '../../types/index'\nimport axiosClient from '../../config/axios';\n\nconst SystemState = (props) => {\n\n    const initialState = {\n        systems:[],\n        systemSelected:null,\n        message:null,\n        active:false\n    }\n\n    const [state, dispatch] = useReducer(systemReducer,initialState)\n\n    const addSystem = async (system)=>{\n        try {\n            const res = await axiosClient.post('/api/systems', system)\n            dispatch({\n                type:ADD_SYSTEM,\n                payload: res.data\n            })\n            getSystems(system.asset)\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:SHOW_ERROR,\n                payload:alert\n            })\n        }\n\n    }\n    const getSystems = async (asset) =>{\n        try {\n            const res = await axiosClient.get('/api/systems', {params:{asset}})\n            dispatch({\n                type:GET_SYSTEMS,\n                payload: res.data.systems\n            })\n\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:SHOW_ERROR,\n                payload:alert\n            })\n        }\n    }\n\n    const updateSystem = async (system) =>{\n        try {\n            const id = system._id\n            await axiosClient.put(`/api/systems/${id}`,system)\n            \n            dispatch({\n                type:UPDATE_SYSTEM\n            })\n\n            getSystems(system.asset)\n\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:SHOW_ERROR,\n                payload:alert\n            })\n\n        }\n    }\n\n    const deleteSystem = async (system) =>{\n        try {\n            const id = system._id\n            const idAsset = system.asset\n            await axiosClient.delete(`/api/systems/${id}`, {params:{idAsset}})\n            \n            dispatch({\n                type:DELETE_SYSTEM,\n                payload:system\n            })\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:SHOW_ERROR,\n                payload:alert\n            })\n\n        }\n    }\n    const resetMessage = () =>{\n        dispatch({\n            type:RESET_MESSAGE\n        })\n    }\n    const selectSystem = (system) =>{\n        dispatch({\n            type:SELECT_SYSTEM,\n            payload: system\n        })\n    }\n\n    const deselectSystem = () =>{\n        dispatch({\n            type:DESELECT_SYSTEM\n        })\n    }\n\n    return ( \n        <systemContext.Provider\n            value ={{\n                systems:state.systems,\n                systemSelected: state.systemSelected,\n                active:state.active,\n                message:state.message,\n                getSystems,\n                updateSystem,\n                addSystem,\n                selectSystem,\n                deleteSystem,\n                deselectSystem,\n                resetMessage\n            }}\n        >\n            {props.children}\n        </systemContext.Provider>\n     );\n}\n \nexport default SystemState;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport Header from './header';\n\nconst Menu = () => {\n    return ( \n        // <Fragment>\n        //     <Link \n        //     to={'/assets'}\n        //     className=\"enlace-cuenta\">\n        // >\n        //     Assets MdP\n        //     </Link>\n        //     <Link \n        //     to={'/tagsdescriptors'}\n        //     className=\"enlace-cuenta\">\n        // >\n        //     Tags descriptors\n        //     </Link>\n        // </Fragment>\n      \n            <Fragment>\n            <Header />\n                <div className=\"form-menu\">\n                    <div className=\"contenedor-form sombra-dark\">\n                        <div className=\"campo-form\"> \n                \n                            <Link \n                                to={'/assets'}\n                                className=\"btn btn-block btn-primario\"\n                            >\n                                Estructura MdP\n                            </Link>\n                        </div>\n                        <div className=\"campo-form\">\n                            <Link \n                                to={'/tagsdescriptors'}\n                                className=\"btn btn-block btn-primario\"\n                            >\n                                Descriptores DCS\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        \n     );\n}\n \nexport default Menu;","import {\n    FORM_TAGDESCRIPTOR, \n    GET_TAGDESCRIPTOR,\n    GET_TAGSDESCRIPTORS,\n    CREATE_TAGDESCRIPTOR,\n    SHOW_ERROR_TAGDESCRIPTOR,\n    SELECT_TAGDESCRIPTOR,\n    DESELECT_TAGDESCRIPTOR,\n    DELETE_TAGDESCRIPTOR,\n    UPDATE_TAGDESCRIPTOR,\n    SEARCH_TAGSDESCRIPTORS,\n    RESET_MESSAGE,\n    VALIDATE_TAGDESCRIPTOR,\n    INVALIDATE_TAGDESCRIPTOR} from '../../types/index'\n\nexport default (state,action)=>{\n    switch(action.type){\n        case FORM_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:!state.form,\n                error:false\n            })\n        case GET_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor:action.payload,\n                error:false\n            })\n        case GET_TAGSDESCRIPTORS:\n            return ({\n                ...state,\n                searchtagdescriptors: action.payload,\n                tagdescriptors:action.payload,\n                error:false\n\n            })\n        case CREATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors:[...state.tagdescriptors, action.payload],\n                form:false,\n                error:false\n            })\n        case RESET_MESSAGE:\n            return ({\n                ...state,\n                message:null\n            })\n        case SELECT_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor: state.tagdescriptors.filter(\n                    tagdescriptor => tagdescriptor._id === action.payload),\n                error:false\n            })\n        case VALIDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagname_ok:true\n            })\n        case INVALIDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                message: action.payload,\n                tagname_ok:false\n            })\n        case DELETE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors: state.tagdescriptors.filter(\n                    tagdescriptor=>tagdescriptor._id !== action.payload\n                ),\n                searchtagdescriptors: state.searchtagdescriptors.filter(\n                    tagdescriptor=>tagdescriptor._id !== action.payload),\n                tagdescriptor: null,\n                error:false\n            })\n        case SHOW_ERROR_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                message:action.payload,\n                error:true\n            })\n        case DESELECT_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:false,\n                tagdescriptor:null,\n                error:false\n            })\n        case UPDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:false,\n                tagdescriptor:null,\n                error:false\n            })\n        case SEARCH_TAGSDESCRIPTORS:\n            return ({\n                ...state,\n                searchtagdescriptors: state.tagdescriptors.filter(\n                    tagdescriptor=> tagdescriptor.tagname.indexOf(action.payload) > -1\n                ),\n                tagdescriptor: null,\n                form:false,\n                error:false\n            })\n\n        default:\n                return state;\n    }\n}","import React, {useReducer} from 'react';\nimport tagDescriptorContext from './tagDescriptorContext'\nimport tagDescriptorReducer from './tagDescriptorReducer'\nimport {\n    FORM_TAGDESCRIPTOR, \n    GET_TAGDESCRIPTOR,\n    CREATE_TAGDESCRIPTOR,\n    SHOW_ERROR_TAGDESCRIPTOR,\n    UPDATE_TAGDESCRIPTOR,\n    SELECT_TAGDESCRIPTOR,\n    DESELECT_TAGDESCRIPTOR,\n    GET_TAGSDESCRIPTORS,\n    DELETE_TAGDESCRIPTOR,\n    SEARCH_TAGSDESCRIPTORS,\n    RESET_MESSAGE,\n    VALIDATE_TAGDESCRIPTOR,\n    INVALIDATE_TAGDESCRIPTOR} from '../../types/index'\n\nimport axiosClient from '../../config/axios'\n\n\nconst TagDescriptorState = props=>{\n    \n    \n    const initialState={\n        tagdescriptors : [],\n        searchtagdescriptors: [],\n        form:false,\n        tagname_ok: true, \n        tagdescriptor: null,\n        message:null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(tagDescriptorReducer, initialState)\n\n\n    //defino las funciones para el CRUD de tagdescriptor\n    const showForm =()=>{\n        dispatch({\n            type: FORM_TAGDESCRIPTOR\n        })\n    }\n\n    const getTagsDescriptors = async (system)=>{\n        try {\n            \n            const res = await axiosClient.get('/api/tagsdescriptors', {params:{system}});\n            dispatch({\n                type: GET_TAGSDESCRIPTORS,\n                payload: res.data.tagsdescriptors\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error buscando los tagdescriptors\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const searchTagsDescriptors = async (search)=>{\n        try {\n            console.log(search)\n            \n            dispatch({\n                type: SEARCH_TAGSDESCRIPTORS,\n                payload: search\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error buscando los tagdescriptors\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const getTagDescriptor = async (id)=>{\n        try {\n            \n            const res = await axiosClient.get(`/api/showtag/${id}`);\n            console.log(res)\n            dispatch({\n                type: GET_TAGDESCRIPTOR,\n                payload: res.data.tagdescriptor\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"No existe el tag descriptor\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const resetMessage = ()=>{\n        dispatch({\n            type:RESET_MESSAGE\n        })\n    }\n    const createTagDescriptor = async ptagdescriptor =>{\n\n        try {\n            \n            const res = await axiosClient.post('/api/tagsdescriptors',ptagdescriptor);\n            dispatch({\n                type: CREATE_TAGDESCRIPTOR,\n                payload: res.data\n            })\n            \n            \n        } catch (error) {\n            const alert = {\n                msg:error.response.data.msg,\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n        \n    }\n\n    const showError = () =>{\n        dispatch({\n            type: SHOW_ERROR_TAGDESCRIPTOR\n        })\n    }\n\n    const selectTagDescriptor = (id_tagdescriptor) =>{\n        dispatch({\n            type: SELECT_TAGDESCRIPTOR,\n            payload:id_tagdescriptor\n        })\n    }\n\n    const deselectTagDescriptor = (id_tagdescriptor) =>{\n        dispatch({\n            type: DESELECT_TAGDESCRIPTOR\n        })\n    }\n\n    const deleteTagDescriptor = async (idTagDescriptor) =>{\n        try {\n            await axiosClient.delete(`/api/tagsdescriptors/${idTagDescriptor}`);\n            dispatch({\n                type:DELETE_TAGDESCRIPTOR,\n                payload:idTagDescriptor\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error eliminando el tag descriptor\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n       \n    }\n\n    const validateTagname = async (id) =>{\n        try {\n            await axiosClient.get(`/api/showtag/${id}`);\n            const alert = {\n                msg:\"El tag descriptor para ese tagname ya existe\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type: INVALIDATE_TAGDESCRIPTOR,\n                payload: alert\n            })\n        } catch (error) {\n            dispatch({\n                type:VALIDATE_TAGDESCRIPTOR\n            })\n        }\n    }\n\n    const updateTagDescriptor = async (tagdescriptor) =>{\n        try {\n            const id = tagdescriptor._id\n            const res = await axiosClient.put(`/api/tagsdescriptors/${id}`,tagdescriptor)\n            \n            dispatch({\n                type:UPDATE_TAGDESCRIPTOR,\n                payload:res.data.tag_descriptor_modified\n            })\n            \n\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    return (\n        <tagDescriptorContext.Provider\n            value={{\n                tagdescriptors: state.tagdescriptors,\n                form: state.form,\n                error: state.error,\n                tagdescriptor: state.tagdescriptor,\n                message: state.message,\n                searchtagdescriptors: state.searchtagdescriptors,\n                tagname_ok:state.tagname_ok,\n                showForm, \n                getTagsDescriptors,\n                createTagDescriptor,\n                showError, \n                selectTagDescriptor,\n                deleteTagDescriptor,\n                getTagDescriptor,\n                deselectTagDescriptor,\n                updateTagDescriptor,\n                searchTagsDescriptors,\n                resetMessage,\n                validateTagname\n            }}\n        >\n\n            {props.children}\n        </tagDescriptorContext.Provider>\n    )\n\n}\n\nexport default TagDescriptorState;","import React, { useContext } from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport assetContext from '../../context/asset/assetContext';\n\nconst Asset = ({asset}) => {\n    \n    const aContext = useContext(assetContext)\n    const {selectAsset} = aContext\n    const sContext = useContext(systemContext)\n    const {getSystems, deselectSystem} = sContext\n\n    const selectAssetOnClick = () =>{\n        selectAsset(asset)\n        getSystems(asset._id)\n        deselectSystem()\n    }\n\n    return ( <li>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-blank\"\n                    onClick={selectAssetOnClick}\n                >\n                    {asset.name}\n                </button>\n            </li> );\n}\n \nexport default Asset;","import React, {useContext, useEffect} from 'react';\nimport assetContext from '../../context/asset/assetContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Asset from './asset'\n\nconst AssetList = () => {\n\n    const asContext = useContext(assetContext)\n    const {assets, getAssets} = asContext\n\n    \n    useEffect(() => {\n        getAssets()\n        // eslint-disable-next-line\n    }, [])\n\n    if (assets.length === 0) return <p>No hay assets creados, comienza creando uno</p>\n\n    return ( \n        <ul className =\"list-assets\">\n            \n            <TransitionGroup>\n                {assets.map(asset => (\n                    <CSSTransition\n                        key={asset._id}\n                        timeout={200}\n                        classNames=\"asset\"\n                    >\n                        <Asset \n                            asset={asset}\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n                       \n                        \n        </ul>\n     );\n}\n \nexport default AssetList;","import React, {useContext, useState, Fragment} from 'react';\nimport assetContext from '../../context/asset/assetContext.js'\nimport alertContext from '../../context/alerts/alertContext.js'\n\nconst AssetForm = () => {\n    \n    const aContext = useContext(assetContext)\n    \n    const {form, showForm, addAsset} = aContext\n\n    const alContext = useContext(alertContext)\n    const {showAlert} = alContext\n\n    const [asset, setAsset] = useState({\n        name:''\n    })\n    const {name} = asset\n    \n    const onChangeAsset = (e)=>{\n        setAsset({\n            ...asset, \n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitAsset= (e)=>{\n        e.preventDefault();\n\n        //hacer validaciones y reseteo de form\n        if (!name){\n            showAlert(\"El nombre del asset no debe estar vacío\", \"alerta-error\")\n            return;\n        }\n\n        // llamo a agregar proyecto\n        addAsset(asset)\n        setAsset(\"\")\n        \n    }\n\n    const onClikcAddAsset = (e)=>{\n        showForm();\n    }\n    return ( \n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick = {onClikcAddAsset}\n            >Nuevo Asset</button>\n\n            {form ?\n                (\n                    <form   \n                        className=\"form-new-system\"\n                        onSubmit = {onSubmitAsset}\n                        >\n                        <input  \n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Nombre del asset\"\n                            name=\"name\"\n                            value ={name}\n                            onChange = {onChangeAsset}\n                        />\n                        <input \n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value = \"Agregar asset\"\n                        />    \n                    </form>\n                ):\n                (null)\n                }\n                \n        </Fragment>\n     );\n}\n \nexport default AssetForm;","import React from 'react';\nimport AssetList from '../components/assets/assetList'\nimport AssetFrom from '../components/assets/assetFrom'\nimport { Link } from 'react-router-dom'\n\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>Estructura<span>MdP</span></h1>\n            <AssetFrom/>\n            <div className=\"proyectos\">\n                \n                <h2>Assets</h2>  \n                <AssetList/>\n            </div>  \n            <div className=\"link-menu-div\">\n                <Link \n                    to={'/menu'}\n                    className=\"link-menu\">\n                &#60;\n                    Menu\n                </Link>\n            </div>\n        </aside>\n\n     );\n}\n \nexport default Sidebar;","import React, {useContext, useState, useEffect} from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport assetContext from '../../context/asset/assetContext'\nimport alertContext from '../../context/alerts/alertContext.js'\n\n\nconst SystemForm = () => {\n\n    const sContext = useContext(systemContext)\n    const {systemSelected, message, addSystem, updateSystem, resetMessage} = sContext\n\n    const aContext = useContext(assetContext)\n    const {asset} = aContext\n\n    const alContext = useContext(alertContext)\n    const {showAlert} = alContext\n\n    const [error, setError] = useState(false)\n    const [system,setSystem] = useState({\n        name:''\n    })\n\n    useEffect(() => {\n        if(message){\n            showAlert(message.msg, message.category)\n            resetMessage();\n        }\n        // eslint-disable-next-line\n    }, [message])\n    \n    useEffect(() => {\n        if (systemSelected){\n            setSystem(systemSelected)\n        }else{\n            setSystem({name:''})\n        }\n    }, [systemSelected])\n\n    if (!asset) return null;\n\n    const {name} =  system\n\n    const [assetActual] = asset\n\n    const onSubmit = (e)=>{\n        e.preventDefault();\n        if(!name){\n            showAlert(\"El nombre del sistema no puede estar vacío\", \"alerta-error\")\n            return;\n        }\n        setError(false);\n        system.asset = assetActual._id\n        system.active = false\n        if (systemSelected){\n            updateSystem(system)\n        }else{\n            addSystem(system);\n        }\n        \n        setSystem({name:''});\n        \n    }\n    const onChange = (e)=>{\n        setSystem({\n            ...system,\n            [e.target.name]:e.target.value\n        })\n    }\n\n\n    return ( \n        <div className=\"formulario\"\n            onSubmit={onSubmit}>\n            <form>\n                <div \n                    className=\"contenedor-input\">\n                    <input \n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre del sistema\"\n                        name=\"name\"\n                        value={name}\n                        onChange = {onChange}\n                    />\n                </div>\n                <div \n                    className=\"contenedor-input\">\n                    <input \n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={systemSelected === null ? \"Agregar sistema\":\"Guardar sistema\"}\n                    />\n                </div>\n\n            </form>\n            {error ? <p className=\"mensaje error\">El nombre del sistema es obligatorio</p> : null}\n        </div>\n     );\n}\n \nexport default SystemForm;","import React, { useContext } from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport { confirmAlert } from 'react-confirm-alert';\n\nconst System = ({system}) => {\n\n    const sContext = useContext(systemContext)\n    const {updateSystem, selectSystem, deleteSystem} = sContext\n\n    const updateSystemOnClick = ()=>{\n        system.active = !system.active\n        updateSystem(system);\n    }\n    const deleteSystemOnClick = ()=>{\n        deleteSystem(system)\n    }\n\n    const showDialogConfirm = ()=>{\n        confirmAlert({\n            title: 'Eliminar sistema',\n            message: 'Se eliminaran todos los descriptores asociados al sistema',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => deleteSystemOnClick()\n              },\n              {\n                label: 'No',\n                onClick: () => console.log(\"no\")\n              }\n            ]\n          });\n    }\n\n    return ( \n        <li className=\"tarea sombra\">\n        <p>{system.name} </p>\n\n        <div className=\"estado\">\n            {system.active \n            ?  \n                (\n                    <button\n                        type=\"button\"\n                        className=\"completo\"\n                        onClick = {()=>updateSystemOnClick ()}\n                    >Activo</button>\n                )\n            : \n                (\n                    <button\n                        type=\"button\"\n                        className=\"incompleto\"\n                        onClick = {()=>updateSystemOnClick ()}\n                    >Desactivo</button>\n                )\n            }\n        </div>\n\n        <div className=\"acciones\">\n            <button \n                type=\"button\"\n                className=\"btn btn-primario\"\n                onClick = {()=>{selectSystem(system)}}\n            >Editar</button>\n\n            <button\n                type=\"button\"\n                className=\"btn btn-secundario\"\n                onClick={showDialogConfirm}\n            >Eliminar</button>\n        </div>\n    </li> \n     );\n}\n \nexport default System;","import React, {useContext, Fragment} from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport System from './system';\nimport { confirmAlert } from 'react-confirm-alert';\nimport assetContext from '../../context/asset/assetContext';\n\n\nconst SystemList = () => {\n\n    const sContext = useContext(systemContext)\n    const {systems} = sContext\n    const aContext = useContext(assetContext)\n    const {asset,deleteAsset} = aContext\n\n\n    if(!asset) {\n        return <h2>Seleccione un asset</h2>\n    }\n    const [assetSelected] = asset\n\n    const deleteAssetOnClick = ()=>{\n        deleteAsset(assetSelected)\n    }\n\n    const showDialogConfirm = ()=>{\n        confirmAlert({\n            title: 'Eliminar asset',\n            message: 'Se eliminaran todos los sistemas y descriptores asociados al asset',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => deleteAssetOnClick()\n              },\n              {\n                label: 'No',\n                onClick: () => console.log(\"no\")\n              }\n            ]\n          });\n    }\n    \n    return ( \n        <Fragment>\n            <h2>Sistemas asignados al asset: {asset.name}</h2>\n            <ul>\n                {(systems.length===0)?\n                    (<li className=\"tarea\"><p>No hay sistemas asignados al asset</p></li>)\n                :\n                <TransitionGroup>\n                {systems.map(system => (\n                    <CSSTransition\n                        key={system._id}\n                        timeout={200}\n                        classNames=\"tarea\"\n                    >\n                        <System \n                            system={system}\n                        />\n                    </CSSTransition>\n                ))}\n                </TransitionGroup>\n                }\n            </ul>\n            <button     \n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={showDialogConfirm}\n            >Eliminar Asset &times;</button>\n        </Fragment>\n     );\n}\n \nexport default SystemList;","import React, {useEffect, useContext} from 'react';\nimport authContext from '../../context/auth/authContext'\nimport Header from '../../layout/header'\nimport Sidebar from '../../layout/sidebar'\nimport SystemForm from '../system/systemForm'\nimport SystemList from '../system/systemList'\nimport assetContext from '../../context/asset/assetContext.js'\nimport alertContext from '../../context/alerts/alertContext.js'\nimport systemContext from '../../context/system/systemContext.js'\n\n\nconst Assets = () => {\n    const auContext = useContext(authContext)\n    const {getUser} = auContext;\n\n    const asContext = useContext(assetContext)\n    const {message, resetMessage} = asContext\n\n    const aContext = useContext(alertContext)\n    const {alert,showAlert} = aContext\n    \n    const sContext = useContext(systemContext)\n    const {deselectSystem} = sContext\n\n    useEffect(() => {\n        getUser()\n        deselectSystem()\n        // eslint-disable-next-line\n    }, [])\n    \n    useEffect(() => {\n        if(message){\n            showAlert(message.msg, message.category)\n            resetMessage();\n        }\n        // eslint-disable-next-line\n    }, [message])\n\n    return ( \n        <div className=\"contenedor-app\">\n            {alert? (<div className={`alerta ${alert.category}`}>{alert.msg} </div>)\n                    :null}\n            \n            <Sidebar/>\n            \n            <div className=\"seccion-principal\">\n                {/* <Barra/> */}\n                <Header/>\n                \n                <main>\n                <SystemForm/>\n                    \n                    <div className=\"contenedor-tareas\">\n                      <SystemList/>\n                      \n                    </div>\n                </main>\n            </div>\n        </div>\n     );\n}\n \nexport default Assets;","import React, {useContext, useEffect} from 'react';\nimport {Route, Redirect} from 'react-router-dom'\nimport authContext from '../../context/auth/authContext'\n\n\nconst PrivateRoute = ({component: Component, ...props}) => {\n    const aContext = useContext(authContext)\n    const {getUser, authenticated, loading} = aContext\n\n     useEffect(() => {\n        getUser();\n         // eslint-disable-next-line\n     }, [])\n\n    return ( \n        <Route {...props} render={props => !authenticated && !loading ? (\n            <Redirect to =\"/\" />\n        ):(\n            <Component {...props} />\n        )} \n        />\n     );\n}\n \nexport default PrivateRoute;","import React from 'react';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Login from './components/auth/login'\nimport Newuser from './components/auth/newUser'\nimport Tagsdescriptors from './components/tagsdescriptors/tagsDescriptors'\n\nimport AlertState from './context/alerts/alertState';\nimport AuthState from './context/auth/authState';\nimport AssetState from './context/asset/assetState';\nimport SystemState from './context/system/systemState';\nimport Menu from './layout/menu';\nimport TagDescriptorState from './context/tagdescriptor/tagDescriptorState';\n\n\nimport Assets from './components/assets/assets'\nimport PrivateRoute from './components/routes/privateRoute'\n\nimport authToken from '../src/config/token'\n\n\n\n\nconst token = localStorage.getItem('token');\nauthToken(token)\n\nfunction App() {\n  return (\n    <AssetState>\n      \n      <SystemState>\n        <TagDescriptorState>\n          <AuthState>\n            <AlertState>\n              <Router>\n                <Switch>\n                  <Route exact path=\"/\" component={Login}/>\n                  <Route exact path=\"/newuser\" component={Newuser}/>\n                  <PrivateRoute exact path=\"/tagsdescriptors\" component={Tagsdescriptors}/>\n                  <PrivateRoute exact path=\"/assets\" component={Assets}/>\n                  <PrivateRoute exact path=\"/menu\" component={Menu}/>\n                </Switch>\n              </Router>\n            </AlertState>\n          </AuthState>\n        </TagDescriptorState>\n      </SystemState>\n    </AssetState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}