{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/tagdescriptor/tagDescriptorState.js\";\nimport React, { useReducer } from 'react';\nimport tagDescriptorContext from './tagDescriptorContext';\nimport tagDescriptorReducer from './tagDescriptorReducer';\nimport { FORM_TAGDESCRIPTOR, GET_TAGDESCRIPTOR, CREATE_TAGDESCRIPTOR, SHOW_ERROR_TAGDESCRIPTOR, SELECT_TAGDESCRIPTOR, DELETE_TAGDESCRIPTOR } from '../../types/index';\nimport axiosClient from '../../config/axios';\n\nconst TagDescriptorState = props => {\n  const initialState = {\n    tagdescriptors: [],\n    form: false,\n    error: false,\n    tagdescriptor: null,\n    message: null\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(tagDescriptorReducer, initialState); //defino las funciones para el CRUD de tagdescriptor\n\n  const showForm = () => {\n    dispatch({\n      type: FORM_TAGDESCRIPTOR\n    });\n  };\n\n  const getTagDescriptors = async system => {\n    try {\n      const res = await axiosClient.get('/api/tagsdescriptors', {\n        params: {\n          system\n        }\n      });\n      console.log(res);\n      dispatch({\n        type: GET_TAGDESCRIPTOR,\n        payload: res.data.tagdescriptors\n      });\n    } catch (error) {\n      const alert = {\n        msg: \"hubo un error buscando los tagdescriptors\",\n        category: \"alerta-error\"\n      };\n      dispatch({\n        type: SHOW_ERROR_TAGDESCRIPTOR,\n        payload: alert\n      });\n    }\n  };\n\n  const createTagDescriptor = async ptagdescriptor => {\n    try {\n      const res = await axiosClient.post('/api/tagsdescriptors', ptagdescriptor);\n      console.log(res.data);\n      dispatch({\n        type: CREATE_TAGDESCRIPTOR,\n        payload: res.data\n      });\n    } catch (error) {\n      const alert = {\n        msg: \"hubo un error creando el tag descriptor\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: SHOW_ERROR_TAGDESCRIPTOR,\n        payload: alert\n      });\n    }\n  };\n\n  const showError = () => {\n    dispatch({\n      type: SHOW_ERROR_TAGDESCRIPTOR\n    });\n  };\n\n  const selectTagDescriptor = idTagDescriptor => {\n    dispatch({\n      type: SELECT_TAGDESCRIPTOR,\n      payload: idTagDescriptor\n    });\n  };\n\n  const deleteTagDescriptor = async idTagDescriptor => {\n    try {\n      await axiosClient.delete(`/api/proyectos/${idTagDescriptor}`);\n      dispatch({\n        type: DELETE_TAGDESCRIPTOR,\n        payload: idTagDescriptor\n      });\n    } catch (error) {\n      const alert = {\n        msg: \"hubo un error eliminando el tag descriptor\",\n        category: \"alerta-error\"\n      };\n      dispatch({\n        type: SHOW_ERROR_TAGDESCRIPTOR,\n        payload: alert\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(tagDescriptorContext.Provider, {\n    value: {\n      tagdescriptors: state.tagdescriptors,\n      form: state.form,\n      error: state.error,\n      tagdescriptor: state.tagdescriptor,\n      message: state.message,\n      showForm,\n      getTagDescriptors,\n      createTagDescriptor,\n      showError,\n      selectTagDescriptor,\n      deleteTagDescriptor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TagDescriptorState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/tagdescriptor/tagDescriptorState.js"],"names":["React","useReducer","tagDescriptorContext","tagDescriptorReducer","FORM_TAGDESCRIPTOR","GET_TAGDESCRIPTOR","CREATE_TAGDESCRIPTOR","SHOW_ERROR_TAGDESCRIPTOR","SELECT_TAGDESCRIPTOR","DELETE_TAGDESCRIPTOR","axiosClient","TagDescriptorState","props","initialState","tagdescriptors","form","error","tagdescriptor","message","state","dispatch","showForm","type","getTagDescriptors","system","res","get","params","console","log","payload","data","alert","msg","category","createTagDescriptor","ptagdescriptor","post","categoria","showError","selectTagDescriptor","idTagDescriptor","deleteTagDescriptor","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport tagDescriptorContext from './tagDescriptorContext'\nimport tagDescriptorReducer from './tagDescriptorReducer'\nimport {\n    FORM_TAGDESCRIPTOR, \n    GET_TAGDESCRIPTOR,\n    CREATE_TAGDESCRIPTOR,\n    SHOW_ERROR_TAGDESCRIPTOR,\n    SELECT_TAGDESCRIPTOR,\n    DELETE_TAGDESCRIPTOR} from '../../types/index'\n\nimport axiosClient from '../../config/axios'\n\n\nconst TagDescriptorState = props=>{\n    \n    \n    const initialState={\n        tagdescriptors : [],\n        form:false,\n        error: false, \n        tagdescriptor: null,\n        message:null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(tagDescriptorReducer, initialState)\n\n\n    //defino las funciones para el CRUD de tagdescriptor\n    const showForm =()=>{\n        dispatch({\n            type: FORM_TAGDESCRIPTOR\n        })\n    }\n\n    const getTagDescriptors = async (system)=>{\n        try {\n            \n            const res = await axiosClient.get('/api/tagsdescriptors', {params:{system}});\n            console.log(res)\n            dispatch({\n                type: GET_TAGDESCRIPTOR,\n                payload: res.data.tagdescriptors\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error buscando los tagdescriptors\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const createTagDescriptor = async ptagdescriptor =>{\n\n        try {\n            const res = await axiosClient.post('/api/tagsdescriptors',ptagdescriptor);\n            console.log(res.data)\n            dispatch({\n                type: CREATE_TAGDESCRIPTOR,\n                payload: res.data\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error creando el tag descriptor\",\n                categoria:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n        \n    }\n\n    const showError = () =>{\n        dispatch({\n            type: SHOW_ERROR_TAGDESCRIPTOR\n        })\n    }\n\n    const selectTagDescriptor = (idTagDescriptor) =>{\n        dispatch({\n            type: SELECT_TAGDESCRIPTOR,\n            payload:idTagDescriptor\n        })\n    }\n\n    const deleteTagDescriptor = async (idTagDescriptor) =>{\n        try {\n            await axiosClient.delete(`/api/proyectos/${idTagDescriptor}`);\n            dispatch({\n                type:DELETE_TAGDESCRIPTOR,\n                payload:idTagDescriptor\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error eliminando el tag descriptor\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n       \n    }\n\n    return (\n        <tagDescriptorContext.Provider\n            value={{\n                tagdescriptors: state.tagdescriptors,\n                form: state.form,\n                error: state.error,\n                tagdescriptor: state.tagdescriptor,\n                message: state.message,\n                showForm, \n                getTagDescriptors,\n                createTagDescriptor,\n                showError, \n                selectTagDescriptor,\n                deleteTagDescriptor\n            }}\n        >\n\n            {props.children}\n        </tagDescriptorContext.Provider>\n    )\n\n}\n\nexport default TagDescriptorState;"]},"metadata":{},"sourceType":"module"}