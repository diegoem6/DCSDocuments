{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js\";\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../../context/system/systemContext';\nimport SunEditor, { buttonList } from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nimport alertContext from '../../context/alerts/alertContext';\nimport { Editor } from '@tinymce/tinymce-react'; //import Files from 'react-files'\n\nconst NewTagDescriptor = () => {\n  const tdContext = useContext(tagDescriptorContext);\n  const {\n    tagname_ok,\n    message,\n    createTagDescriptor,\n    tagdescriptor,\n    related,\n    resetMessage,\n    updateTagDescriptor,\n    validateTagname,\n    getTagDescriptorsRelated,\n    selectOnlyDescriptor\n  } = tdContext;\n  const sContext = useContext(systemContext);\n  const {\n    systemSelected\n  } = sContext;\n  const aContext = useContext(alertContext);\n  const {\n    showAlert\n  } = aContext;\n  const [tagname, setTagname] = useState('');\n  const [description, setDescription] = useState(''); // TODO: attachments\n  // const [attachments, setattachments] = useState({\n  //     files:[]\n  // })\n\n  const [icon, seticon] = useState('');\n  useEffect(() => {\n    if (tagdescriptor !== null && tagdescriptor.length > 0) {\n      const [currentTagDescriptor] = tagdescriptor;\n      setTagname(currentTagDescriptor.tagname);\n      setDescription(currentTagDescriptor.description);\n      getTagDescriptorsRelated(currentTagDescriptor._id);\n    } else {\n      setTagname('');\n      setDescription('');\n    } // eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    if (message) {\n      showAlert(message.msg, message.category);\n      console.log(message.category);\n\n      if (message.category === \"alerta-error\") {\n        seticon('-red');\n      } else {\n        seticon('');\n      }\n\n      resetMessage();\n    } // eslint-disable-next-line\n\n  }, [message]);\n  if (!systemSelected || !related) return null;\n\n  const onChangeTagDescriptor = e => {\n    setTagname(e.target.value);\n  };\n\n  const onBlurTagDescriptor = e => {\n    if (!(tagdescriptor !== null && tagdescriptor.length > 0)) {\n      validateTagname(e.target.value);\n    }\n\n    seticon('');\n  };\n\n  const onChangeRichText = value => {\n    setDescription(value);\n  };\n\n  const goToRelated = tagdescriptor_related => {\n    selectOnlyDescriptor(tagdescriptor_related);\n    setTagname(currentTagDescriptor.tagname);\n    setDescription(currentTagDescriptor.description);\n    getTagDescriptorsRelated(currentTagDescriptor._id); //showForm();\n  };\n\n  const onSubmitTagDescriptor = e => {\n    e.preventDefault(); //hacer validaciones y reseteo de form\n\n    if (tagname.trim() === '' || description.trim() === '') {\n      //alert(description.trim())\n      //alert(tagname.trim())\n      showAlert('Debe completar tagname y descripciÃ³n', 'alerta-error');\n      return;\n    } // llamo a agregar proyecto\n\n\n    let newTagDescriptor = {};\n    newTagDescriptor.tagname = tagname.toUpperCase();\n    newTagDescriptor.description = description;\n    newTagDescriptor.system = systemSelected._id; //TODO: attachmentss\n    //newTagDescriptor.attachments = attachments\n\n    if (tagdescriptor !== null && tagdescriptor.length > 0) {\n      const [currentTagDescriptor] = tagdescriptor;\n      newTagDescriptor._id = currentTagDescriptor._id;\n      updateTagDescriptor(newTagDescriptor);\n    } else {\n      if (tagname_ok === false) {\n        if (message) {\n          showAlert(message.msg, message.category);\n          resetMessage();\n        } else {\n          showAlert(\"El tag descriptor para ese tagname ya existe\", \"alerta-error\");\n        }\n\n        return;\n      }\n\n      createTagDescriptor(newTagDescriptor);\n    }\n  }; // TODO: attachments\n  // const onFilesChange = (files) => {\n  //     console.log(files)\n  //     console.log(files.type)\n  //     setattachments({...attachments,\n  //             files:files})\n  // }\n  // const onFilesError = (error, file) => {\n  //     console.log('error code ' + error.code + ': ' + error.message)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Tag descriptor en el sistema: \", systemSelected.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formDescriptor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descriptor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input-text${icon}`,\n    placeholder: \"Tag name\",\n    name: \"tagname\",\n    value: tagname,\n    onChange: onChangeTagDescriptor,\n    readOnly: tagdescriptor !== null && tagdescriptor.length > 0,\n    onBlur: onBlurTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(SunEditor, {\n    placeholder: \"descripci\\xF3n del tag\",\n    name: \"description\",\n    setOptions: {\n      height: 300,\n      buttonList: buttonList.complex\n    },\n    setContents: description,\n    onChange: onChangeRichText,\n    showToolbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }), tagdescriptor !== null && tagdescriptor.length > 0 ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Guardar Tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 34\n    }\n  }))), tagdescriptor !== null && tagdescriptor.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descriptorsRelated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 40\n    }\n  }, \"Descriptores relacionados\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, related.map(r => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"itemRelated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      goToRelated(r);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 49\n    }\n  }, \" \", r.tagname, \" \")))))));\n};\n\nexport default NewTagDescriptor;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js"],"names":["React","Fragment","useState","useContext","useEffect","tagDescriptorContext","systemContext","SunEditor","buttonList","alertContext","Editor","NewTagDescriptor","tdContext","tagname_ok","message","createTagDescriptor","tagdescriptor","related","resetMessage","updateTagDescriptor","validateTagname","getTagDescriptorsRelated","selectOnlyDescriptor","sContext","systemSelected","aContext","showAlert","tagname","setTagname","description","setDescription","icon","seticon","length","currentTagDescriptor","_id","msg","category","console","log","onChangeTagDescriptor","e","target","value","onBlurTagDescriptor","onChangeRichText","goToRelated","tagdescriptor_related","onSubmitTagDescriptor","preventDefault","trim","newTagDescriptor","toUpperCase","system","name","height","complex","map","r"],"mappings":"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","sourcesContent":["import React,{Fragment, useState, useContext, useEffect} from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext' \nimport systemContext from '../../context/system/systemContext' \nimport SunEditor,{buttonList} from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\nimport alertContext from '../../context/alerts/alertContext';\nimport { Editor } from '@tinymce/tinymce-react';\n//import Files from 'react-files'\n\nconst NewTagDescriptor = () => {\n    \n    const tdContext = useContext(tagDescriptorContext)\n    const {tagname_ok, message, createTagDescriptor, tagdescriptor, related, resetMessage, updateTagDescriptor, validateTagname, getTagDescriptorsRelated, selectOnlyDescriptor} = tdContext\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n\n    const aContext = useContext(alertContext)\n    const {showAlert} = aContext\n\n\n    const [tagname, setTagname] = useState('')\n    const [description, setDescription] = useState('')\n    // TODO: attachments\n    // const [attachments, setattachments] = useState({\n    //     files:[]\n    // })\n    \n    const [icon, seticon] = useState('')\n      \n \n    useEffect(() => {\n        if (tagdescriptor !== null && tagdescriptor.length>0){\n            const [currentTagDescriptor] = tagdescriptor\n            setTagname(currentTagDescriptor.tagname)\n            setDescription(currentTagDescriptor.description)\n            getTagDescriptorsRelated(currentTagDescriptor._id)\n        }else{\n            setTagname('')\n            setDescription('')\n        }\n        // eslint-disable-next-line\n    }, [])\n\n      \n    useEffect(() => {\n        if (message){\n            showAlert(message.msg,message.category)\n            console.log(message.category)\n            if(message.category===\"alerta-error\"){\n                seticon('-red')\n            }\n            else{\n                seticon('')\n            }\n            resetMessage();\n        }\n        // eslint-disable-next-line\n    }, [message])\n\n\n\n    if (!systemSelected || !related ) return null\n\n    const onChangeTagDescriptor = (e)=>{\n        setTagname(e.target.value)\n    }\n\n    const onBlurTagDescriptor = (e)=>{\n        if (!(tagdescriptor !== null && tagdescriptor.length>0)){\n            validateTagname (e.target.value);\n        }\n        seticon('')\n    }\n\n    const onChangeRichText = (value)=>{\n        setDescription(value)\n    }\n\n    const goToRelated = (tagdescriptor_related)=>{\n        selectOnlyDescriptor(tagdescriptor_related);\n        setTagname(currentTagDescriptor.tagname)\n        setDescription(currentTagDescriptor.description)\n        getTagDescriptorsRelated(currentTagDescriptor._id)\n        //showForm();\n    }\n    const onSubmitTagDescriptor = (e)=>{\n        e.preventDefault();\n\n        //hacer validaciones y reseteo de form\n        if (tagname.trim() === '' || description.trim()===''){\n            //alert(description.trim())\n            //alert(tagname.trim())\n            showAlert('Debe completar tagname y descripciÃ³n','alerta-error')\n            return;\n        }\n\n        \n\n        // llamo a agregar proyecto\n        let newTagDescriptor = {}\n        newTagDescriptor.tagname = tagname.toUpperCase()\n        newTagDescriptor.description = description\n        newTagDescriptor.system = systemSelected._id\n        \n        \n        //TODO: attachmentss\n        //newTagDescriptor.attachments = attachments\n\n        if (tagdescriptor !== null && tagdescriptor.length>0){\n            const [currentTagDescriptor] = tagdescriptor\n            newTagDescriptor._id = currentTagDescriptor._id\n            updateTagDescriptor(newTagDescriptor)  \n        }else{\n            \n            if(tagname_ok === false){\n                \n                if (message){\n                    showAlert(message.msg,message.category)\n                    resetMessage()\n                }else{\n                    showAlert(\"El tag descriptor para ese tagname ya existe\",\"alerta-error\")\n                }\n                return;\n            }\n            createTagDescriptor(newTagDescriptor)\n\n        }\n    }\n\n    // TODO: attachments\n    // const onFilesChange = (files) => {\n    //     console.log(files)\n    //     console.log(files.type)\n    //     setattachments({...attachments,\n    //             files:files})\n    // }\n    \n    // const onFilesError = (error, file) => {\n    //     console.log('error code ' + error.code + ': ' + error.message)\n    // }\n    \n    return ( \n        <Fragment>\n                <h2>Tag descriptor en el sistema: {systemSelected.name}</h2>\n                <div className=\"formDescriptor\">\n                    <div className=\"descriptor\">\n                        <form   \n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit = {onSubmitTagDescriptor}\n                            >\n                            <input  \n                                type=\"text\"\n                                className={`input-text${icon}`}\n                                placeholder=\"Tag name\"\n                                name=\"tagname\"\n                                value ={tagname}\n                                onChange = {onChangeTagDescriptor}\n                                readOnly = {(tagdescriptor !== null && tagdescriptor.length>0)}\n                                onBlur = {onBlurTagDescriptor}\n                            />\n                            \n                            {/* TODO: cambio de editor */}\n                            <SunEditor \n                                placeholder=\"descripciÃ³n del tag\"\n                                name=\"description\"\n                                setOptions={{\n                                    height: 300,\n                                    buttonList: buttonList.complex \n                                }}\n                                setContents ={description}\n                                onChange = {onChangeRichText}\n                                showToolbar={true}\n                                \n                            /> \n                            \n                            {/* <Editor\n                                initialValue={description}\n                                tinymceScriptSrc='/public/js/tinymce/tinymce.min.js'\n                                init={{\n                                height: 500,\n                                menubar: 'file edit view insert format tools table help',\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',\n                                toolbar_sticky: true,\n                                paste_retain_style_properties: \"all\"\n                                }\n                                }\n                                onEditorChange={onChangeRichText}\n                            /> \n                            <Editor\n                                initialValue={description}\n                                apiKey='ak1az6sw8c9hjvqp8qt932v5wkgl29teq3qoys34bf11cjvo'\n                                tinymceScriptSrc='/js/tinymce/tinymce.min.js'\n                                init={{\n                                height: 500,\n                                menubar: 'file edit view insert format tools table help',\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',\n                                toolbar_sticky: true,\n                                paste_retain_style_properties: \"all\"\n                                }\n                                }\n                                onEditorChange={onChangeRichText}\n                            />\n                                */}\n\n\n                            {/* TODO: attachments \n                            <Files\n                                className='files-dropzone'\n                                onChange={onFilesChange}\n                                onError={onFilesError}\n                                accepts={['image/png', '.jpg', '.pdf', 'audio/*']}\n                                multiple\n                                maxFiles={3}\n                                maxFileSize={10000000}\n                                minFileSize={0}\n                                clickable\n                                >\n                                Drop files here or click to upload\n                            </Files>\n                            */}\n                            {(tagdescriptor !== null && tagdescriptor.length>0) ?\n                        \n                                (<input \n                                    type=\"submit\"\n                                    className=\"btn btn-primario btn-block\"\n                                    value = \"Guardar Tag\"\n                                /> )\n                                :\n                                (<input \n                                    type=\"submit\"\n                                    className=\"btn btn-primario btn-block\"\n                                    value = \"Agregar Tag\"\n                                /> )\n                            }\n                            \n                        </form>\n                    </div>\n                    {\n                    (tagdescriptor !== null && tagdescriptor.length>0)  &&\n                            (\n                                <div className=\"descriptorsRelated\">\n                                    <p><b>Descriptores relacionados</b></p>\n                                    <ul>\n                                    {\n                                        related.map( r => \n                                            (<li className=\"itemRelated\">\n                                                <a onClick={()=>{goToRelated(r)}}> {r.tagname} </a>\n                                              </li>  \n                                            )\n                                        )\n                                    }\n                                    </ul>\n                                </div>\n                            )\n                    }\n                    \n                    \n                </div>\n                \n        </Fragment>\n     );\n}\n \nexport default NewTagDescriptor;"]},"metadata":{},"sourceType":"module"}