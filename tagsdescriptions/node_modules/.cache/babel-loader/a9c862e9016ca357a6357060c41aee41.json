{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/system/systemList.js\";\nimport React, { useContext, Fragment } from 'react';\nimport systemContext from '../../context/system/systemContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport System from './system';\nimport { confirmAlert } from 'react-confirm-alert';\nimport assetContext from '../../context/asset/assetContext';\n\nconst SystemList = () => {\n  const sContext = useContext(systemContext);\n  const {\n    systems\n  } = sContext;\n  const aContext = useContext(assetContext);\n  const {\n    asset,\n    deleteAsset\n  } = aContext;\n\n  if (!asset) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, \"Seleccione un asset\");\n  }\n\n  const [assetSelected] = asset;\n\n  const deleteAssetOnClick = () => {\n    deleteAsset(assetSelected);\n  };\n\n  const showDialogConfirm = () => {\n    confirmAlert({\n      title: 'Eliminar asset',\n      message: 'Se eliminaran todos los sistemas y descriptores asociados al asset',\n      buttons: [{\n        label: 'Yes',\n        onClick: () => deleteAssetOnClick()\n      }, {\n        label: 'No',\n        onClick: () => console.log(\"no\")\n      }]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Sistemas asignados al asset: \", asset.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, systems.length === 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 44\n    }\n  }, \"No hay sistemas asignados al asset\")) : /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, systems.map(system => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: system._id,\n    timeout: 200,\n    classNames: \"tarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(System, {\n    system: system,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-eliminar\",\n    onClick: showDialogConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Eliminar Asset \\xD7\"));\n};\n\nexport default SystemList;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/system/systemList.js"],"names":["React","useContext","Fragment","systemContext","CSSTransition","TransitionGroup","System","confirmAlert","assetContext","SystemList","sContext","systems","aContext","asset","deleteAsset","assetSelected","deleteAssetOnClick","showDialogConfirm","title","message","buttons","label","onClick","console","log","name","length","map","system","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAMC,QAAQ,GAAGT,UAAU,CAACE,aAAD,CAA3B;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAYD,QAAlB;AACA,QAAME,QAAQ,GAAGX,UAAU,CAACO,YAAD,CAA3B;AACA,QAAM;AAACK,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAsBF,QAA5B;;AAGA,MAAG,CAACC,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;;AACD,QAAM,CAACE,aAAD,IAAkBF,KAAxB;;AAEA,QAAMG,kBAAkB,GAAG,MAAI;AAC3BF,IAAAA,WAAW,CAACC,aAAD,CAAX;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAG,MAAI;AAC1BV,IAAAA,YAAY,CAAC;AACTW,MAAAA,KAAK,EAAE,gBADE;AAETC,MAAAA,OAAO,EAAE,oEAFA;AAGTC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,KADT;AAEEC,QAAAA,OAAO,EAAE,MAAMN,kBAAkB;AAFnC,OADO,EAKP;AACEK,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,IAAZ;AAFjB,OALO;AAHA,KAAD,CAAZ;AAcH,GAfD;;AAiBA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkCX,KAAK,CAACY,IAAxC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,OAAO,CAACe,MAAR,KAAiB,CAAlB,gBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAtB,CADJ,gBAGD,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCf,OAAO,CAACgB,GAAR,CAAYC,MAAM,iBACf,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,MAAM,CAACC,GADhB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,MAAD;AACI,IAAA,MAAM,EAAED,MADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADH,CADD,CAJJ,CAFJ,eAqBI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,kBAFd;AAGI,IAAA,OAAO,EAAEX,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BArBJ,CADJ;AA6BH,CA/DD;;AAiEA,eAAeR,UAAf","sourcesContent":["import React, {useContext, Fragment} from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport System from './system';\nimport { confirmAlert } from 'react-confirm-alert';\nimport assetContext from '../../context/asset/assetContext';\n\n\nconst SystemList = () => {\n\n    const sContext = useContext(systemContext)\n    const {systems} = sContext\n    const aContext = useContext(assetContext)\n    const {asset,deleteAsset} = aContext\n\n\n    if(!asset) {\n        return <h2>Seleccione un asset</h2>\n    }\n    const [assetSelected] = asset\n\n    const deleteAssetOnClick = ()=>{\n        deleteAsset(assetSelected)\n    }\n\n    const showDialogConfirm = ()=>{\n        confirmAlert({\n            title: 'Eliminar asset',\n            message: 'Se eliminaran todos los sistemas y descriptores asociados al asset',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => deleteAssetOnClick()\n              },\n              {\n                label: 'No',\n                onClick: () => console.log(\"no\")\n              }\n            ]\n          });\n    }\n    \n    return ( \n        <Fragment>\n            <h2>Sistemas asignados al asset: {asset.name}</h2>\n            <ul>\n                {(systems.length===0)?\n                    (<li className=\"tarea\"><p>No hay sistemas asignados al asset</p></li>)\n                :\n                <TransitionGroup>\n                {systems.map(system => (\n                    <CSSTransition\n                        key={system._id}\n                        timeout={200}\n                        classNames=\"tarea\"\n                    >\n                        <System \n                            system={system}\n                        />\n                    </CSSTransition>\n                ))}\n                </TransitionGroup>\n                }\n            </ul>\n            <button     \n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={showDialogConfirm}\n            >Eliminar Asset &times;</button>\n        </Fragment>\n     );\n}\n \nexport default SystemList;"]},"metadata":{},"sourceType":"module"}