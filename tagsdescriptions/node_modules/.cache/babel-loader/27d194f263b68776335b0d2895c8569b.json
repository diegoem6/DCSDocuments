{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/layout/sidebarDescriptors.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport assetContext from '../context/asset/assetContext';\nimport TreeMenu from 'react-simple-tree-menu';\nimport tagDescriptorContext from '../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../context/system/systemContext';\n\nconst SidebarDescriptors = () => {\n  const aContext = useContext(assetContext);\n  const {\n    assetsTree,\n    getAssetTree\n  } = aContext;\n  const tContext = useContext(tagDescriptorContext);\n  const {\n    deselectTagDescriptor\n  } = tContext;\n  const sContext = useContext(systemContext);\n  const {\n    selectSystem,\n    deselectSystem\n  } = sContext;\n  useEffect(() => {\n    const initAssetTree = () => {\n      getAssetTree();\n    };\n\n    initAssetTree();\n  }, []);\n\n  const selectSystemOnClick = system => {\n    selectSystem(system);\n    deselectTagDescriptor();\n  };\n\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Descriptores\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"DCS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"proyectos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Assets\"), /*#__PURE__*/React.createElement(TreeMenu, {\n    data: assetsTree,\n    selected: false,\n    debounceTime: 125,\n    disableKeyboard: true,\n    hasSearch: false,\n    onClickItem: ({\n      _id,\n      level,\n      label\n    }) => {\n      if (level === 1) {\n        let system = {};\n        system._id = _id;\n        system.name = label;\n        system.active = true;\n        selectSystemOnClick(system);\n      } else {\n        deselectSystem();\n      }\n    },\n    resetOpenNodesOnDataUpdate: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link-menu-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: '/menu',\n    className: \"link-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"< Menu\")));\n};\n\nexport default SidebarDescriptors;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/layout/sidebarDescriptors.js"],"names":["React","useContext","useEffect","Link","assetContext","TreeMenu","tagDescriptorContext","systemContext","SidebarDescriptors","aContext","assetsTree","getAssetTree","tContext","deselectTagDescriptor","sContext","selectSystem","deselectSystem","initAssetTree","selectSystemOnClick","system","_id","level","label","name","active"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,oBAAP,MAAiC,+CAAjC;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAIA,MAAMC,kBAAkB,GAAG,MAAM;AAG7B,QAAMC,QAAQ,GAAGR,UAAU,CAACG,YAAD,CAA3B;AACA,QAAM;AAACM,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA6BF,QAAnC;AAEA,QAAMG,QAAQ,GAAGX,UAAU,CAACK,oBAAD,CAA3B;AACA,QAAM;AAACO,IAAAA;AAAD,MAA0BD,QAAhC;AAEA,QAAME,QAAQ,GAAGb,UAAU,CAACM,aAAD,CAA3B;AACA,QAAM;AAACQ,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAiCF,QAAvC;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,aAAa,GAAG,MAAK;AACvBN,MAAAA,YAAY;AAEf,KAHD;;AAIAM,IAAAA,aAAa;AAGhB,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,mBAAmB,GAAIC,MAAD,IAAU;AAClCJ,IAAAA,YAAY,CAACI,MAAD,CAAZ;AACAN,IAAAA,qBAAqB;AAExB,GAJD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhB,CADJ,eAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEH,UADV;AAEI,IAAA,QAAQ,EAAE,KAFd;AAGI,IAAA,YAAY,EAAE,GAHlB;AAII,IAAA,eAAe,EAAE,IAJrB;AAKI,IAAA,SAAS,EAAE,KALf;AAMI,IAAA,WAAW,EAAE,CAAC;AAACU,MAAAA,GAAD;AAAKC,MAAAA,KAAL;AAAYC,MAAAA;AAAZ,KAAD,KAAsB;AAC/B,UAAID,KAAK,KAAG,CAAZ,EAAc;AACV,YAAIF,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACC,GAAP,GAAaA,GAAb;AACAD,QAAAA,MAAM,CAACI,IAAP,GAAcD,KAAd;AACAH,QAAAA,MAAM,CAACK,MAAP,GAAgB,IAAhB;AACAN,QAAAA,mBAAmB,CAACC,MAAD,CAAnB;AACH,OAND,MAMK;AACDH,QAAAA,cAAc;AACjB;AACJ,KAhBL;AAiBI,IAAA,0BAA0B,EAAE,KAjBhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAHJ,eA0BI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAE,OADR;AAEI,IAAA,SAAS,EAAC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CA1BJ,CADJ;AAsCH,CAnED;;AAqEA,eAAeR,kBAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport { Link } from 'react-router-dom'\nimport assetContext from '../context/asset/assetContext'\nimport TreeMenu from 'react-simple-tree-menu'\nimport tagDescriptorContext from '../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../context/system/systemContext';\n\n\n\nconst SidebarDescriptors = () => {\n    \n\n    const aContext = useContext(assetContext)\n    const {assetsTree, getAssetTree} = aContext\n\n    const tContext = useContext(tagDescriptorContext)\n    const {deselectTagDescriptor} = tContext\n\n    const sContext = useContext(systemContext)\n    const {selectSystem, deselectSystem} = sContext\n\n    \n    useEffect(() => {\n        const initAssetTree = () =>{\n            getAssetTree();\n            \n        }\n        initAssetTree()\n        \n        \n    }, [])\n\n    const selectSystemOnClick = (system)=>{\n        selectSystem(system);\n        deselectTagDescriptor();\n\n    }\n\n    return ( \n        <aside>\n            <h1>Descriptores<span>DCS</span></h1>\n           \n            <div className=\"proyectos\">\n                \n                <h2>Assets</h2>  \n                <TreeMenu \n                    data={assetsTree} \n                    selected={false}\n                    debounceTime={125}\n                    disableKeyboard={true}\n                    hasSearch={false}\n                    onClickItem={({_id,level, label})=>{\n                        if (level===1){\n                            let system = {}\n                            system._id = _id\n                            system.name = label\n                            system.active = true\n                            selectSystemOnClick(system)\n                        }else{\n                            deselectSystem()\n                        }\n                    }}\n                    resetOpenNodesOnDataUpdate={false}    \n                /> \n            </div>  \n            <div className=\"link-menu-div\">\n                <Link \n                    to={'/menu'}\n                    className=\"link-menu\">\n                &#60;\n                    Menu\n                </Link>\n            </div>\n        </aside>\n\n     );\n}\n \nexport default SidebarDescriptors;"]},"metadata":{},"sourceType":"module"}