{"ast":null,"code":"import _regeneratorRuntime from\"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import tagDescriptorContext from'./tagDescriptorContext';import tagDescriptorReducer from'./tagDescriptorReducer';import{FORM_TAGDESCRIPTOR,GET_TAGDESCRIPTOR,CREATE_TAGDESCRIPTOR,SHOW_ERROR_TAGDESCRIPTOR,UPDATE_TAGDESCRIPTOR,SELECT_TAGDESCRIPTOR,DESELECT_TAGDESCRIPTOR,GET_TAGSDESCRIPTORS,DELETE_TAGDESCRIPTOR,SEARCH_TAGSDESCRIPTORS,RESET_MESSAGE,VALIDATE_TAGDESCRIPTOR,INVALIDATE_TAGDESCRIPTOR}from'../../types/index';import axiosClient from'../../config/axios';var TagDescriptorState=function TagDescriptorState(props){var initialState={tagdescriptors:[],searchtagdescriptors:[],form:false,tagname_ok:true,tagdescriptor:null,message:null};//Dispatch para ejecutar las acciones\nvar _useReducer=useReducer(tagDescriptorReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];//defino las funciones para el CRUD de tagdescriptor\nvar showForm=function showForm(){dispatch({type:FORM_TAGDESCRIPTOR});};var getTagsDescriptors=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(system){var res,alert;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axiosClient.get('/api/tagsdescriptors',{params:{system:system}});case 3:res=_context.sent;dispatch({type:GET_TAGSDESCRIPTORS,payload:res.data.tagsdescriptors});_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);alert={msg:\"hubo un error buscando los tagdescriptors\",category:\"alerta-error\"};dispatch({type:SHOW_ERROR_TAGDESCRIPTOR,payload:alert});case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function getTagsDescriptors(_x){return _ref.apply(this,arguments);};}();var searchTagsDescriptors=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(search){var alert;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{console.log(search);dispatch({type:SEARCH_TAGSDESCRIPTORS,payload:search});}catch(error){alert={msg:\"hubo un error buscando los tagdescriptors\",category:\"alerta-error\"};dispatch({type:SHOW_ERROR_TAGDESCRIPTOR,payload:alert});}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function searchTagsDescriptors(_x2){return _ref2.apply(this,arguments);};}();var getTagDescriptor=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var res,alert;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axiosClient.get(\"/api/showtag/\".concat(id));case 3:res=_context3.sent;console.log(res);dispatch({type:GET_TAGDESCRIPTOR,payload:res.data.tagdescriptor});_context3.next=12;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);alert={msg:\"No existe el tag descriptor\",category:\"alerta-error\"};dispatch({type:SHOW_ERROR_TAGDESCRIPTOR,payload:alert});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function getTagDescriptor(_x3){return _ref3.apply(this,arguments);};}();var resetMessage=function resetMessage(){dispatch({type:RESET_MESSAGE});};var createTagDescriptor=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ptagdescriptor){var res,alert;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return axiosClient.post('/api/tagsdescriptors',ptagdescriptor);case 3:res=_context4.sent;dispatch({type:CREATE_TAGDESCRIPTOR,payload:res.data});_context4.next=11;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);alert={msg:_context4.t0.response.data.msg,category:\"alerta-error\"};dispatch({type:SHOW_ERROR_TAGDESCRIPTOR,payload:alert});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function createTagDescriptor(_x4){return _ref4.apply(this,arguments);};}();var showError=function showError(){dispatch({type:SHOW_ERROR_TAGDESCRIPTOR});};var selectTagDescriptor=function selectTagDescriptor(id_tagdescriptor){dispatch({type:SELECT_TAGDESCRIPTOR,payload:id_tagdescriptor});};var deselectTagDescriptor=function deselectTagDescriptor(id_tagdescriptor){dispatch({type:DESELECT_TAGDESCRIPTOR});};var deleteTagDescriptor=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(idTagDescriptor){var alert;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return axiosClient.delete(\"/api/tagsdescriptors/\".concat(idTagDescriptor));case 3:dispatch({type:DELETE_TAGDESCRIPTOR,payload:idTagDescriptor});_context5.next=10;break;case 6:_context5.prev=6;_context5.t0=_context5[\"catch\"](0);alert={msg:\"hubo un error eliminando el tag descriptor\",category:\"alerta-error\"};dispatch({type:SHOW_ERROR_TAGDESCRIPTOR,payload:alert});case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[0,6]]);}));return function deleteTagDescriptor(_x5){return _ref5.apply(this,arguments);};}();var validateTagname=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id){var alert;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return axiosClient.get(\"/api/showtag/\".concat(id));case 3:alert={msg:\"El tag descriptor para ese tagname ya existe\",category:\"alerta-error\"};dispatch({type:INVALIDATE_TAGDESCRIPTOR,payload:alert});_context6.next=10;break;case 7:_context6.prev=7;_context6.t0=_context6[\"catch\"](0);dispatch({type:VALIDATE_TAGDESCRIPTOR});case 10:case\"end\":return _context6.stop();}}},_callee6,null,[[0,7]]);}));return function validateTagname(_x6){return _ref6.apply(this,arguments);};}();var updateTagDescriptor=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(tagdescriptor){var id,res;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;id=tagdescriptor._id;_context7.next=4;return axiosClient.put(\"/api/tagsdescriptors/\".concat(id),tagdescriptor);case 4:res=_context7.sent;dispatch({type:UPDATE_TAGDESCRIPTOR,payload:res.data.tag_descriptor_modified});_context7.next=11;break;case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](0);console.log(_context7.t0);case 11:case\"end\":return _context7.stop();}}},_callee7,null,[[0,8]]);}));return function updateTagDescriptor(_x7){return _ref7.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(tagDescriptorContext.Provider,{value:{tagdescriptors:state.tagdescriptors,form:state.form,error:state.error,tagdescriptor:state.tagdescriptor,message:state.message,searchtagdescriptors:state.searchtagdescriptors,tagname_ok:state.tagname_ok,showForm:showForm,getTagsDescriptors:getTagsDescriptors,createTagDescriptor:createTagDescriptor,showError:showError,selectTagDescriptor:selectTagDescriptor,deleteTagDescriptor:deleteTagDescriptor,getTagDescriptor:getTagDescriptor,deselectTagDescriptor:deselectTagDescriptor,updateTagDescriptor:updateTagDescriptor,searchTagsDescriptors:searchTagsDescriptors,resetMessage:resetMessage,validateTagname:validateTagname}},props.children);};export default TagDescriptorState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/tagdescriptor/tagDescriptorState.js"],"names":["React","useReducer","tagDescriptorContext","tagDescriptorReducer","FORM_TAGDESCRIPTOR","GET_TAGDESCRIPTOR","CREATE_TAGDESCRIPTOR","SHOW_ERROR_TAGDESCRIPTOR","UPDATE_TAGDESCRIPTOR","SELECT_TAGDESCRIPTOR","DESELECT_TAGDESCRIPTOR","GET_TAGSDESCRIPTORS","DELETE_TAGDESCRIPTOR","SEARCH_TAGSDESCRIPTORS","RESET_MESSAGE","VALIDATE_TAGDESCRIPTOR","INVALIDATE_TAGDESCRIPTOR","axiosClient","TagDescriptorState","props","initialState","tagdescriptors","searchtagdescriptors","form","tagname_ok","tagdescriptor","message","state","dispatch","showForm","type","getTagsDescriptors","system","get","params","res","payload","data","tagsdescriptors","alert","msg","category","searchTagsDescriptors","search","console","log","error","getTagDescriptor","id","resetMessage","createTagDescriptor","ptagdescriptor","post","response","showError","selectTagDescriptor","id_tagdescriptor","deselectTagDescriptor","deleteTagDescriptor","idTagDescriptor","delete","validateTagname","updateTagDescriptor","_id","put","tag_descriptor_modified","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport tagDescriptorContext from './tagDescriptorContext'\nimport tagDescriptorReducer from './tagDescriptorReducer'\nimport {\n    FORM_TAGDESCRIPTOR, \n    GET_TAGDESCRIPTOR,\n    CREATE_TAGDESCRIPTOR,\n    SHOW_ERROR_TAGDESCRIPTOR,\n    UPDATE_TAGDESCRIPTOR,\n    SELECT_TAGDESCRIPTOR,\n    DESELECT_TAGDESCRIPTOR,\n    GET_TAGSDESCRIPTORS,\n    DELETE_TAGDESCRIPTOR,\n    SEARCH_TAGSDESCRIPTORS,\n    RESET_MESSAGE,\n    VALIDATE_TAGDESCRIPTOR,\n    INVALIDATE_TAGDESCRIPTOR} from '../../types/index'\n\nimport axiosClient from '../../config/axios'\n\n\nconst TagDescriptorState = props=>{\n    \n    \n    const initialState={\n        tagdescriptors : [],\n        searchtagdescriptors: [],\n        form:false,\n        tagname_ok: true, \n        tagdescriptor: null,\n        message:null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(tagDescriptorReducer, initialState)\n\n\n    //defino las funciones para el CRUD de tagdescriptor\n    const showForm =()=>{\n        dispatch({\n            type: FORM_TAGDESCRIPTOR\n        })\n    }\n\n    const getTagsDescriptors = async (system)=>{\n        try {\n            \n            const res = await axiosClient.get('/api/tagsdescriptors', {params:{system}});\n            dispatch({\n                type: GET_TAGSDESCRIPTORS,\n                payload: res.data.tagsdescriptors\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error buscando los tagdescriptors\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const searchTagsDescriptors = async (search)=>{\n        try {\n            console.log(search)\n            \n            dispatch({\n                type: SEARCH_TAGSDESCRIPTORS,\n                payload: search\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error buscando los tagdescriptors\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const getTagDescriptor = async (id)=>{\n        try {\n            \n            const res = await axiosClient.get(`/api/showtag/${id}`);\n            console.log(res)\n            dispatch({\n                type: GET_TAGDESCRIPTOR,\n                payload: res.data.tagdescriptor\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"No existe el tag descriptor\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n    }\n\n    const resetMessage = ()=>{\n        dispatch({\n            type:RESET_MESSAGE\n        })\n    }\n    const createTagDescriptor = async ptagdescriptor =>{\n\n        try {\n            \n            const res = await axiosClient.post('/api/tagsdescriptors',ptagdescriptor);\n            dispatch({\n                type: CREATE_TAGDESCRIPTOR,\n                payload: res.data\n            })\n            \n            \n        } catch (error) {\n            const alert = {\n                msg:error.response.data.msg,\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n        \n    }\n\n    const showError = () =>{\n        dispatch({\n            type: SHOW_ERROR_TAGDESCRIPTOR\n        })\n    }\n\n    const selectTagDescriptor = (id_tagdescriptor) =>{\n        dispatch({\n            type: SELECT_TAGDESCRIPTOR,\n            payload:id_tagdescriptor\n        })\n    }\n\n    const deselectTagDescriptor = (id_tagdescriptor) =>{\n        dispatch({\n            type: DESELECT_TAGDESCRIPTOR\n        })\n    }\n\n    const deleteTagDescriptor = async (idTagDescriptor) =>{\n        try {\n            await axiosClient.delete(`/api/tagsdescriptors/${idTagDescriptor}`);\n            dispatch({\n                type:DELETE_TAGDESCRIPTOR,\n                payload:idTagDescriptor\n            })\n        } catch (error) {\n            const alert = {\n                msg:\"hubo un error eliminando el tag descriptor\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type:SHOW_ERROR_TAGDESCRIPTOR,\n                payload: alert\n            })\n        }\n        \n       \n    }\n\n    const validateTagname = async (id) =>{\n        try {\n            await axiosClient.get(`/api/showtag/${id}`);\n            const alert = {\n                msg:\"El tag descriptor para ese tagname ya existe\",\n                category:\"alerta-error\"\n            }\n            dispatch({\n                type: INVALIDATE_TAGDESCRIPTOR,\n                payload: alert\n            })\n        } catch (error) {\n            dispatch({\n                type:VALIDATE_TAGDESCRIPTOR\n            })\n        }\n    }\n\n    const updateTagDescriptor = async (tagdescriptor) =>{\n        try {\n            const id = tagdescriptor._id\n            const res = await axiosClient.put(`/api/tagsdescriptors/${id}`,tagdescriptor)\n            \n            dispatch({\n                type:UPDATE_TAGDESCRIPTOR,\n                payload:res.data.tag_descriptor_modified\n            })\n            \n\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    return (\n        <tagDescriptorContext.Provider\n            value={{\n                tagdescriptors: state.tagdescriptors,\n                form: state.form,\n                error: state.error,\n                tagdescriptor: state.tagdescriptor,\n                message: state.message,\n                searchtagdescriptors: state.searchtagdescriptors,\n                tagname_ok:state.tagname_ok,\n                showForm, \n                getTagsDescriptors,\n                createTagDescriptor,\n                showError, \n                selectTagDescriptor,\n                deleteTagDescriptor,\n                getTagDescriptor,\n                deselectTagDescriptor,\n                updateTagDescriptor,\n                searchTagsDescriptors,\n                resetMessage,\n                validateTagname\n            }}\n        >\n\n            {props.children}\n        </tagDescriptorContext.Provider>\n    )\n\n}\n\nexport default TagDescriptorState;"]},"metadata":{},"sourceType":"module"}