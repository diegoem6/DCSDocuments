{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js\";\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../../context/system/systemContext';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nimport { UPDATE_TAGDESCRIPTOR } from '../../types';\nimport alertContext from '../../context/alerts/alertContext';\nimport SearchTagDescriptor from './searchTagDescriptor';\n\nconst NewTagDescriptor = () => {\n  const tdContext = useContext(tagDescriptorContext);\n  const {\n    tagname_ok,\n    message,\n    createTagDescriptor,\n    tagdescriptor,\n    resetMessage,\n    updateTagDescriptor,\n    validateTagname\n  } = tdContext;\n  const sContext = useContext(systemContext);\n  const {\n    systemSelected\n  } = sContext;\n  const aContext = useContext(alertContext);\n  const {\n    showAlert\n  } = aContext;\n  const [tagname, setTagname] = useState('');\n  const [description, setDescription] = useState('');\n  const [files, setFiles] = useState({\n    files: []\n  });\n  const [icon, seticon] = useState('');\n  useEffect(() => {\n    if (tagdescriptor !== null && tagdescriptor.length > 0) {\n      const [currentTagDescriptor] = tagdescriptor;\n      setTagname(currentTagDescriptor.tagname);\n      setDescription(currentTagDescriptor.description);\n    } else {\n      setTagname('');\n      setDescription('');\n    }\n  }, []);\n  useEffect(() => {\n    if (message) {\n      showAlert(message.msg, message.category);\n      console.log(message.category);\n\n      if (message.category === \"alerta-error\") {\n        seticon('-red');\n      } else {\n        seticon('');\n      }\n\n      resetMessage();\n    }\n  }, [message]);\n  if (!systemSelected) return null;\n\n  const onChangeTagDescriptor = e => {\n    setTagname(e.target.value);\n  };\n\n  const onBlurTagDescriptor = e => {\n    if (!(tagdescriptor !== null && tagdescriptor.length > 0)) {\n      validateTagname(e.target.value);\n    }\n\n    seticon('');\n  };\n\n  const onChangeRichText = value => {\n    setDescription(value);\n  };\n\n  const onSubmitTagDescriptor = e => {\n    e.preventDefault(); //hacer validaciones y reseteo de form\n\n    if (tagname.trim() === '' || description.trim() === '') {\n      //alert(description.trim())\n      //alert(tagname.trim())\n      showAlert('Debe completar tagname y descripciÃ³n', 'alerta-error');\n      return;\n    } // llamo a agregar proyecto\n\n\n    let newTagDescriptor = {};\n    newTagDescriptor.tagname = tagname;\n    newTagDescriptor.description = description;\n    newTagDescriptor.system = systemSelected._id;\n\n    if (tagdescriptor !== null && tagdescriptor.length > 0) {\n      const [currentTagDescriptor] = tagdescriptor;\n      newTagDescriptor._id = currentTagDescriptor._id;\n      updateTagDescriptor(newTagDescriptor);\n    } else {\n      if (tagname_ok === false) {\n        if (message) {\n          showAlert(message.msg, message.category);\n          resetMessage();\n        } else {\n          showAlert(\"El tag descriptor para ese tagname ya existe\", \"alerta-error\");\n        }\n\n        return;\n      }\n\n      createTagDescriptor(newTagDescriptor);\n    }\n  };\n\n  const onChangeInputFile = e => {\n    let iFiles = e.target.files;\n    console.log(iFiles);\n    var filesArr = Array.prototype.slice.call(iFiles);\n    console.log(filesArr);\n    setFiles({ ...files,\n      files: filesArr\n    });\n  };\n\n  const removeFile = f => {\n    setFiles({\n      files: files.filter(x => x !== f)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Nuevo tags descriptor en el sistema: \", systemSelected.name), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input-text${icon}`,\n    placeholder: \"Tag name\",\n    name: \"tagname\",\n    value: tagname,\n    onChange: onChangeTagDescriptor,\n    readOnly: tagdescriptor !== null && tagdescriptor.length > 0,\n    onBlur: onBlurTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(SunEditor, {\n    placeholder: \"descripci\\xF3n del tag\",\n    name: \"description\",\n    setOptions: {\n      height: 300\n    },\n    setContents: description,\n    onChange: onChangeRichText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChangeInputFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-cloud-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }), \" Attach\"), console.log(files.length)(files.files.map(x => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-preview\",\n    onClick: removeFile(x),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 43\n    }\n  }, x.name))), tagdescriptor !== null && tagdescriptor.length > 0 ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Guardar Tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 30\n    }\n  })));\n};\n\nexport default NewTagDescriptor;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js"],"names":["React","Fragment","useState","useContext","useEffect","tagDescriptorContext","systemContext","SunEditor","UPDATE_TAGDESCRIPTOR","alertContext","SearchTagDescriptor","NewTagDescriptor","tdContext","tagname_ok","message","createTagDescriptor","tagdescriptor","resetMessage","updateTagDescriptor","validateTagname","sContext","systemSelected","aContext","showAlert","tagname","setTagname","description","setDescription","files","setFiles","icon","seticon","length","currentTagDescriptor","msg","category","console","log","onChangeTagDescriptor","e","target","value","onBlurTagDescriptor","onChangeRichText","onSubmitTagDescriptor","preventDefault","trim","newTagDescriptor","system","_id","onChangeInputFile","iFiles","filesArr","Array","prototype","slice","call","removeFile","f","filter","x","name","height","map"],"mappings":"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","sourcesContent":["import React,{Fragment, useState, useContext, useEffect} from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext' \nimport systemContext from '../../context/system/systemContext' \nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\nimport { UPDATE_TAGDESCRIPTOR } from '../../types';\nimport alertContext from '../../context/alerts/alertContext';\nimport SearchTagDescriptor from './searchTagDescriptor';\n\nconst NewTagDescriptor = () => {\n    \n    const tdContext = useContext(tagDescriptorContext)\n    const {tagname_ok, message, createTagDescriptor, tagdescriptor, resetMessage, updateTagDescriptor, validateTagname} = tdContext\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n\n    const aContext = useContext(alertContext)\n    const {showAlert} = aContext\n\n\n    const [tagname, setTagname] = useState('')\n    const [description, setDescription] = useState('')\n    const [files, setFiles] = useState({\n        files: []\n    })\n    \n    const [icon, seticon] = useState('')\n      \n \n    useEffect(() => {\n        \n        if (tagdescriptor !== null && tagdescriptor.length>0){\n            const [currentTagDescriptor] = tagdescriptor\n            setTagname(currentTagDescriptor.tagname)\n            setDescription(currentTagDescriptor.description)\n            \n        }else{\n            setTagname('')\n            setDescription('')\n        }\n    }, [])\n\n      \n    useEffect(() => {\n        if (message){\n            showAlert(message.msg,message.category)\n            console.log(message.category)\n            if(message.category===\"alerta-error\"){\n                seticon('-red')\n            }\n            else{\n                seticon('')\n            }\n            resetMessage();\n            \n        }\n    }, [message])\n\n\n\n    if (!systemSelected) return null\n\n    const onChangeTagDescriptor = (e)=>{\n        setTagname(e.target.value)\n    }\n\n    const onBlurTagDescriptor = (e)=>{\n        if (!(tagdescriptor !== null && tagdescriptor.length>0)){\n            validateTagname (e.target.value);\n        }\n        seticon('')\n    }\n\n    const onChangeRichText = (value)=>{\n        setDescription(value)\n    }\n\n    const onSubmitTagDescriptor = (e)=>{\n        e.preventDefault();\n\n        //hacer validaciones y reseteo de form\n        if (tagname.trim() === '' || description.trim()===''){\n            //alert(description.trim())\n            //alert(tagname.trim())\n            showAlert('Debe completar tagname y descripciÃ³n','alerta-error')\n            return;\n        }\n\n        \n\n        // llamo a agregar proyecto\n        let newTagDescriptor = {}\n        newTagDescriptor.tagname = tagname\n        newTagDescriptor.description = description\n        newTagDescriptor.system = systemSelected._id\n        \n\n        if (tagdescriptor !== null && tagdescriptor.length>0){\n            const [currentTagDescriptor] = tagdescriptor\n            newTagDescriptor._id = currentTagDescriptor._id\n            updateTagDescriptor(newTagDescriptor)  \n        }else{\n            \n            if(tagname_ok === false){\n                \n                if (message){\n                    showAlert(message.msg,message.category)\n                    resetMessage()\n                }else{\n                    showAlert(\"El tag descriptor para ese tagname ya existe\",\"alerta-error\")\n                }\n                return;\n            }\n            createTagDescriptor(newTagDescriptor)\n\n        }\n    }\n    const onChangeInputFile = (e) =>{\n        let iFiles = e.target.files;\n        console.log(iFiles);\n        var filesArr = Array.prototype.slice.call(iFiles);\n        console.log(filesArr);\n        setFiles({...files, files:filesArr});\n          \n    }\n    const removeFile = (f) => {\n        setFiles({files: files.filter(x => x !== f)}); \n    }\n    return ( \n        <Fragment>\n                \n                <h2>Nuevo tags descriptor en el sistema: {systemSelected.name}</h2>\n                    \n                    <form   \n                        className=\"formulario-nuevo-proyecto\"\n                        onSubmit = {onSubmitTagDescriptor}\n                        >\n                        <input  \n                            type=\"text\"\n                            className={`input-text${icon}`}\n                            placeholder=\"Tag name\"\n                            name=\"tagname\"\n                            value ={tagname}\n                            onChange = {onChangeTagDescriptor}\n                            readOnly = {(tagdescriptor !== null && tagdescriptor.length>0)}\n                            onBlur = {onBlurTagDescriptor}\n                        />\n                        {/* <i className={`flaticon-${icon}`}></i> \n                         */}\n                        <SunEditor \n                            placeholder=\"descripciÃ³n del tag\"\n                            name=\"description\"\n                            setOptions={{\n                                height: 300}}\n                            setContents ={description}\n                            onChange = {onChangeRichText}\n                        /> \n                        <label className=\"custom-file-upload\">\n                            <input type=\"file\" onChange={onChangeInputFile} />\n                            <i className=\"fa fa-cloud-upload\" /> Attach\n                        </label>\n                         {\n                            console.log(files.length)\n                            (files.files.map(x => \n                                          <div className=\"file-preview\" onClick={removeFile(x)}>{x.name}</div>\n                                          )\n                              )\n                        }  \n\n                        {(tagdescriptor !== null && tagdescriptor.length>0) ?\n                    \n                            (<input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value = \"Guardar Tag\"\n                            /> )\n                            :\n                            (<input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value = \"Agregar Tag\"\n                            /> )\n                        }\n                          \n                    </form>\n                \n        </Fragment>\n     );\n}\n \nexport default NewTagDescriptor;"]},"metadata":{},"sourceType":"module"}