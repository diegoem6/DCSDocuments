{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../../context/system/systemContext';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nconst NewTagDescriptor = () => {\n  const tdContext = useContext(tagDescriptorContext);\n  const {\n    error,\n    createTagDescriptor,\n    showError,\n    tagdescriptor\n  } = tdContext;\n  const sContext = useContext(systemContext);\n  const {\n    systemSelected\n  } = sContext;\n  const [tagname, setTagname] = useState('');\n  const [description, setDescription] = useState('');\n  const [currentTagDescriptor] = tagdescriptor;\n\n  if (!currentTagDescriptor) {\n    setTagname(currentTagDescriptor.tagname);\n    setDescription(currentTagDescriptor.description);\n  }\n\n  if (!systemSelected) return null;\n\n  const onChangeTagDescriptor = e => {\n    setTagname(e.target.value);\n  };\n\n  const onChangeRichText = value => {\n    setDescription(value);\n  };\n\n  const onSubmitTagDescriptor = e => {\n    e.preventDefault(); //hacer validaciones y reseteo de form\n\n    if (tagname.trim() === '' || description.trim() === '') {\n      //alert(description.trim())\n      //alert(tagname.trim())\n      showError();\n      return;\n    } // llamo a agregar proyecto\n\n\n    let tagDescriptor = {};\n    tagDescriptor.tagname = tagname;\n    tagDescriptor.description = description;\n    tagDescriptor.system = systemSelected._id;\n    createTagDescriptor(tagDescriptor);\n    setDescription(\"\");\n    setTagname(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Nuevo tags descriptor en el sistema: \", systemSelected.name), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Tag name\",\n    name: \"tagname\",\n    value: tagname,\n    onChange: onChangeTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(SunEditor, {\n    placeholder: \"descripci\\xF3n del tag\",\n    name: \"description\",\n    setOptions: {\n      height: 300\n    },\n    value: description,\n    onChange: onChangeRichText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })), error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"El nombre del formulario no puede estar vac\\xEDo\") : null);\n};\n\nexport default NewTagDescriptor;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js"],"names":["React","Fragment","useState","useContext","tagDescriptorContext","systemContext","SunEditor","NewTagDescriptor","tdContext","error","createTagDescriptor","showError","tagdescriptor","sContext","systemSelected","tagname","setTagname","description","setDescription","currentTagDescriptor","onChangeTagDescriptor","e","target","value","onChangeRichText","onSubmitTagDescriptor","preventDefault","trim","tagDescriptor","system","_id","name","height"],"mappings":"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","sourcesContent":["import React,{Fragment, useState, useContext} from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext' \nimport systemContext from '../../context/system/systemContext' \nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nconst NewTagDescriptor = () => {\n    \n    const tdContext = useContext(tagDescriptorContext)\n    const {error, createTagDescriptor, showError, tagdescriptor} = tdContext\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n\n    const [tagname, setTagname] = useState('')\n    const [description, setDescription] = useState('')\n    \n    const [currentTagDescriptor] = tagdescriptor\n    if (!currentTagDescriptor){\n        setTagname(currentTagDescriptor.tagname)\n        setDescription(currentTagDescriptor.description)\n    }\n \n    if (!systemSelected) return null\n\n    const onChangeTagDescriptor = (e)=>{\n        setTagname(e.target.value)\n    }\n\n    const onChangeRichText = (value)=>{\n        setDescription(value)\n    }\n\n    const onSubmitTagDescriptor = (e)=>{\n        e.preventDefault();\n\n        //hacer validaciones y reseteo de form\n        if (tagname.trim() === '' || description.trim()===''){\n            //alert(description.trim())\n            //alert(tagname.trim())\n            showError()\n            return;\n        }\n\n        // llamo a agregar proyecto\n        let tagDescriptor = {}\n        tagDescriptor.tagname = tagname\n        tagDescriptor.description = description\n        tagDescriptor.system = systemSelected._id\n        \n        createTagDescriptor(tagDescriptor)\n        setDescription(\"\")\n        setTagname(\"\")\n    }\n    return ( \n        <Fragment>\n                <h2>Nuevo tags descriptor en el sistema: {systemSelected.name}</h2>\n                    <form   \n                        className=\"formulario-nuevo-proyecto\"\n                        onSubmit = {onSubmitTagDescriptor}\n                        >\n                        <input  \n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Tag name\"\n                            name=\"tagname\"\n                            value ={tagname}\n                            onChange = {onChangeTagDescriptor}\n                        />\n                        \n                        <SunEditor \n                            placeholder=\"descripciÃ³n del tag\"\n                            name=\"description\"\n                            setOptions={{\n                                height: 300}}\n                            value ={description}\n                            onChange = {onChangeRichText}\n                        /> \n                        {/* <textarea \n                            name=\"description\"\n                            value ={description}\n                            onChange = {onChangeTagDescriptor}\n                        > \n\n                        </textarea>*/}\n\n                        <input \n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value = \"Agregar Tag\"\n                        />    \n                    </form>\n                {error? <p className=\"mensaje error\">El nombre del formulario no puede estar vacÃ­o</p> : null}\n        </Fragment>\n     );\n}\n \nexport default NewTagDescriptor;"]},"metadata":{},"sourceType":"module"}