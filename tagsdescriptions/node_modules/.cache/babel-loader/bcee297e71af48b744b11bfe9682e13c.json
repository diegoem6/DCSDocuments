{"ast":null,"code":"import { ADD_SYSTEM, GET_SYSTEMS, UPDATE_SYSTEM, SELECT_SYSTEM, DELETE_SYSTEM, DESELECT_SYSTEM, SHOW_ERROR, RESET_MESSAGE } from '../../types/index';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_SYSTEM:\n      return { ...state,\n        systems: [...state.systems, action.payload],\n        message: null\n      };\n\n    case GET_SYSTEMS:\n      return { ...state,\n        systems: action.payload,\n        systemSelected: null,\n        message: null\n      };\n\n    case UPDATE_SYSTEM:\n      return { ...state,\n        systemSelected: null,\n        message: null\n      };\n\n    case SELECT_SYSTEM:\n      return { ...state,\n        systemSelected: action.payload,\n        message: null\n      };\n\n    case DESELECT_SYSTEM:\n      return { ...state,\n        systemSelected: null,\n        message: null\n      };\n\n    case DELETE_SYSTEM:\n      return { ...state,\n        systems: state.systems.filter(system => system._id !== action.payload._id),\n        message: null\n      };\n\n    case SHOW_ERROR:\n      return { ...state,\n        message: action.payload\n      };\n\n    case RESET_MESSAGE:\n      return { ...state,\n        message: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/system/systemReducer.js"],"names":["ADD_SYSTEM","GET_SYSTEMS","UPDATE_SYSTEM","SELECT_SYSTEM","DELETE_SYSTEM","DESELECT_SYSTEM","SHOW_ERROR","RESET_MESSAGE","state","action","type","systems","payload","message","systemSelected","filter","system","_id"],"mappings":"AAAA,SACIA,UADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,aALJ,EAMIC,eANJ,EAOIC,UAPJ,EAQIC,aARJ,QASO,mBATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,UAAL;AACI,aAAQ,EACJ,GAAGQ,KADC;AAEJG,QAAAA,OAAO,EAAE,CAAC,GAAGH,KAAK,CAACG,OAAV,EAAmBF,MAAM,CAACG,OAA1B,CAFL;AAGJC,QAAAA,OAAO,EAAC;AAHJ,OAAR;;AAKJ,SAAKZ,WAAL;AACI,aAAQ,EACJ,GAAGO,KADC;AAEJG,QAAAA,OAAO,EAAEF,MAAM,CAACG,OAFZ;AAGJE,QAAAA,cAAc,EAAC,IAHX;AAIJD,QAAAA,OAAO,EAAC;AAJJ,OAAR;;AAMJ,SAAKX,aAAL;AACI,aAAQ,EACJ,GAAGM,KADC;AAEJM,QAAAA,cAAc,EAAC,IAFX;AAGJD,QAAAA,OAAO,EAAC;AAHJ,OAAR;;AAKJ,SAAKV,aAAL;AACI,aAAQ,EACJ,GAAGK,KADC;AAEJM,QAAAA,cAAc,EAACL,MAAM,CAACG,OAFlB;AAGJC,QAAAA,OAAO,EAAC;AAHJ,OAAR;;AAKJ,SAAKR,eAAL;AACI,aAAQ,EACJ,GAAGG,KADC;AAEJM,QAAAA,cAAc,EAAC,IAFX;AAGJD,QAAAA,OAAO,EAAC;AAHJ,OAAR;;AAKJ,SAAKT,aAAL;AACI,aAAQ,EACJ,GAAGI,KADC;AAEJG,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcI,MAAd,CACLC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeR,MAAM,CAACG,OAAP,CAAeK,GADnC,CAFL;AAIJJ,QAAAA,OAAO,EAAC;AAJJ,OAAR;;AAMJ,SAAKP,UAAL;AACI,aAAQ,EACJ,GAAGE,KADC;AAEJK,QAAAA,OAAO,EAACJ,MAAM,CAACG;AAFX,OAAR;;AAIJ,SAAKL,aAAL;AACI,aAAQ,EACJ,GAAGC,KADC;AAEJK,QAAAA,OAAO,EAAC;AAFJ,OAAR;;AAIJ;AACI,aAAOL,KAAP;AAlDR;AAoDH,CArDD","sourcesContent":["import {\n    ADD_SYSTEM, \n    GET_SYSTEMS,\n    UPDATE_SYSTEM,\n    SELECT_SYSTEM,\n    DELETE_SYSTEM,\n    DESELECT_SYSTEM,\n    SHOW_ERROR,\n    RESET_MESSAGE\n} from '../../types/index'\n\nexport default (state, action) =>{\n    switch (action.type){\n        case ADD_SYSTEM:\n            return ({\n                ...state, \n                systems: [...state.systems, action.payload],\n                message:null\n            })\n        case GET_SYSTEMS:\n            return ({\n                ...state, \n                systems: action.payload,\n                systemSelected:null,\n                message:null\n            })\n        case UPDATE_SYSTEM:\n            return ({\n                ...state, \n                systemSelected:null,\n                message:null\n            })\n        case SELECT_SYSTEM:\n            return ({\n                ...state, \n                systemSelected:action.payload,\n                message:null\n            })\n        case DESELECT_SYSTEM:\n            return ({\n                ...state, \n                systemSelected:null,\n                message:null\n            })\n        case DELETE_SYSTEM:\n            return ({\n                ...state,\n                systems: state.systems.filter((\n                    system => system._id !== action.payload._id)),\n                message:null\n            })\n        case SHOW_ERROR:\n            return ({\n                ...state,\n                message:action.payload\n            })\n        case RESET_MESSAGE:\n            return ({\n                ...state,\n                message:null\n            })\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}