{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/tagDescriptorList.js\";\nimport React, { useEffect, useContext, Fragment } from 'react';\nimport systemContext from '../../context/system/systemContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TagDescriptor from './tagDescriptor';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport ReactPaginate from 'react-paginate';\n\nconst TagDescriptorList = () => {\n  const sContext = useContext(systemContext);\n  const {\n    systemSelected\n  } = sContext;\n  const tContext = useContext(tagDescriptorContext);\n  const {\n    searchtagdescriptors,\n    getTagsDescriptors\n  } = tContext;\n\n  const onSubmit = () => {};\n\n  const onChange = () => {};\n\n  const [pag, setPag] = useState({\n    offset: 0,\n    perPage: 10,\n    currentPage: 0,\n    pageCount: 0,\n    data: []\n  });\n  useEffect(() => {\n    const listTagsDescriptors = () => {\n      if (systemSelected) {\n        getTagsDescriptors(systemSelected._id);\n        setPag({ ...pag,\n          pageCount: Math.ceil(searchtagdescriptors.length / pag.perPage),\n          data: searchtagdescriptors\n        });\n      }\n    };\n\n    listTagsDescriptors();\n  }, [systemSelected]);\n\n  if (!systemSelected) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, \"Seleccione un sistema\");\n  }\n\n  if (!searchtagdescriptors) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, \"No hay documentos para el sistema seleccionado\");\n  }\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * pag.perPage;\n    setPag({ ...pag,\n      currentPage: selectedPage,\n      offset: offset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Tags descriptors del sistema: \", systemSelected.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, searchtagdescriptors.length === 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 44\n    }\n  }, \"No hay documentos para el sistema seleccionado\")) : pag.data.slice(pag.offset, pag.offset + pag.perPage).map(tgd => /*#__PURE__*/React.createElement(TagDescriptor, {\n    tagdescriptor: tgd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pag.pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageClick,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default TagDescriptorList;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/tagDescriptorList.js"],"names":["React","useEffect","useContext","Fragment","systemContext","CSSTransition","TransitionGroup","TagDescriptor","tagDescriptorContext","ReactPaginate","TagDescriptorList","sContext","systemSelected","tContext","searchtagdescriptors","getTagsDescriptors","onSubmit","onChange","pag","setPag","useState","offset","perPage","currentPage","pageCount","data","listTagsDescriptors","_id","Math","ceil","length","handlePageClick","e","selectedPage","selected","name","slice","map","tgd"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,QAAMC,QAAQ,GAAGT,UAAU,CAACE,aAAD,CAA3B;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAmBD,QAAzB;AAEA,QAAME,QAAQ,GAAGX,UAAU,CAACM,oBAAD,CAA3B;AACA,QAAM;AAACM,IAAAA,oBAAD;AAAuBC,IAAAA;AAAvB,MAA6CF,QAAnD;;AAEA,QAAMG,QAAQ,GAAG,MAAI,CAEpB,CAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAI,CAEpB,CAFD;;AAIA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBC,QAAQ,CACtB;AACIC,IAAAA,MAAM,EAAC,CADX;AAEIC,IAAAA,OAAO,EAAC,EAFZ;AAGIC,IAAAA,WAAW,EAAC,CAHhB;AAIIC,IAAAA,SAAS,EAAC,CAJd;AAKIC,IAAAA,IAAI,EAAC;AALT,GADsB,CAA9B;AAUAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,mBAAmB,GAAG,MAAI;AAC5B,UAAId,cAAJ,EAAmB;AACfG,QAAAA,kBAAkB,CAACH,cAAc,CAACe,GAAhB,CAAlB;AACAR,QAAAA,MAAM,CACF,EAAC,GAAGD,GAAJ;AACIM,UAAAA,SAAS,EAAEI,IAAI,CAACC,IAAL,CAAUf,oBAAoB,CAACgB,MAArB,GAA4BZ,GAAG,CAACI,OAA1C,CADf;AAEIG,UAAAA,IAAI,EAACX;AAFT,SADE,CAAN;AAKH;AACJ,KATD;;AAUAY,IAAAA,mBAAmB;AACtB,GAZQ,EAYN,CAACd,cAAD,CAZM,CAAT;;AAcA,MAAG,CAACA,cAAJ,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;;AAED,MAAI,CAACE,oBAAL,EAA0B;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAAP;AACH;;AAED,QAAMiB,eAAe,GAAIC,CAAD,IAAO;AAC3B,UAAMC,YAAY,GAAGD,CAAC,CAACE,QAAvB;AACA,UAAMb,MAAM,GAAGY,YAAY,GAAGf,GAAG,CAACI,OAAlC;AACAH,IAAAA,MAAM,CACF,EAAC,GAAGD,GAAJ;AACIK,MAAAA,WAAW,EAAEU,YADjB;AAEIZ,MAAAA,MAAM,EAACA;AAFX,KADE,CAAN;AAMH,GATD;;AAWA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAmCT,cAAc,CAACuB,IAAlD,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMrB,oBAAoB,CAACgB,MAArB,KAA8B,CAA/B,gBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAtB,CADJ,GAGGZ,GAAG,CAACO,IAAJ,CAASW,KAAT,CAAelB,GAAG,CAACG,MAAnB,EAA0BH,GAAG,CAACG,MAAJ,GAAWH,GAAG,CAACI,OAAzC,EAAkDe,GAAlD,CAAsDC,GAAG,iBACrD,oBAAC,aAAD;AACI,IAAA,aAAa,EAAEA,GADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJR,CAFJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AACI,IAAA,aAAa,EAAE,MADnB;AAEI,IAAA,SAAS,EAAE,MAFf;AAGI,IAAA,UAAU,EAAE,KAHhB;AAII,IAAA,cAAc,EAAE,UAJpB;AAKI,IAAA,SAAS,EAAEpB,GAAG,CAACM,SALnB;AAMI,IAAA,oBAAoB,EAAE,CAN1B;AAOI,IAAA,kBAAkB,EAAE,CAPxB;AAQI,IAAA,YAAY,EAAEO,eARlB;AASI,IAAA,kBAAkB,EAAE,YATxB;AAUI,IAAA,qBAAqB,EAAE,kBAV3B;AAWI,IAAA,eAAe,EAAE,QAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,CADJ;AA+BH,CAzFD;;AA2FA,eAAerB,iBAAf","sourcesContent":["import React, {useEffect, useContext, Fragment} from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TagDescriptor from './tagDescriptor'\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport ReactPaginate from 'react-paginate';\n\n\nconst TagDescriptorList = () => {\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n    \n    const tContext = useContext(tagDescriptorContext)\n    const {searchtagdescriptors, getTagsDescriptors} = tContext\n\n    const onSubmit = ()=>{\n\n    }\n    const onChange = ()=>{\n\n    }\n\n    const [pag, setPag] = useState(\n            {\n                offset:0,\n                perPage:10,\n                currentPage:0,\n                pageCount:0,\n                data:[]\n            })\n    \n\n    useEffect(() => {\n        const listTagsDescriptors = ()=>{\n            if (systemSelected){\n                getTagsDescriptors(systemSelected._id)\n                setPag(\n                    {...pag,\n                        pageCount: Math.ceil(searchtagdescriptors.length/pag.perPage),\n                        data:searchtagdescriptors\n                    })\n            }\n        }\n        listTagsDescriptors()\n    }, [systemSelected])\n\n    if(!systemSelected) {\n        return <h2>Seleccione un sistema</h2>\n    }\n    \n    if (!searchtagdescriptors){\n        return <p>No hay documentos para el sistema seleccionado</p>\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * pag.perPage;\n        setPag(\n            {...pag,\n                currentPage: selectedPage,\n                offset:offset\n            })\n\n    };\n\n    return ( \n        <Fragment>\n            <h2>Tags descriptors del sistema: {systemSelected.name}</h2>\n            <ul>\n                {(searchtagdescriptors.length===0)?\n                    (<li className=\"tarea\"><p>No hay documentos para el sistema seleccionado</p></li>)\n                :\n                    pag.data.slice(pag.offset,pag.offset+pag.perPage).map(tgd =>(\n                        <TagDescriptor\n                            tagdescriptor={tgd}\n                        />\n                    ))\n                \n                }\n            </ul>\n            <div>\n                <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pag.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n            </div>\n        </Fragment>\n     );\n}\n \nexport default TagDescriptorList;"]},"metadata":{},"sourceType":"module"}