{"ast":null,"code":"import { FORM_TAGDESCRIPTOR, GET_TAGDESCRIPTOR, CREATE_TAGDESCRIPTOR, SHOW_ERROR_TAGDESCRIPTOR, VALIDATE_TAGDESCRIPTOR, SELECT_TAGDESCRIPTOR, DELETE_TAGDESCRIPTOR } from '../../types/index';\nexport default ((state, action) => {\n  switch (action.type) {\n    case FORM_TAGDESCRIPTOR:\n      return { ...state,\n        form: true,\n        error: false\n      };\n\n    case GET_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptor: action.payload\n      };\n\n    case CREATE_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptors_temp: [...state.tagdescriptors_temp, action.payload],\n        form: false,\n        error: false\n      };\n\n    case VALIDATE_TAGDESCRIPTOR:\n      return { ...state,\n        error: true\n      };\n\n    case SELECT_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptor: state.tagdescriptors.filter(tagdescriptor => tagdescriptor._id === action.payload)\n      };\n\n    case DELETE_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptors: state.tagdescriptors.filter(tagdescriptor => tagdescriptor._id !== action.payload),\n        tagdescriptor: null\n      };\n\n    case SHOW_ERROR_TAGDESCRIPTOR:\n      return { ...state,\n        message: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/tagdescriptor/tagDescriptorReducer.js"],"names":["FORM_TAGDESCRIPTOR","GET_TAGDESCRIPTOR","CREATE_TAGDESCRIPTOR","SHOW_ERROR_TAGDESCRIPTOR","VALIDATE_TAGDESCRIPTOR","SELECT_TAGDESCRIPTOR","DELETE_TAGDESCRIPTOR","state","action","type","form","error","tagdescriptor","payload","tagdescriptors_temp","tagdescriptors","filter","_id","message"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,iBAFJ,EAGIC,oBAHJ,EAIIC,wBAJJ,EAKIC,sBALJ,EAMIC,oBANJ,EAOIC,oBAPJ,QAO+B,mBAP/B;AASA,gBAAe,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC3B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,kBAAL;AACI,aAAQ,EACJ,GAAGO,KADC;AAEJG,QAAAA,IAAI,EAAC,IAFD;AAGJC,QAAAA,KAAK,EAAC;AAHF,OAAR;;AAKJ,SAAKV,iBAAL;AACI,aAAQ,EACJ,GAAGM,KADC;AAEJK,QAAAA,aAAa,EAACJ,MAAM,CAACK;AAFjB,OAAR;;AAIJ,SAAKX,oBAAL;AACI,aAAQ,EACJ,GAAGK,KADC;AAEJO,QAAAA,mBAAmB,EAAC,CAAC,GAAGP,KAAK,CAACO,mBAAV,EAA+BN,MAAM,CAACK,OAAtC,CAFhB;AAGJH,QAAAA,IAAI,EAAC,KAHD;AAIJC,QAAAA,KAAK,EAAC;AAJF,OAAR;;AAMJ,SAAKP,sBAAL;AACI,aAAQ,EACJ,GAAGG,KADC;AAEJI,QAAAA,KAAK,EAAC;AAFF,OAAR;;AAIJ,SAAKN,oBAAL;AACI,aAAQ,EACJ,GAAGE,KADC;AAEJK,QAAAA,aAAa,EAAEL,KAAK,CAACQ,cAAN,CAAqBC,MAArB,CACXJ,aAAa,IAAIA,aAAa,CAACK,GAAd,KAAsBT,MAAM,CAACK,OADnC;AAFX,OAAR;;AAKJ,SAAKP,oBAAL;AACI,aAAQ,EACJ,GAAGC,KADC;AAEJQ,QAAAA,cAAc,EAAER,KAAK,CAACQ,cAAN,CAAqBC,MAArB,CACZJ,aAAa,IAAEA,aAAa,CAACK,GAAd,KAAsBT,MAAM,CAACK,OADhC,CAFZ;AAKJD,QAAAA,aAAa,EAAE;AALX,OAAR;;AAOJ,SAAKT,wBAAL;AACI,aAAQ,EACJ,GAAGI,KADC;AAEJW,QAAAA,OAAO,EAACV,MAAM,CAACK;AAFX,OAAR;;AAIJ;AACQ,aAAON,KAAP;AA5CZ;AA8CH,CA/CD","sourcesContent":["import {\n    FORM_TAGDESCRIPTOR, \n    GET_TAGDESCRIPTOR,\n    CREATE_TAGDESCRIPTOR,\n    SHOW_ERROR_TAGDESCRIPTOR,\n    VALIDATE_TAGDESCRIPTOR,\n    SELECT_TAGDESCRIPTOR,\n    DELETE_TAGDESCRIPTOR} from '../../types/index'\n\nexport default (state,action)=>{\n    switch(action.type){\n        case FORM_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:true,\n                error:false\n            })\n        case GET_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor:action.payload\n            })\n        case CREATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors_temp:[...state.tagdescriptors_temp, action.payload],\n                form:false,\n                error:false\n            })\n        case VALIDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                error:true\n            })\n        case SELECT_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor: state.tagdescriptors.filter(\n                    tagdescriptor => tagdescriptor._id === action.payload)\n            })\n        case DELETE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors: state.tagdescriptors.filter(\n                    tagdescriptor=>tagdescriptor._id !== action.payload\n                ),\n                tagdescriptor: null\n            })\n        case SHOW_ERROR_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                message:action.payload\n            })\n        default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}