{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/showTagDescriptor.js\";\nimport React, { useContext, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nconst ShowTagDescritor = () => {\n  const {\n    tagname\n  } = useParams(); //return <h3>Requested topic ID: {topicId}</h3>;\n\n  const tContext = useContext(tagDescriptorContext);\n  const {\n    getTagDescriptor,\n    tagdescriptor,\n    error,\n    message\n  } = tContext;\n  useEffect(() => {\n    getTagDescriptor(tagname); // eslint-disable-next-line\n  }, []);\n  if (!tagdescriptor) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 32\n    }\n  }, message);\n  const [currenttagdescriptor] = tagdescriptor;\n\n  const putHTML = description => {\n    return {\n      __html: description\n    };\n  };\n\n  console.log(currenttagdescriptor.description);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, !error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, currenttagdescriptor.tagname), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"showTagDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, ReactHtmlParser(currenttagdescriptor.description)), \";\") : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }\n  }, message));\n};\n\nexport default ShowTagDescritor;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/showTagDescriptor.js"],"names":["React","useContext","useEffect","Fragment","useParams","tagDescriptorContext","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","ShowTagDescritor","tagname","tContext","getTagDescriptor","tagdescriptor","error","message","currenttagdescriptor","putHTML","description","__html","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B,CAD2B,CAE7B;;AACE,QAAMQ,QAAQ,GAAGX,UAAU,CAACI,oBAAD,CAA3B;AACA,QAAM;AAACQ,IAAAA,gBAAD;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA,KAAlC;AAAyCC,IAAAA;AAAzC,MAAqDJ,QAA3D;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,gBAAgB,CAACF,OAAD,CAAhB,CADY,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAI,CAACG,aAAL,EAAoB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,OAAL,CAAP;AAEpB,QAAM,CAACC,oBAAD,IAAyBH,aAA/B;;AAEA,QAAMI,OAAO,GAAIC,WAAD,IAAe;AAC3B,WAAQ;AAACC,MAAAA,MAAM,EAAED;AAAT,KAAR;AACH,GAFD;;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,oBAAoB,CAACE,WAAjC;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACJ,KAAD,gBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,oBAAoB,CAACN,OAA1B,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BL,eAAe,CAACW,oBAAoB,CAACE,WAAtB,CAA7C,CAJJ,MAHA,gBAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,OAAL,CAhBT,CADJ;AAsBH,CA1CD;;AA4CA,eAAeN,gBAAf","sourcesContent":["import React, {useContext, useEffect, Fragment} from 'react';\nimport {useParams} from 'react-router-dom'\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nconst ShowTagDescritor = () => { \n    const { tagname } = useParams();\n  //return <h3>Requested topic ID: {topicId}</h3>;\n    const tContext = useContext(tagDescriptorContext)\n    const {getTagDescriptor, tagdescriptor, error, message } = tContext;\n\n    useEffect(() => {\n        getTagDescriptor(tagname)\n        // eslint-disable-next-line\n    }, [])\n\n    if (!tagdescriptor) return <h2>{message}</h2>;\n\n    const [currenttagdescriptor] = tagdescriptor\n\n    const putHTML = (description)=>{\n        return ({__html: description})\n    }\n\n    console.log(currenttagdescriptor.description)\n    return ( \n        <Fragment>\n            {\n                !error ?\n\n                (\n                <div>\n                    <h1>{currenttagdescriptor.tagname}</h1>\n                    {/* <div className=\"showTagDesc\" dangerouslySetInnerHTML={putHTML(currenttagdescriptor.description)} />;\n                    */}\n                    <div className=\"showTagDesc\">{ReactHtmlParser(currenttagdescriptor.description)}</div>;\n                \n\n                </div>\n                )\n                \n            :\n                (<h2>{message}</h2>)\n           }\n        </Fragment>\n\n     );\n}\n \nexport default ShowTagDescritor;"]},"metadata":{},"sourceType":"module"}