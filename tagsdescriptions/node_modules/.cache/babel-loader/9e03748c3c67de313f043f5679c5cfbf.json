{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/auth/authState.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axiosClient from '../../config/axios';\nimport tokenAuth from '../../config/token';\nimport { CREATE_USER_SUCCESS, CREATE_USER_ERROR, GET_USER, LOGIN_SUCCESS, LOGIN_ERROR, LOG_OFF, RESET_MESSAGE } from '../../types/index';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    authenticated: null,\n    user: null,\n    message: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const createUser = async user => {\n    try {\n      const res = await axiosClient.post('api/users', user);\n      dispatch({\n        type: CREATE_USER_SUCCESS,\n        payload: res.data\n      });\n      getUser();\n    } catch (error) {\n      console.log(error);\n      const alert = {\n        msg: error.response.data.msg,\n        category: 'alerta-error'\n      };\n      dispatch({\n        type: CREATE_USER_ERROR,\n        payload: alert\n      });\n    }\n  };\n\n  const getUser = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    try {\n      const res = await axiosClient.get('/api/auth');\n      dispatch({\n        type: GET_USER,\n        payload: res.data.user\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  };\n\n  const logOff = () => {\n    dispatch({\n      type: LOG_OFF\n    });\n  };\n\n  const loginUser = async user => {\n    try {\n      const res = await axiosClient.post('/api/auth', user);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      getUser();\n    } catch (error) {\n      const alert = {\n        msg: error.response.data.msg,\n        category: 'alerta-error'\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alert\n      });\n    }\n  };\n\n  const setMessage = show => {\n    if (!show) {\n      dispatch({\n        type: RESET_MESSAGE\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(authContext.Provider, {\n    value: {\n      token: state.token,\n      authenticated: state.authenticated,\n      user: state.user,\n      message: state.message,\n      loading: state.loading,\n      createUser,\n      loginUser,\n      getUser,\n      logOff\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/auth/authState.js"],"names":["React","useReducer","authContext","authReducer","axiosClient","tokenAuth","CREATE_USER_SUCCESS","CREATE_USER_ERROR","GET_USER","LOGIN_SUCCESS","LOGIN_ERROR","LOG_OFF","RESET_MESSAGE","AuthState","props","initialState","token","localStorage","getItem","authenticated","user","message","loading","state","dispatch","createUser","res","post","type","payload","data","getUser","error","console","log","alert","msg","response","category","get","logOff","loginUser","setMessage","show","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport authContext from './authContext'\nimport authReducer from './authReducer'\nimport axiosClient from '../../config/axios'\nimport tokenAuth from '../../config/token'\n\nimport {\n    CREATE_USER_SUCCESS,\n    CREATE_USER_ERROR,\n    GET_USER, \n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    LOG_OFF,\n    RESET_MESSAGE} from '../../types/index'\n\nconst AuthState = (props) => {\n    const initialState ={\n        token: localStorage.getItem('token'),\n        authenticated: null,\n        user: null,\n        message:null,\n        loading:true\n    }\n    const [state,dispatch] = useReducer(authReducer,initialState)\n\n    const createUser = async (user) =>{\n        try {\n            const res = await axiosClient.post('api/users', user)\n            dispatch({\n                type:CREATE_USER_SUCCESS,\n                payload:res.data\n            })\n\n            getUser()\n        } catch (error) {\n            console.log(error);\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:CREATE_USER_ERROR,\n                payload:alert\n            })\n            \n        }\n        \n        \n    }\n\n    const getUser = async ()=>{\n        const token = localStorage.getItem('token');\n        if (token){\n            tokenAuth(token);\n        }\n        try {\n            const res = await axiosClient.get('/api/auth')\n            dispatch({\n                type:GET_USER,\n                payload:res.data.user\n            })\n        } catch (error) {\n            dispatch({\n                type: LOGIN_ERROR\n            })\n            \n        }\n    }\n\n    const logOff = () =>{\n        dispatch({\n            type:LOG_OFF\n        })\n    }\n\n    const loginUser = async (user)=>{\n        try {\n            \n            const res = await axiosClient.post('/api/auth', user)\n            dispatch({\n                type:LOGIN_SUCCESS,\n                payload:res.data\n            })\n\n            getUser()\n            \n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type:LOGIN_ERROR,\n                payload:alert\n            })\n            \n        }\n    }\n    const setMessage = (show) =>{\n        if(!show){\n            dispatch({\n                type:RESET_MESSAGE\n            })\n        }\n    }\n\n    return (\n        <authContext.Provider \n        value={{\n            token:state.token,\n            authenticated:state.authenticated,\n            user:state.user,\n            message:state.message,\n            loading:state.loading,\n            createUser,\n            loginUser,\n            getUser,\n            logOff\n        }}>\n            {props.children}\n        </authContext.Provider>\n    )\n\n}\nexport default AuthState;\n\n"]},"metadata":{},"sourceType":"module"}