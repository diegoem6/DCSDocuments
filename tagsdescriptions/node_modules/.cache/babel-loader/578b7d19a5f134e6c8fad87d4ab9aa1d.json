{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport { Editor } from '@tinymce/tinymce-react';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nconst NewTagDescriptor = () => {\n  const tdContext = useContext(tagDescriptorContext);\n  const {\n    error,\n    createTagDescriptor,\n    showError\n  } = tdContext;\n  const sContext = useContext(systemContext);\n  const {\n    systemSelected\n  } = sContext;\n  const [tagDescriptor, settagDescriptor] = useState({\n    tagname: '',\n    description: ''\n  });\n  const {\n    tagname,\n    description\n  } = tagDescriptor;\n\n  const onChangeTagDescriptor = e => {\n    console.log(e.target);\n    settagDescriptor({ ...tagDescriptor,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onChangeRichText = value => {\n    settagDescriptor({ ...tagDescriptor,\n      description: value\n    });\n  };\n\n  const onSubmitTagDescriptor = e => {\n    e.preventDefault(); //hacer validaciones y reseteo de form\n\n    if (tagname.trim() === '' || description.trim() === '') {\n      //alert(description.trim())\n      //alert(tagname.trim())\n      showError();\n      return;\n    } // llamo a agregar proyecto\n\n\n    createTagDescriptor(tagDescriptor);\n    settagDescriptor(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Nuevo tags descriptor en el sistema: \", systemSelected.name), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Tag name\",\n    name: \"tagname\",\n    value: tagname,\n    onChange: onChangeTagDescriptor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(SunEditor, {\n    placeholder: \"descripci\\xF3n del tag\",\n    name: \"description\",\n    setOptions: {\n      height: 300\n    },\n    value: description,\n    onChange: onChangeRichText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"El nombre del formulario no puede estar vac\\xEDo\") : null);\n};\n\nexport default NewTagDescriptor;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/newTagDescriptor.js"],"names":["React","Fragment","useState","useContext","tagDescriptorContext","Editor","SunEditor","NewTagDescriptor","tdContext","error","createTagDescriptor","showError","sContext","systemContext","systemSelected","tagDescriptor","settagDescriptor","tagname","description","onChangeTagDescriptor","e","console","log","target","name","value","onChangeRichText","onSubmitTagDescriptor","preventDefault","trim","height"],"mappings":"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","sourcesContent":["import React,{Fragment, useState, useContext} from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext' \nimport { Editor } from '@tinymce/tinymce-react';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nconst NewTagDescriptor = () => {\n    \n    const tdContext = useContext(tagDescriptorContext)\n    const {error, createTagDescriptor, showError} = tdContext\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n\n    const [tagDescriptor, settagDescriptor] = useState({\n        tagname:'',\n        description:''\n    })\n    const {tagname,description} = tagDescriptor\n\n\n    const onChangeTagDescriptor = (e)=>{\n        console.log(e.target);\n        settagDescriptor({\n            ...tagDescriptor, \n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onChangeRichText = (value)=>{\n        settagDescriptor({...tagDescriptor,\n            description:value})\n    }\n\n    const onSubmitTagDescriptor = (e)=>{\n        e.preventDefault();\n\n        //hacer validaciones y reseteo de form\n        if (tagname.trim() === '' || description.trim()===''){\n            //alert(description.trim())\n            //alert(tagname.trim())\n            showError()\n            return;\n        }\n\n        // llamo a agregar proyecto\n        \n        createTagDescriptor(tagDescriptor)\n        settagDescriptor(\"\")\n        \n    }\n    return ( \n        <Fragment>\n                <h2>Nuevo tags descriptor en el sistema: {systemSelected.name}</h2>\n                    <form   \n                        className=\"formulario-nuevo-proyecto\"\n                        onSubmit = {onSubmitTagDescriptor}\n                        >\n                        <input  \n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Tag name\"\n                            name=\"tagname\"\n                            value ={tagname}\n                            onChange = {onChangeTagDescriptor}\n                        />\n                        \n                        <SunEditor \n                            placeholder=\"descripción del tag\"\n                            name=\"description\"\n                            setOptions={{\n                                height: 300}}\n                            value ={description}\n                            onChange = {onChangeRichText}\n                        />\n\n                        <input \n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value = \"Agregar Tag\"\n                        />    \n                    </form>\n                {error? <p className=\"mensaje error\">El nombre del formulario no puede estar vacío</p> : null}\n        </Fragment>\n     );\n}\n \nexport default NewTagDescriptor;"]},"metadata":{},"sourceType":"module"}