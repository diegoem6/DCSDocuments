{"ast":null,"code":"import { FORM_TAGDESCRIPTOR, GET_TAGDESCRIPTOR, GET_TAGSDESCRIPTORS, CREATE_TAGDESCRIPTOR, SHOW_ERROR_TAGDESCRIPTOR, VALIDATE_TAGDESCRIPTOR, SELECT_TAGDESCRIPTOR, DESELECT_TAGDESCRIPTOR, DELETE_TAGDESCRIPTOR, UPDATE_TAGDESCRIPTOR, SEARCH_TAGSDESCRIPTORS } from '../../types/index';\nexport default ((state, action) => {\n  switch (action.type) {\n    case FORM_TAGDESCRIPTOR:\n      return { ...state,\n        form: !state.form,\n        error: false\n      };\n\n    case GET_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptor: action.payload,\n        error: false\n      };\n\n    case GET_TAGSDESCRIPTORS:\n      return { ...state,\n        searchtagdescriptors: action.payload,\n        tagdescriptors: action.payload,\n        error: false\n      };\n\n    case CREATE_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptors: [...state.tagdescriptors, action.payload],\n        form: false,\n        error: false,\n        error: false\n      };\n\n    case VALIDATE_TAGDESCRIPTOR:\n      return { ...state,\n        error: !state.error\n      };\n\n    case SELECT_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptor: state.tagdescriptors.filter(tagdescriptor => tagdescriptor._id === action.payload),\n        error: false\n      };\n\n    case DELETE_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptors: state.tagdescriptors.filter(tagdescriptor => tagdescriptor._id !== action.payload),\n        tagdescriptor: null,\n        error: false\n      };\n\n    case SHOW_ERROR_TAGDESCRIPTOR:\n      return { ...state,\n        message: action.payload,\n        error: true\n      };\n\n    case DESELECT_TAGDESCRIPTOR:\n      return { ...state,\n        form: false,\n        tagdescriptor: null,\n        error: false\n      };\n\n    case UPDATE_TAGDESCRIPTOR:\n      return { ...state,\n        form: false,\n        tagdescriptor: null,\n        error: false\n      };\n\n    case SEARCH_TAGSDESCRIPTORS:\n      return { ...state,\n        searchtagdescriptors: state.tagdescriptors.filter(tagdescriptor => tagdescriptor.tagname.indexOf(action.payload) > -1),\n        tagdescriptor: null,\n        form: false,\n        error: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/tagdescriptor/tagDescriptorReducer.js"],"names":["FORM_TAGDESCRIPTOR","GET_TAGDESCRIPTOR","GET_TAGSDESCRIPTORS","CREATE_TAGDESCRIPTOR","SHOW_ERROR_TAGDESCRIPTOR","VALIDATE_TAGDESCRIPTOR","SELECT_TAGDESCRIPTOR","DESELECT_TAGDESCRIPTOR","DELETE_TAGDESCRIPTOR","UPDATE_TAGDESCRIPTOR","SEARCH_TAGSDESCRIPTORS","state","action","type","form","error","tagdescriptor","payload","searchtagdescriptors","tagdescriptors","filter","_id","message","tagname","indexOf"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,oBAJJ,EAKIC,wBALJ,EAMIC,sBANJ,EAOIC,oBAPJ,EAQIC,sBARJ,EASIC,oBATJ,EAUIC,oBAVJ,EAWIC,sBAXJ,QAWiC,mBAXjC;AAaA,gBAAe,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC3B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,kBAAL;AACI,aAAQ,EACJ,GAAGW,KADC;AAEJG,QAAAA,IAAI,EAAC,CAACH,KAAK,CAACG,IAFR;AAGJC,QAAAA,KAAK,EAAC;AAHF,OAAR;;AAKJ,SAAKd,iBAAL;AACI,aAAQ,EACJ,GAAGU,KADC;AAEJK,QAAAA,aAAa,EAACJ,MAAM,CAACK,OAFjB;AAGJF,QAAAA,KAAK,EAAC;AAHF,OAAR;;AAKJ,SAAKb,mBAAL;AACI,aAAQ,EACJ,GAAGS,KADC;AAEJO,QAAAA,oBAAoB,EAAEN,MAAM,CAACK,OAFzB;AAGJE,QAAAA,cAAc,EAACP,MAAM,CAACK,OAHlB;AAIJF,QAAAA,KAAK,EAAC;AAJF,OAAR;;AAOJ,SAAKZ,oBAAL;AACI,aAAQ,EACJ,GAAGQ,KADC;AAEJQ,QAAAA,cAAc,EAAC,CAAC,GAAGR,KAAK,CAACQ,cAAV,EAA0BP,MAAM,CAACK,OAAjC,CAFX;AAGJH,QAAAA,IAAI,EAAC,KAHD;AAIJC,QAAAA,KAAK,EAAC,KAJF;AAKJA,QAAAA,KAAK,EAAC;AALF,OAAR;;AAOJ,SAAKV,sBAAL;AACI,aAAQ,EACJ,GAAGM,KADC;AAEJI,QAAAA,KAAK,EAAC,CAACJ,KAAK,CAACI;AAFT,OAAR;;AAIJ,SAAKT,oBAAL;AACI,aAAQ,EACJ,GAAGK,KADC;AAEJK,QAAAA,aAAa,EAAEL,KAAK,CAACQ,cAAN,CAAqBC,MAArB,CACXJ,aAAa,IAAIA,aAAa,CAACK,GAAd,KAAsBT,MAAM,CAACK,OADnC,CAFX;AAIJF,QAAAA,KAAK,EAAC;AAJF,OAAR;;AAMJ,SAAKP,oBAAL;AACI,aAAQ,EACJ,GAAGG,KADC;AAEJQ,QAAAA,cAAc,EAAER,KAAK,CAACQ,cAAN,CAAqBC,MAArB,CACZJ,aAAa,IAAEA,aAAa,CAACK,GAAd,KAAsBT,MAAM,CAACK,OADhC,CAFZ;AAKJD,QAAAA,aAAa,EAAE,IALX;AAMJD,QAAAA,KAAK,EAAC;AANF,OAAR;;AAQJ,SAAKX,wBAAL;AACI,aAAQ,EACJ,GAAGO,KADC;AAEJW,QAAAA,OAAO,EAACV,MAAM,CAACK,OAFX;AAGJF,QAAAA,KAAK,EAAC;AAHF,OAAR;;AAKJ,SAAKR,sBAAL;AACI,aAAQ,EACJ,GAAGI,KADC;AAEJG,QAAAA,IAAI,EAAC,KAFD;AAGJE,QAAAA,aAAa,EAAC,IAHV;AAIJD,QAAAA,KAAK,EAAC;AAJF,OAAR;;AAMJ,SAAKN,oBAAL;AACI,aAAQ,EACJ,GAAGE,KADC;AAEJG,QAAAA,IAAI,EAAC,KAFD;AAGJE,QAAAA,aAAa,EAAC,IAHV;AAIJD,QAAAA,KAAK,EAAC;AAJF,OAAR;;AAMJ,SAAKL,sBAAL;AACI,aAAQ,EACJ,GAAGC,KADC;AAEJO,QAAAA,oBAAoB,EAAEP,KAAK,CAACQ,cAAN,CAAqBC,MAArB,CAClBJ,aAAa,IAAGA,aAAa,CAACO,OAAd,CAAsBC,OAAtB,CAA8BZ,MAAM,CAACK,OAArC,IAAgD,CAAC,CAD/C,CAFlB;AAKJD,QAAAA,aAAa,EAAE,IALX;AAMJF,QAAAA,IAAI,EAAC,KAND;AAOJC,QAAAA,KAAK,EAAC;AAPF,OAAR;;AAUJ;AACQ,aAAOJ,KAAP;AAlFZ;AAoFH,CArFD","sourcesContent":["import {\n    FORM_TAGDESCRIPTOR, \n    GET_TAGDESCRIPTOR,\n    GET_TAGSDESCRIPTORS,\n    CREATE_TAGDESCRIPTOR,\n    SHOW_ERROR_TAGDESCRIPTOR,\n    VALIDATE_TAGDESCRIPTOR,\n    SELECT_TAGDESCRIPTOR,\n    DESELECT_TAGDESCRIPTOR,\n    DELETE_TAGDESCRIPTOR,\n    UPDATE_TAGDESCRIPTOR,\n    SEARCH_TAGSDESCRIPTORS} from '../../types/index'\n\nexport default (state,action)=>{\n    switch(action.type){\n        case FORM_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:!state.form,\n                error:false\n            })\n        case GET_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor:action.payload,\n                error:false\n            })\n        case GET_TAGSDESCRIPTORS:\n            return ({\n                ...state,\n                searchtagdescriptors: action.payload,\n                tagdescriptors:action.payload,\n                error:false\n\n            })\n        case CREATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors:[...state.tagdescriptors, action.payload],\n                form:false,\n                error:false,\n                error:false\n            })\n        case VALIDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                error:!state.error\n            })\n        case SELECT_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor: state.tagdescriptors.filter(\n                    tagdescriptor => tagdescriptor._id === action.payload),\n                error:false\n            })\n        case DELETE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors: state.tagdescriptors.filter(\n                    tagdescriptor=>tagdescriptor._id !== action.payload\n                ),\n                tagdescriptor: null,\n                error:false\n            })\n        case SHOW_ERROR_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                message:action.payload,\n                error:true\n            })\n        case DESELECT_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:false,\n                tagdescriptor:null,\n                error:false\n            })\n        case UPDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:false,\n                tagdescriptor:null,\n                error:false\n            })\n        case SEARCH_TAGSDESCRIPTORS:\n            return ({\n                ...state,\n                searchtagdescriptors: state.tagdescriptors.filter(\n                    tagdescriptor=> tagdescriptor.tagname.indexOf(action.payload) > -1\n                ),\n                tagdescriptor: null,\n                form:false,\n                error:false\n            })\n\n        default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}