{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/layout/sidebarDescriptors.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport assetContext from '../context/asset/assetContext';\nimport TreeMenu from 'react-simple-tree-menu';\nimport tagDescriptorContext from '../context/tagdescriptor/tagDescriptorContext';\n\nconst SidebarDescriptors = () => {\n  const aContext = useContext(assetContext);\n  const {\n    assetsTree,\n    getAssetTree\n  } = aContext;\n  const tContext = useContext(tagDescriptorContext);\n  const {\n    selectTagDescriptor\n  } = tContext;\n  let tree_assets = [{}];\n  useEffect(() => {\n    const initAssetTree = () => {\n      getAssetTree();\n    };\n\n    initAssetTree();\n  }, []);\n  console.log(assetsTree);\n\n  const onClickAssets = ({\n    key\n  }, {\n    level\n  }) => {\n    console.log(level);\n  };\n\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Estructura\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }, \"MdP\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"proyectos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Assets\"), /*#__PURE__*/React.createElement(TreeMenu, {\n    data: assetsTree,\n    debounceTime: 125,\n    disableKeyboard: false,\n    hasSearch: false,\n    onClickItem: ({\n      key,\n      level\n    }) => {\n      if (level === 1) {\n        selectTagDescriptor();\n      }\n    },\n    resetOpenNodesOnDataUpdate: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link-menu-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: '/menu',\n    className: \"link-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"< Menu\")));\n};\n\nexport default SidebarDescriptors;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/layout/sidebarDescriptors.js"],"names":["React","useContext","useEffect","Link","assetContext","TreeMenu","tagDescriptorContext","SidebarDescriptors","aContext","assetsTree","getAssetTree","tContext","selectTagDescriptor","tree_assets","initAssetTree","console","log","onClickAssets","key","level"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,oBAAP,MAAiC,+CAAjC;;AAIA,MAAMC,kBAAkB,GAAG,MAAM;AAG7B,QAAMC,QAAQ,GAAGP,UAAU,CAACG,YAAD,CAA3B;AACA,QAAM;AAACK,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA6BF,QAAnC;AAEA,QAAMG,QAAQ,GAAGV,UAAU,CAACK,oBAAD,CAA3B;AACA,QAAM;AAACM,IAAAA;AAAD,MAAwBD,QAA9B;AAEA,MAAIE,WAAW,GAAG,CAAC,EAAD,CAAlB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,aAAa,GAAG,MAAK;AACvBJ,MAAAA,YAAY;AAEf,KAHD;;AAIAI,IAAAA,aAAa;AAGhB,GARQ,EAQN,EARM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AAEA,QAAMQ,aAAa,GAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAkB;AACnCJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,GAFD;;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAd,CADJ,eAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEV,UADV;AAEI,IAAA,YAAY,EAAE,GAFlB;AAGI,IAAA,eAAe,EAAE,KAHrB;AAII,IAAA,SAAS,EAAE,KAJf;AAKI,IAAA,WAAW,EAAE,CAAC;AAACS,MAAAA,GAAD;AAAKC,MAAAA;AAAL,KAAD,KAAe;AACxB,UAAIA,KAAK,KAAG,CAAZ,EAAc;AACVP,QAAAA,mBAAmB;AACtB;AACJ,KATL;AAUI,IAAA,0BAA0B,EAAE,KAVhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAHJ,eAmBI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAE,OADR;AAEI,IAAA,SAAS,EAAC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAnBJ,CADJ;AA+BH,CAzDD;;AA2DA,eAAeL,kBAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport { Link } from 'react-router-dom'\nimport assetContext from '../context/asset/assetContext'\nimport TreeMenu from 'react-simple-tree-menu'\nimport tagDescriptorContext from '../context/tagdescriptor/tagDescriptorContext';\n\n\n\nconst SidebarDescriptors = () => {\n    \n\n    const aContext = useContext(assetContext)\n    const {assetsTree, getAssetTree} = aContext\n\n    const tContext = useContext(tagDescriptorContext)\n    const {selectTagDescriptor} = tContext\n\n    let tree_assets = [{}]\n\n    useEffect(() => {\n        const initAssetTree = () =>{\n            getAssetTree();\n            \n        }\n        initAssetTree()\n        \n        \n    }, [])\n\n    console.log(assetsTree);\n\n    const onClickAssets =({key}, {level})=>{\n        console.log(level)\n    }\n    return ( \n        <aside>\n            <h1>Estructura<span>MdP</span></h1>\n           \n            <div className=\"proyectos\">\n                \n                <h2>Assets</h2>  \n                <TreeMenu \n                    data={assetsTree} \n                    debounceTime={125}\n                    disableKeyboard={false}\n                    hasSearch={false}\n                    onClickItem={({key,level})=>{\n                        if (level===1){\n                            selectTagDescriptor()\n                        }\n                    }}\n                    resetOpenNodesOnDataUpdate={false}    \n                /> \n            </div>  \n            <div className=\"link-menu-div\">\n                <Link \n                    to={'/menu'}\n                    className=\"link-menu\">\n                &#60;\n                    Menu\n                </Link>\n            </div>\n        </aside>\n\n     );\n}\n \nexport default SidebarDescriptors;"]},"metadata":{},"sourceType":"module"}