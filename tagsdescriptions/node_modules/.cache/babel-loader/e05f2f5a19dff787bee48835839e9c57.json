{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/searchTagDescriptor.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\nimport systemContext from '../../context/system/systemContext';\nimport * as docx from \"docx\";\n\nconst SearchTagDescriptor = () => {\n  const tdContext = useContext(tagDescriptorContext);\n  const {\n    showForm,\n    searchTagsDescriptors,\n    createDocument\n  } = tdContext;\n  const sContext = useContext(systemContext);\n  const {\n    systemSelected\n  } = sContext;\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    setSearch(''); // eslint-disable-next-line\n  }, [systemSelected]);\n  if (!systemSelected) return null;\n\n  const onClickNewTagDescription = () => {\n    showForm();\n  };\n\n  const onClickCreateDocument = () => {\n    const doc = new docx.Document();\n    doc.addSection({\n      properties: {},\n      children: [new docx.Paragraph({\n        children: [new docx.TextRun(\"Hello World\"), new docx.TextRun({\n          text: \"Foo Bar\",\n          bold: true\n        }), new docx.TextRun({\n          text: \"\\tGithub is the best\",\n          bold: true\n        })]\n      })]\n    });\n    docx.Packer.toBlob(doc).then(blob => {\n      console.log(blob);\n      saveAs(blob, \"example.docx\");\n      console.log(\"Document created successfully\");\n    });\n  };\n\n  const onChange = e => {\n    setSearch(e.target.value);\n    searchTagsDescriptors(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"buscar tag descriptor\",\n    name: \"search\",\n    value: search,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secundario btn-submit btn-block\",\n    onClick: onClickNewTagDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Nuevo tag descriptor\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secundario btn-submit btn-block\",\n    onClick: onClickCreateDocument,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Generar documento\")));\n};\n\nexport default SearchTagDescriptor;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/searchTagDescriptor.js"],"names":["React","useContext","useState","useEffect","tagDescriptorContext","systemContext","docx","SearchTagDescriptor","tdContext","showForm","searchTagsDescriptors","createDocument","sContext","systemSelected","search","setSearch","onClickNewTagDescription","onClickCreateDocument","doc","Document","addSection","properties","children","Paragraph","TextRun","text","bold","Packer","toBlob","then","blob","console","log","saveAs","onChange","e","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext' \nimport systemContext from '../../context/system/systemContext';\nimport * as docx from \"docx\";\n\nconst SearchTagDescriptor = () => {\n    \n    const tdContext = useContext(tagDescriptorContext)\n    const {showForm, searchTagsDescriptors, createDocument} = tdContext\n\n    const sContext = useContext(systemContext)\n    const {systemSelected} = sContext\n\n    \n    const [search, setSearch ] = useState('')\n\n    useEffect(() => {\n        setSearch('')\n        // eslint-disable-next-line\n    }, [systemSelected])\n\n    if (!systemSelected) return null\n\n   \n\n    const onClickNewTagDescription = ()=>{\n        showForm()\n    }\n    const onClickCreateDocument = ()=>{\n       \n            const doc = new docx.Document();\n            \n            doc.addSection({\n                properties: {},\n                children: [\n                    new docx.Paragraph({\n                        children: [\n                            new docx.TextRun(\"Hello World\"),\n                            new docx.TextRun({\n                                text: \"Foo Bar\",\n                                bold: true,\n                            }),\n                            new docx.TextRun({\n                                text: \"\\tGithub is the best\",\n                                bold: true,\n                            }),\n                        ],\n                    }),\n                ],\n            });\n\n            docx.Packer.toBlob(doc).then(blob => {\n                console.log(blob);\n                saveAs(blob, \"example.docx\");\n                console.log(\"Document created successfully\");\n            });\n        \n    }\n    \n    const onChange = (e)=>{\n        setSearch(e.target.value)\n        searchTagsDescriptors(e.target.value)\n    }\n    return (  \n        <div className=\"formulario\">\n            <div \n                className=\"contenedor-input\">\n                <input \n                    type=\"text\"\n                    className=\"input-text\"\n                    placeholder=\"buscar tag descriptor\"\n                    name=\"search\"\n                    value={search}\n                    onChange = {onChange}\n                />\n            </div>\n            <div \n                className=\"contenedor-input\"\n            >\n                <button\n                        type=\"button\"\n                        className=\"btn btn-secundario btn-submit btn-block\"\n                        onClick = {onClickNewTagDescription}\n                    >Nuevo tag descriptor</button>\n            </div>\n            <div \n                className=\"contenedor-input\"\n            >\n                <button\n                        type=\"button\"\n                        className=\"btn btn-secundario btn-submit btn-block\"\n                        onClick = {onClickCreateDocument}\n                    >Generar documento</button>\n            </div>\n       </div>\n    );\n}\n \nexport default SearchTagDescriptor;"]},"metadata":{},"sourceType":"module"}