{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/assets/assetFrom.js\";\nimport React, { useContext, useState, Fragment } from 'react';\nimport assetContext from '../../context/asset/assetContext.js';\nimport alertContext from '../../context/alerts/alertContext.js';\n\nconst AssetForm = () => {\n  const aContext = useContext(assetContext);\n  const {\n    form,\n    showForm,\n    message,\n    addAsset,\n    resetMessage\n  } = aContext;\n  const alContext = useContext(alertContext);\n  const {\n    alert,\n    showAlert\n  } = alContext;\n  const [asset, setAsset] = useState({\n    name: ''\n  });\n  const {\n    name\n  } = asset;\n  useEffect(() => {\n    if (message) {\n      showAlert(message.msg, message.category);\n      resetMessage();\n    }\n  }, [message]);\n\n  const onChangeAsset = e => {\n    setAsset({ ...asset,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitAsset = e => {\n    e.preventDefault(); //hacer validaciones y reseteo de form\n\n    if (!name) {\n      showAlert(\"El nombre del asset no debe estar vacío\", \"alerta-error\");\n      return;\n    } // llamo a agregar proyecto\n\n\n    addAsset(asset);\n    setAsset(\"\");\n  };\n\n  const onClikcAddAsset = e => {\n    showForm();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, alert ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `alerta ${alert.category}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  }, alert.msg, \" \") : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: onClikcAddAsset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Nuevo Asset\"), form ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-new-system\",\n    onSubmit: onSubmitAsset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre del asset\",\n    name: \"name\",\n    value: name,\n    onChange: onChangeAsset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar asset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })) : null);\n};\n\nexport default AssetForm;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/assets/assetFrom.js"],"names":["React","useContext","useState","Fragment","assetContext","alertContext","AssetForm","aContext","form","showForm","message","addAsset","resetMessage","alContext","alert","showAlert","asset","setAsset","name","useEffect","msg","category","onChangeAsset","e","target","value","onSubmitAsset","preventDefault","onClikcAddAsset"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,QAArC,QAAoD,OAApD;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAMC,QAAQ,GAAGN,UAAU,CAACG,YAAD,CAA3B;AAEA,QAAM;AAACI,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA;AAApC,MAAoDL,QAA1D;AAEA,QAAMM,SAAS,GAAGZ,UAAU,CAACI,YAAD,CAA5B;AACA,QAAM;AAACS,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAqBF,SAA3B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AAC/BgB,IAAAA,IAAI,EAAC;AAD0B,GAAD,CAAlC;AAGA,QAAM;AAACA,IAAAA;AAAD,MAASF,KAAf;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGT,OAAH,EAAW;AACPK,MAAAA,SAAS,CAACL,OAAO,CAACU,GAAT,EAAcV,OAAO,CAACW,QAAtB,CAAT;AACAT,MAAAA,YAAY;AACf;AACJ,GALQ,EAKN,CAACF,OAAD,CALM,CAAT;;AAOA,QAAMY,aAAa,GAAIC,CAAD,IAAK;AACvBN,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACO,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAFrB,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMC,aAAa,GAAGH,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACI,cAAF,GADsB,CAGtB;;AACA,QAAI,CAACT,IAAL,EAAU;AACNH,MAAAA,SAAS,CAAC,yCAAD,EAA4C,cAA5C,CAAT;AACA;AACH,KAPqB,CAStB;;;AACAJ,IAAAA,QAAQ,CAACK,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GAbD;;AAeA,QAAMW,eAAe,GAAIL,CAAD,IAAK;AACzBd,IAAAA,QAAQ;AACX,GAFD;;AAGA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,KAAK,gBAAG;AAAK,IAAA,SAAS,EAAG,UAASA,KAAK,CAACO,QAAS,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CP,KAAK,CAACM,GAAnD,MAAH,GACG,IAFb,eAGI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,OAAO,EAAIQ,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EASKpB,IAAI,gBAEG;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,QAAQ,EAAIkB,aAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,kBAHhB;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,KAAK,EAAGR,IALZ;AAMI,IAAA,QAAQ,EAAII,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAYI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,KAAK,EAAG,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAFH,GAqBA,IA9BT,CADJ;AAoCH,CAlFD;;AAoFA,eAAehB,SAAf","sourcesContent":["import React, {useContext, useState, Fragment} from 'react';\nimport assetContext from '../../context/asset/assetContext.js'\nimport alertContext from '../../context/alerts/alertContext.js'\n\nconst AssetForm = () => {\n    \n    const aContext = useContext(assetContext)\n    \n    const {form, showForm, message, addAsset, resetMessage} = aContext\n\n    const alContext = useContext(alertContext)\n    const {alert, showAlert} = alContext\n\n    const [asset, setAsset] = useState({\n        name:''\n    })\n    const {name} = asset\n\n    useEffect(() => {\n        if(message){\n            showAlert(message.msg, message.category)\n            resetMessage();\n        }\n    }, [message])\n    \n    const onChangeAsset = (e)=>{\n        setAsset({\n            ...asset, \n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitAsset= (e)=>{\n        e.preventDefault();\n\n        //hacer validaciones y reseteo de form\n        if (!name){\n            showAlert(\"El nombre del asset no debe estar vacío\", \"alerta-error\")\n            return;\n        }\n\n        // llamo a agregar proyecto\n        addAsset(asset)\n        setAsset(\"\")\n        \n    }\n\n    const onClikcAddAsset = (e)=>{\n        showForm();\n    }\n    return ( \n        <Fragment>\n            {alert? (<div className={`alerta ${alert.category}`}>{alert.msg} </div>)\n                    :null}\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick = {onClikcAddAsset}\n            >Nuevo Asset</button>\n\n            {form ?\n                (\n                    <form   \n                        className=\"form-new-system\"\n                        onSubmit = {onSubmitAsset}\n                        >\n                        <input  \n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Nombre del asset\"\n                            name=\"name\"\n                            value ={name}\n                            onChange = {onChangeAsset}\n                        />\n                        <input \n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value = \"Agregar asset\"\n                        />    \n                    </form>\n                ):\n                (null)\n                }\n                \n        </Fragment>\n     );\n}\n \nexport default AssetForm;"]},"metadata":{},"sourceType":"module"}