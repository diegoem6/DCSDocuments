{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/system/systemState.js\";\nimport React, { useReducer } from 'react';\nimport systemContext from './systemContext';\nimport systemReducer from './systemReducer';\nimport { ADD_SYSTEM, GET_SYSTEMS, UPDATE_SYSTEM, SELECT_SYSTEM, DELETE_SYSTEM } from '../../types/index';\nimport axiosClient from '../../config/axios';\n\nconst SystemState = props => {\n  const initialState = {\n    systems: [],\n    systemSelected: null,\n    active: false\n  };\n  const [state, dispatch] = useReducer(systemReducer, initialState);\n\n  const addSystem = async system => {\n    try {\n      const res = await axiosClient.post('/api/systems', system);\n      dispatch({\n        type: ADD_SYSTEM,\n        payload: res.data\n      });\n    } catch (error) {}\n  };\n\n  const getSystems = async asset => {\n    try {\n      const res = await axiosClient.get('/api/systems', {\n        params: {\n          asset\n        }\n      }); //console.log(res)\n\n      dispatch({\n        type: GET_SYSTEMS,\n        payload: res.data.systems\n      });\n    } catch (error) {}\n  };\n\n  const updateSystem = async system => {\n    try {\n      const id = system._id;\n      const res = await axiosClient.put(`/api/systems/${id}`, system);\n      dispatch({\n        type: UPDATE_SYSTEM\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteSystem = async system => {\n    try {\n      const id = system._id;\n      const idAsset = system.asset;\n      const res = await axiosClient.delete(`/api/systems/${id}`, {\n        params: {\n          idAsset\n        }\n      });\n      dispatch({\n        type: DELETE_SYSTEM,\n        payload: system\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const selectSystem = system => {\n    dispatch({\n      type: SELECT_SYSTEM,\n      payload: system\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(systemContext.Provider, {\n    value: {\n      systems: state.systems,\n      systemSelected: state.systemSelected,\n      active: state.active,\n      getSystems,\n      updateSystem,\n      addSystem,\n      selectSystem,\n      deleteSystem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default SystemState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/system/systemState.js"],"names":["React","useReducer","systemContext","systemReducer","ADD_SYSTEM","GET_SYSTEMS","UPDATE_SYSTEM","SELECT_SYSTEM","DELETE_SYSTEM","axiosClient","SystemState","props","initialState","systems","systemSelected","active","state","dispatch","addSystem","system","res","post","type","payload","data","error","getSystems","asset","get","params","updateSystem","id","_id","put","console","log","deleteSystem","idAsset","delete","selectSystem","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport systemContext from './systemContext'\nimport systemReducer from './systemReducer'\n\nimport {\n    ADD_SYSTEM, \n    GET_SYSTEMS,\n    UPDATE_SYSTEM,\n    SELECT_SYSTEM,\n    DELETE_SYSTEM\n} from '../../types/index'\nimport axiosClient from '../../config/axios';\n\nconst SystemState = (props) => {\n\n    const initialState = {\n        systems:[],\n        systemSelected:null,\n        active:false\n    }\n\n    const [state, dispatch] = useReducer(systemReducer,initialState)\n\n    const addSystem = async (system)=>{\n        try {\n            const res = await axiosClient.post('/api/systems', system)\n            dispatch({\n                type:ADD_SYSTEM,\n                payload: res.data\n            })\n\n        } catch (error) {\n            \n        }\n\n    }\n    const getSystems = async (asset) =>{\n        try {\n            const res = await axiosClient.get('/api/systems', {params:{asset}})\n            //console.log(res)\n            dispatch({\n                type:GET_SYSTEMS,\n                payload: res.data.systems\n            })\n\n        } catch (error) {\n            \n        }\n    }\n\n    const updateSystem = async (system) =>{\n        try {\n            const id = system._id\n            const res = await axiosClient.put(`/api/systems/${id}`,system)\n            \n            dispatch({\n                type:UPDATE_SYSTEM\n            })\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    const deleteSystem = async (system) =>{\n        try {\n            const id = system._id\n            const idAsset = system.asset\n            const res = await axiosClient.delete(`/api/systems/${id}`, {params:{idAsset}})\n            \n            dispatch({\n                type:DELETE_SYSTEM,\n                payload:system\n            })\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    const selectSystem = (system) =>{\n        dispatch({\n            type:SELECT_SYSTEM,\n            payload: system\n        })\n    }\n\n    return ( \n        <systemContext.Provider\n            value ={{\n                systems:state.systems,\n                systemSelected: state.systemSelected,\n                active:state.active,\n                getSystems,\n                updateSystem,\n                addSystem,\n                selectSystem,\n                deleteSystem\n            }}\n        >\n            {props.children}\n        </systemContext.Provider>\n     );\n}\n \nexport default SystemState;"]},"metadata":{},"sourceType":"module"}