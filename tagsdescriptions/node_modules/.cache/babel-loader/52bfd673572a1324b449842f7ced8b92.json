{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/showTagDescriptor.js\";\nimport React, { useContext, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\n\nconst ShowTagDescritor = () => {\n  const {\n    tagname\n  } = useParams(); //return <h3>Requested topic ID: {topicId}</h3>;\n\n  const tContext = useContext(tagDescriptorContext);\n  const {\n    getTagDescriptor,\n    tagdescriptor\n  } = tContext;\n  useEffect(() => {\n    getTagDescriptor(tagname);\n  }, []);\n  if (!tagdescriptor) return null;\n  const [currenttagdescriptor] = tagdescriptor;\n\n  const putHTML = description => {\n    return {\n      description\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, tagdescriptor ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"TagDescriptor para el \", tagname), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, currenttagdescriptor.tagname), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: putHTML(currenttagdescriptor.description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }\n  }, \"No se encontr\\xF3 descriptor \", tagname));\n};\n\nexport default ShowTagDescritor;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/showTagDescriptor.js"],"names":["React","useContext","useEffect","Fragment","useParams","tagDescriptorContext","ShowTagDescritor","tagname","tContext","getTagDescriptor","tagdescriptor","currenttagdescriptor","putHTML","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAcH,SAAS,EAA7B,CAD2B,CAE7B;;AACE,QAAMI,QAAQ,GAAGP,UAAU,CAACI,oBAAD,CAA3B;AACA,QAAM;AAACI,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAAoCF,QAA1C;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,gBAAgB,CAACF,OAAD,CAAhB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAI,CAACG,aAAL,EAAoB,OAAO,IAAP;AAEpB,QAAM,CAACC,oBAAD,IAAyBD,aAA/B;;AAEA,QAAME,OAAO,GAAIC,WAAD,IAAe;AAC3B,WAAQ;AAACA,MAAAA;AAAD,KAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,aAAa,gBAGb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA2BH,OAA3B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,oBAAoB,CAACJ,OAAzB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAK,IAAA,uBAAuB,EAAEK,OAAO,CAACD,oBAAoB,CAACE,WAAtB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,CAHJ,CAHa,gBAWZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA+BN,OAA/B,CAbT,CADJ;AAmBH,CArCD;;AAuCA,eAAeD,gBAAf","sourcesContent":["import React, {useContext, useEffect, Fragment} from 'react';\nimport {useParams} from 'react-router-dom'\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext'\n\nconst ShowTagDescritor = () => { \n    const { tagname } = useParams();\n  //return <h3>Requested topic ID: {topicId}</h3>;\n    const tContext = useContext(tagDescriptorContext)\n    const {getTagDescriptor, tagdescriptor} = tContext;\n\n    useEffect(() => {\n        getTagDescriptor(tagname)\n    }, [])\n\n    if (!tagdescriptor) return null;\n\n    const [currenttagdescriptor] = tagdescriptor\n\n    const putHTML = (description)=>{\n        return ({description})\n    }\n\n    return ( \n        <Fragment>\n            {\n                tagdescriptor ?\n\n                (\n                <div>\n                    <h1>TagDescriptor para el {tagname}</h1>\n                    <p>{currenttagdescriptor.tagname}</p>\n                    <p><div dangerouslySetInnerHTML={putHTML(currenttagdescriptor.description)}></div></p>\n                </div>\n                )\n                \n            :\n                (<h1>No se encontr√≥ descriptor {tagname}</h1>)\n           }\n        </Fragment>\n\n     );\n}\n \nexport default ShowTagDescritor;"]},"metadata":{},"sourceType":"module"}