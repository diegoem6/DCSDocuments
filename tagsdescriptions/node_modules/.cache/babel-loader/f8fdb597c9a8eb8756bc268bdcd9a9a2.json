{"ast":null,"code":"import { FORM_TAGDESCRIPTOR, GET_TAGDESCRIPTOR, GET_TAGSDESCRIPTORS, CREATE_TAGDESCRIPTOR, SHOW_ERROR_TAGDESCRIPTOR, SELECT_TAGDESCRIPTOR, DESELECT_TAGDESCRIPTOR, DELETE_TAGDESCRIPTOR, UPDATE_TAGDESCRIPTOR, SEARCH_TAGSDESCRIPTORS, RESET_MESSAGE, VALIDATE_TAGDESCRIPTOR, INVALIDATE_TAGDESCRIPTOR, GET_TAGSDESCRIPTORS_RELATED, CREATE_DOCUMENT, SELECT_ONLY_DESCRIPTOR } from '../../types/index';\nimport { stat } from 'fs';\nexport default ((state, action) => {\n  switch (action.type) {\n    case FORM_TAGDESCRIPTOR:\n      return { ...state,\n        form: !state.form,\n        error: false\n      };\n\n    case GET_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptor: action.payload,\n        error: false\n      };\n\n    case GET_TAGSDESCRIPTORS:\n      return { ...state,\n        searchtagdescriptors: action.payload,\n        tagdescriptors: action.payload,\n        related: null,\n        error: false\n      };\n\n    case GET_TAGSDESCRIPTORS_RELATED:\n      return { ...state,\n        related: action.payload.filter(td => td.tagname !== state.tagdescriptor[0].tagname),\n        error: false\n      };\n\n    case CREATE_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptors: [...state.tagdescriptors, action.payload],\n        related: null,\n        form: false,\n        error: false\n      };\n\n    case RESET_MESSAGE:\n      return { ...state,\n        message: null\n      };\n\n    case SELECT_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptor: state.tagdescriptors.filter(tagdescriptor => tagdescriptor._id === action.payload),\n        related: null,\n        related: null,\n        error: false\n      };\n\n    case VALIDATE_TAGDESCRIPTOR:\n      return { ...state,\n        tagname_ok: true\n      };\n\n    case INVALIDATE_TAGDESCRIPTOR:\n      return { ...state,\n        message: action.payload,\n        tagname_ok: false\n      };\n\n    case DELETE_TAGDESCRIPTOR:\n      return { ...state,\n        tagdescriptors: state.tagdescriptors.filter(tagdescriptor => tagdescriptor._id !== action.payload),\n        searchtagdescriptors: state.searchtagdescriptors.filter(tagdescriptor => tagdescriptor._id !== action.payload),\n        tagdescriptor: null,\n        error: false\n      };\n\n    case SHOW_ERROR_TAGDESCRIPTOR:\n      return { ...state,\n        message: action.payload,\n        error: true\n      };\n\n    case DESELECT_TAGDESCRIPTOR:\n      return { ...state,\n        form: false,\n        tagdescriptor: null,\n        related: null,\n        error: false\n      };\n\n    case UPDATE_TAGDESCRIPTOR:\n      return { ...state,\n        form: false,\n        tagdescriptor: null,\n        error: false\n      };\n\n    case SEARCH_TAGSDESCRIPTORS:\n      return { ...state,\n        searchtagdescriptors: state.tagdescriptors.filter(tagdescriptor => tagdescriptor.tagname.indexOf(action.payload) > -1),\n        tagdescriptor: null,\n        form: false,\n        error: false\n      };\n\n    case CREATE_DOCUMENT:\n      return { ...state,\n        error: false,\n        urlDoc: action.payload\n      };\n\n    case SELECT_ONLY_DESCRIPTOR:\n      return { ...stat,\n        form: true,\n        tagdescriptor: action.payload,\n        error: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/context/tagdescriptor/tagDescriptorReducer.js"],"names":["FORM_TAGDESCRIPTOR","GET_TAGDESCRIPTOR","GET_TAGSDESCRIPTORS","CREATE_TAGDESCRIPTOR","SHOW_ERROR_TAGDESCRIPTOR","SELECT_TAGDESCRIPTOR","DESELECT_TAGDESCRIPTOR","DELETE_TAGDESCRIPTOR","UPDATE_TAGDESCRIPTOR","SEARCH_TAGSDESCRIPTORS","RESET_MESSAGE","VALIDATE_TAGDESCRIPTOR","INVALIDATE_TAGDESCRIPTOR","GET_TAGSDESCRIPTORS_RELATED","CREATE_DOCUMENT","SELECT_ONLY_DESCRIPTOR","stat","state","action","type","form","error","tagdescriptor","payload","searchtagdescriptors","tagdescriptors","related","filter","td","tagname","message","_id","tagname_ok","indexOf","urlDoc"],"mappings":"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","sourcesContent":["import {\n    FORM_TAGDESCRIPTOR, \n    GET_TAGDESCRIPTOR,\n    GET_TAGSDESCRIPTORS,\n    CREATE_TAGDESCRIPTOR,\n    SHOW_ERROR_TAGDESCRIPTOR,\n    SELECT_TAGDESCRIPTOR,\n    DESELECT_TAGDESCRIPTOR,\n    DELETE_TAGDESCRIPTOR,\n    UPDATE_TAGDESCRIPTOR,\n    SEARCH_TAGSDESCRIPTORS,\n    RESET_MESSAGE,\n    VALIDATE_TAGDESCRIPTOR,\n    INVALIDATE_TAGDESCRIPTOR,\n    GET_TAGSDESCRIPTORS_RELATED,\n    CREATE_DOCUMENT,\n    SELECT_ONLY_DESCRIPTOR} from '../../types/index'\nimport { stat } from 'fs'\n\nexport default (state,action)=>{\n    switch(action.type){\n        case FORM_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:!state.form,\n                error:false\n            })\n        case GET_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor: action.payload,\n                error:false\n            })\n        case GET_TAGSDESCRIPTORS:\n            return ({\n                ...state,\n                searchtagdescriptors: action.payload,\n                tagdescriptors: action.payload,\n                related:null,\n                error:false\n\n            })\n        case GET_TAGSDESCRIPTORS_RELATED:\n            return ({\n                ...state,\n                related: action.payload.filter (td => td.tagname !== state.tagdescriptor[0].tagname),\n                error:false\n\n            })\n        case CREATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors:[...state.tagdescriptors, action.payload],\n                related:null,\n                form:false,\n                error:false\n            })\n        case RESET_MESSAGE:\n            return ({\n                ...state,\n                message:null\n            })\n        case SELECT_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptor: state.tagdescriptors.filter(\n                    tagdescriptor => tagdescriptor._id === action.payload),\n                related:null,\n                related: null,\n                error:false\n            })\n        case VALIDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagname_ok:true\n            })\n        case INVALIDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                message: action.payload,\n                tagname_ok:false\n            })\n        case DELETE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                tagdescriptors: state.tagdescriptors.filter(\n                    tagdescriptor=>tagdescriptor._id !== action.payload\n                ),\n                searchtagdescriptors: state.searchtagdescriptors.filter(\n                    tagdescriptor=>tagdescriptor._id !== action.payload),\n                tagdescriptor: null,\n                error:false\n            })\n        case SHOW_ERROR_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                message:action.payload,\n                error:true\n            })\n        case DESELECT_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:false,\n                tagdescriptor:null,\n                related:null,\n                error:false\n            })\n        case UPDATE_TAGDESCRIPTOR:\n            return ({\n                ...state,\n                form:false,\n                tagdescriptor:null,\n                error:false\n            })\n        case SEARCH_TAGSDESCRIPTORS:\n            return ({\n                ...state,\n                searchtagdescriptors: state.tagdescriptors.filter(\n                    tagdescriptor=> tagdescriptor.tagname.indexOf(action.payload) > -1\n                ),\n                tagdescriptor: null,\n                form:false,\n                error:false\n            })\n        case CREATE_DOCUMENT:\n            return ({\n                ...state,\n                error:false, \n                urlDoc: action.payload\n            })\n        case SELECT_ONLY_DESCRIPTOR:\n            return ({\n                ...stat,\n                form: true,\n                tagdescriptor: action.payload,\n                error:false,\n            })\n        default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}