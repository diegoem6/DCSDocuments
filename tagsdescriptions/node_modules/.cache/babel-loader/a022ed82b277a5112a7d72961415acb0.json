{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/tagDescriptorList.js\";\nimport React, { useEffect, useContext, Fragment } from 'react';\nimport systemContext from '../../context/system/systemContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TagDescriptor from './tagDescriptor';\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\n\nconst TagDescriptorList = () => {\n  const sContext = useContext(systemContext);\n  const {\n    systemSelected,\n    getSystems\n  } = sContext;\n  const tContext = useContext(tagDescriptorContext);\n  const {\n    tagdescriptors,\n    getTagsDescriptors\n  } = tContext;\n\n  const onSubmit = () => {};\n\n  const onChange = () => {};\n\n  useEffect(() => {\n    const listTagsDescriptors = () => {\n      if (systemSelected) {\n        getTagsDescriptors(systemSelected._id);\n      }\n    };\n\n    listTagsDescriptors();\n  }, [systemSelected]);\n\n  if (!systemSelected) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }, \"Seleccione un sistema\");\n  }\n\n  if (!tagdescriptors) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, \"No hay documentos para el sistema seleccionado\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Tags descriptors del sistema: \", systemSelected.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, tagdescriptors === null || tagdescriptors.length === 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"tarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 44\n    }\n  }, \"No hay documentos para el sistema seleccionado\")) : tagdescriptors.map(tgd => /*#__PURE__*/React.createElement(TagDescriptor, {\n    tagdescriptor: tgd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  })) //  <TransitionGroup>\n  //  {tagdescriptors_temp.map(tagdescriptor => (\n  //      <CSSTransition\n  //          key={tagdescriptor._id}\n  //          timeout={200}\n  //          classNames=\"tarea\"\n  //      >\n  //          {/* <TagDescriptor \n  //              tagdescriptor={tagdescriptor}\n  //          /> */}\n  //      </CSSTransition>\n  //  ))}\n  //  </TransitionGroup>\n  ));\n};\n\nexport default TagDescriptorList;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/DCSDocuments/tagsdescriptions/src/components/tagsdescriptors/tagDescriptorList.js"],"names":["React","useEffect","useContext","Fragment","systemContext","CSSTransition","TransitionGroup","TagDescriptor","tagDescriptorContext","TagDescriptorList","sContext","systemSelected","getSystems","tContext","tagdescriptors","getTagsDescriptors","onSubmit","onChange","listTagsDescriptors","_id","name","length","map","tgd"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,QAAMC,QAAQ,GAAGR,UAAU,CAACE,aAAD,CAA3B;AACA,QAAM;AAACO,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAA+BF,QAArC;AAEA,QAAMG,QAAQ,GAAGX,UAAU,CAACM,oBAAD,CAA3B;AACA,QAAM;AAACM,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAAuCF,QAA7C;;AAEA,QAAMG,QAAQ,GAAG,MAAI,CAEpB,CAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAI,CAEpB,CAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,mBAAmB,GAAG,MAAI;AAC5B,UAAIP,cAAJ,EAAmB;AACfI,QAAAA,kBAAkB,CAACJ,cAAc,CAACQ,GAAhB,CAAlB;AACH;AACJ,KAJD;;AAKAD,IAAAA,mBAAmB;AACtB,GAPQ,EAON,CAACP,cAAD,CAPM,CAAT;;AASA,MAAG,CAACA,cAAJ,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;;AAED,MAAI,CAACG,cAAL,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAAP;AACH;;AAED,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAmCH,cAAc,CAACS,IAAlD,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,cAAc,KAAG,IAAjB,IAAyBA,cAAc,CAACO,MAAf,KAAwB,CAAlD,gBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAtB,CADJ,GAIGP,cAAc,CAACQ,GAAf,CAAmBC,GAAG,iBAClB,oBAAC,aAAD;AACI,IAAA,aAAa,EAAEA,GADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALR,CAUI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBJ,GAFJ,CADJ;AA+BH,CA/DD;;AAiEA,eAAed,iBAAf","sourcesContent":["import React, {useEffect, useContext, Fragment} from 'react';\nimport systemContext from '../../context/system/systemContext'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TagDescriptor from './tagDescriptor'\nimport tagDescriptorContext from '../../context/tagdescriptor/tagDescriptorContext';\n\n\nconst TagDescriptorList = () => {\n\n    const sContext = useContext(systemContext)\n    const {systemSelected, getSystems} = sContext\n    \n    const tContext = useContext(tagDescriptorContext)\n    const {tagdescriptors, getTagsDescriptors} = tContext\n\n    const onSubmit = ()=>{\n\n    }\n    const onChange = ()=>{\n\n    }\n\n    useEffect(() => {\n        const listTagsDescriptors = ()=>{\n            if (systemSelected){\n                getTagsDescriptors(systemSelected._id)\n            }\n        }\n        listTagsDescriptors()\n    }, [systemSelected])\n\n    if(!systemSelected) {\n        return <h2>Seleccione un sistema</h2>\n    }\n    \n    if (!tagdescriptors){\n        return <p>No hay documentos para el sistema seleccionado</p>\n    }\n\n    return ( \n        <Fragment>\n            <h2>Tags descriptors del sistema: {systemSelected.name}</h2>\n            <ul>\n                {(tagdescriptors===null || tagdescriptors.length===0)?\n                    (<li className=\"tarea\"><p>No hay documentos para el sistema seleccionado</p></li>)\n                :\n\n                    tagdescriptors.map(tgd =>(\n                        <TagDescriptor\n                            tagdescriptor={tgd}\n                        />\n                    ))\n                //  <TransitionGroup>\n                //  {tagdescriptors_temp.map(tagdescriptor => (\n                //      <CSSTransition\n                //          key={tagdescriptor._id}\n                //          timeout={200}\n                //          classNames=\"tarea\"\n                //      >\n                //          {/* <TagDescriptor \n                //              tagdescriptor={tagdescriptor}\n                //          /> */}\n                //      </CSSTransition>\n                //  ))}\n                //  </TransitionGroup>\n                   \n                }\n            </ul>\n        </Fragment>\n     );\n}\n \nexport default TagDescriptorList;"]},"metadata":{},"sourceType":"module"}